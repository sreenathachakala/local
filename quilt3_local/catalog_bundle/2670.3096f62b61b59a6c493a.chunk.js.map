{"version":3,"file":"2670.3096f62b61b59a6c493a.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./app/components/Sparkline/Sparkline.tsx","webpack://quilt-navigator/./app/containers/Bucket/PackageDialog/actions.ts","webpack://quilt-navigator/./app/containers/Bucket/PackageList/gql/PackageCount.generated.ts","webpack://quilt-navigator/./app/containers/Bucket/PackageList/gql/PackageList.generated.ts","webpack://quilt-navigator/./app/containers/Bucket/PackageList/PackageList.tsx","webpack://quilt-navigator/./app/containers/Bucket/WithPackagesSupport.tsx","webpack://quilt-navigator/./app/model/graphql/types.generated.ts","webpack://quilt-navigator/./app/model/index.ts","webpack://quilt-navigator/./app/utils/format.tsx","webpack://quilt-navigator/./app/utils/types.ts","webpack://quilt-navigator/./app/utils/useDebouncedInput.ts","webpack://quilt-navigator/./app/containers/Bucket/Pagination.js","webpack://quilt-navigator/./app/utils/SVG.js"],"sourcesContent":["import * as R from 'ramda'\nimport * as React from 'react'\nimport * as M from '@material-ui/core'\n\nimport * as SVG from 'utils/SVG'\n\ninterface SparklineProps extends M.BoxProps {\n  data: number[]\n  onCursor?: (idx: number | null) => void\n  width?: number\n  height?: number\n  stroke?: $TSFixMe // SVG.Paint\n  fill?: $TSFixMe // SVG.Paint\n  contourThickness?: number\n  contourStroke?: $TSFixMe // SVG.Paint\n  extendL?: boolean\n  extendR?: boolean\n  cursorLineThickness?: number\n  cursorLineExtendUp?: boolean\n  cursorLineExtendDown?: boolean\n  cursorLineStroke?: $TSFixMe // SVG.Paint\n  cursorCircleThickness?: number\n  cursorCircleR?: number\n  cursorCircleFill?: $TSFixMe // SVG.Paint\n  cursorCircleStroke?: $TSFixMe // SVG.Paint\n  padding?: number\n  px?: number\n  py?: number\n  pt?: number\n  pb?: number\n  pl?: number\n  pr?: number\n  boxProps?: M.BoxProps\n}\n\nexport default function Sparkline({\n  data, // PT.arrayOf(PT.number).isRequired,\n  onCursor,\n  width = 200,\n  height = 20,\n  stroke = SVG.Paint.Color('currentColor'),\n  fill = SVG.Paint.None(),\n  contourThickness = 1,\n  contourStroke = stroke,\n  extendL = false,\n  extendR = false,\n  cursorLineThickness = contourThickness,\n  cursorLineExtendUp = true,\n  cursorLineExtendDown = true,\n  cursorLineStroke = stroke,\n  cursorCircleThickness = cursorLineThickness,\n  cursorCircleR = cursorCircleThickness,\n  cursorCircleFill = SVG.Paint.None(),\n  cursorCircleStroke = stroke,\n  padding = 3,\n  px = padding,\n  py = padding,\n  pt = py,\n  pb = py,\n  pl = px,\n  pr = px,\n  boxProps,\n  ...props\n}: SparklineProps) {\n  const [cursor, showCursor] = React.useState<number | null>(null)\n  const hideCursor = React.useCallback(() => showCursor(null), [showCursor])\n\n  const handleMove = React.useCallback(\n    (e: React.MouseEvent) => {\n      const rect = e.currentTarget.getBoundingClientRect()\n      const pos = (e.clientX - rect.x - pl) / (rect.width - pl - pr)\n      const step = 1 / (data.length - 1)\n      const idx = R.clamp(0, data.length - 1, Math.round(pos / step))\n      showCursor(idx)\n      if (onCursor) onCursor(idx)\n    },\n    [showCursor, onCursor, data, pl, pr],\n  )\n\n  const handleLeave = React.useCallback(() => {\n    hideCursor()\n    if (onCursor) onCursor(null)\n  }, [hideCursor, onCursor])\n\n  const contourShape = React.useMemo(() => {\n    const max = Math.max(...data) || 1\n\n    const vfactor = (height - pt - pb) / max\n    const hfactor = (width - pl - pr) / (data.length - 1)\n\n    const dataPoints = data.map((d, i) => ({\n      x: pl + i * hfactor,\n      y: pt + (max - d) * vfactor,\n    }))\n    return [\n      ...(extendL ? [{ ...dataPoints[0], x: 0 }] : []),\n      ...dataPoints,\n      ...(extendR ? [{ ...dataPoints[data.length - 1], x: width }] : []),\n    ]\n  }, [data, width, height, pt, pb, pl, pr, extendR, extendL])\n\n  const contourStrokePaint = SVG.usePaint(contourStroke)\n  const cursorLineStrokePaint = SVG.usePaint(cursorLineStroke)\n  const cursorCircleFillPaint = SVG.usePaint(cursorCircleFill)\n  const cursorCircleStrokePaint = SVG.usePaint(cursorCircleStroke)\n  const fillPaint = SVG.usePaint(fill)\n\n  const fillShape: null | typeof contourShape = React.useMemo(\n    () =>\n      SVG.Paint.case(\n        {\n          None: () => null,\n          _: () => [\n            ...contourShape,\n            { ...contourShape[contourShape.length - 1], y: height },\n            { ...contourShape[0], y: height },\n            contourShape[0],\n          ],\n        },\n        fill,\n      ),\n    [fill, contourShape, height],\n  )\n\n  const cursorPos = cursor === null ? null : contourShape[cursor + (extendL ? 1 : 0)]\n\n  return (\n    <M.Box\n      component=\"svg\"\n      // @ts-expect-error\n      viewBox={`0 0 ${width} ${height}`}\n      onMouseLeave={handleLeave}\n      onMouseMove={handleMove}\n      {...props}\n      {...boxProps}\n    >\n      <defs>\n        {contourStrokePaint.def}\n        {cursorLineStrokePaint.def}\n        {cursorCircleFillPaint.def}\n        {cursorCircleStrokePaint.def}\n        {fillPaint.def}\n      </defs>\n      <g>\n        {fillShape && (\n          <polyline\n            points={SVG.pointsToSVG(fillShape)}\n            fill={fillPaint.ref}\n            pointerEvents=\"auto\"\n            stroke=\"none\"\n            strokeWidth=\"0\"\n          />\n        )}\n        <polyline\n          points={SVG.pointsToSVG(contourShape)}\n          stroke={contourStrokePaint.ref}\n          strokeWidth={contourThickness}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"miter\"\n          fill=\"none\"\n        />\n        {!!cursorPos && !!onCursor && (\n          <g>\n            {(cursorLineExtendUp || cursorLineExtendDown) && (\n              <line\n                x1={cursorPos.x}\n                y1={cursorLineExtendUp ? 0 : cursorPos.y}\n                x2={cursorPos.x}\n                y2={cursorLineExtendDown ? height : cursorPos.y}\n                stroke={cursorLineStrokePaint.ref}\n                strokeWidth={cursorLineThickness}\n              />\n            )}\n            <circle\n              cx={cursorPos.x}\n              cy={cursorPos.y}\n              r={cursorCircleR}\n              stroke={cursorCircleStrokePaint.ref}\n              strokeWidth={cursorCircleThickness}\n              fill={cursorCircleFillPaint.ref}\n            />\n          </g>\n        )}\n      </g>\n    </M.Box>\n  )\n}\n","import type * as H from 'history'\nimport * as React from 'react'\nimport * as RRDom from 'react-router-dom'\n\nimport type { ActionPreferences } from 'utils/BucketPreferences'\n\nconst Actions: Partial<ActionPreferences> = {\n  revisePackage: true,\n}\n\ntype Action = keyof typeof Actions\n\nfunction clearActions(searchParams: URLSearchParams, history: H.History) {\n  searchParams.delete('action')\n  history.replace({\n    search: searchParams.toString(),\n  })\n}\n\nfunction isActions(actions: string[]): actions is Action[] {\n  return actions.every((a) => !!Actions[a as Action])\n}\n\nexport default function useInitialActions(): Action[] {\n  const history = RRDom.useHistory()\n  const location = RRDom.useLocation()\n\n  const searchParams = React.useMemo(\n    () => new URLSearchParams(location.search),\n    [location.search],\n  )\n  const actions = searchParams.getAll('action')\n  const initialActions = React.useRef<Action[]>(isActions(actions) ? actions : [])\n\n  React.useEffect(() => {\n    if (searchParams.has('action')) clearActions(searchParams, history)\n  }, [history, searchParams])\n\n  return initialActions.current\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'\nimport * as Types from '../../../../model/graphql/types.generated'\n\nexport type containers_Bucket_PackageList_gql_PackageCountQueryVariables = Types.Exact<{\n  bucket: Types.Scalars['String']\n  filter: Types.Maybe<Types.Scalars['String']>\n}>\n\nexport type containers_Bucket_PackageList_gql_PackageCountQuery = {\n  readonly __typename: 'Query'\n} & {\n  readonly packages: Types.Maybe<\n    { readonly __typename: 'PackageList' } & Pick<Types.PackageList, 'total'>\n  >\n}\n\nexport const containers_Bucket_PackageList_gql_PackageCountDocument = {\n  kind: 'Document',\n  definitions: [\n    {\n      kind: 'OperationDefinition',\n      operation: 'query',\n      name: { kind: 'Name', value: 'containers_Bucket_PackageList_gql_PackageCount' },\n      variableDefinitions: [\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'bucket' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n          },\n        },\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'filter' } },\n          type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n        },\n      ],\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [\n          {\n            kind: 'Field',\n            name: { kind: 'Name', value: 'packages' },\n            arguments: [\n              {\n                kind: 'Argument',\n                name: { kind: 'Name', value: 'bucket' },\n                value: { kind: 'Variable', name: { kind: 'Name', value: 'bucket' } },\n              },\n              {\n                kind: 'Argument',\n                name: { kind: 'Name', value: 'filter' },\n                value: { kind: 'Variable', name: { kind: 'Name', value: 'filter' } },\n              },\n            ],\n            selectionSet: {\n              kind: 'SelectionSet',\n              selections: [{ kind: 'Field', name: { kind: 'Name', value: 'total' } }],\n            },\n          },\n        ],\n      },\n    },\n  ],\n} as unknown as DocumentNode<\n  containers_Bucket_PackageList_gql_PackageCountQuery,\n  containers_Bucket_PackageList_gql_PackageCountQueryVariables\n>\n\nexport { containers_Bucket_PackageList_gql_PackageCountDocument as default }\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'\nimport * as Types from '../../../../model/graphql/types.generated'\n\nexport type containers_Bucket_PackageList_gql_PackageListQueryVariables = Types.Exact<{\n  bucket: Types.Scalars['String']\n  filter: Types.Maybe<Types.Scalars['String']>\n  page: Types.Scalars['Int']\n  perPage: Types.Scalars['Int']\n  order: Types.PackageListOrder\n}>\n\nexport type containers_Bucket_PackageList_gql_PackageListQuery = {\n  readonly __typename: 'Query'\n} & {\n  readonly packages: Types.Maybe<\n    { readonly __typename: 'PackageList' } & {\n      readonly page: ReadonlyArray<\n        { readonly __typename: 'Package' } & Pick<\n          Types.Package,\n          'bucket' | 'name' | 'modified'\n        > & {\n            readonly revisions: { readonly __typename: 'PackageRevisionList' } & Pick<\n              Types.PackageRevisionList,\n              'total'\n            >\n            readonly accessCounts: Types.Maybe<\n              { readonly __typename: 'AccessCounts' } & Pick<\n                Types.AccessCounts,\n                'total'\n              > & {\n                  readonly counts: ReadonlyArray<\n                    { readonly __typename: 'AccessCountForDate' } & Pick<\n                      Types.AccessCountForDate,\n                      'date' | 'value'\n                    >\n                  >\n                }\n            >\n            readonly revision: Types.Maybe<\n              { readonly __typename: 'PackageRevision' } & Pick<\n                Types.PackageRevision,\n                'message' | 'userMeta'\n              >\n            >\n          }\n      >\n    }\n  >\n}\n\nexport const containers_Bucket_PackageList_gql_PackageListDocument = {\n  kind: 'Document',\n  definitions: [\n    {\n      kind: 'OperationDefinition',\n      operation: 'query',\n      name: { kind: 'Name', value: 'containers_Bucket_PackageList_gql_PackageList' },\n      variableDefinitions: [\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'bucket' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n          },\n        },\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'filter' } },\n          type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n        },\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'page' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'Int' } },\n          },\n        },\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'perPage' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'Int' } },\n          },\n        },\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'order' } },\n          type: {\n            kind: 'NonNullType',\n            type: {\n              kind: 'NamedType',\n              name: { kind: 'Name', value: 'PackageListOrder' },\n            },\n          },\n        },\n      ],\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [\n          {\n            kind: 'Field',\n            name: { kind: 'Name', value: 'packages' },\n            arguments: [\n              {\n                kind: 'Argument',\n                name: { kind: 'Name', value: 'bucket' },\n                value: { kind: 'Variable', name: { kind: 'Name', value: 'bucket' } },\n              },\n              {\n                kind: 'Argument',\n                name: { kind: 'Name', value: 'filter' },\n                value: { kind: 'Variable', name: { kind: 'Name', value: 'filter' } },\n              },\n            ],\n            selectionSet: {\n              kind: 'SelectionSet',\n              selections: [\n                {\n                  kind: 'Field',\n                  name: { kind: 'Name', value: 'page' },\n                  arguments: [\n                    {\n                      kind: 'Argument',\n                      name: { kind: 'Name', value: 'number' },\n                      value: { kind: 'Variable', name: { kind: 'Name', value: 'page' } },\n                    },\n                    {\n                      kind: 'Argument',\n                      name: { kind: 'Name', value: 'perPage' },\n                      value: {\n                        kind: 'Variable',\n                        name: { kind: 'Name', value: 'perPage' },\n                      },\n                    },\n                    {\n                      kind: 'Argument',\n                      name: { kind: 'Name', value: 'order' },\n                      value: { kind: 'Variable', name: { kind: 'Name', value: 'order' } },\n                    },\n                  ],\n                  selectionSet: {\n                    kind: 'SelectionSet',\n                    selections: [\n                      { kind: 'Field', name: { kind: 'Name', value: 'bucket' } },\n                      { kind: 'Field', name: { kind: 'Name', value: 'name' } },\n                      { kind: 'Field', name: { kind: 'Name', value: 'modified' } },\n                      {\n                        kind: 'Field',\n                        name: { kind: 'Name', value: 'revisions' },\n                        selectionSet: {\n                          kind: 'SelectionSet',\n                          selections: [\n                            { kind: 'Field', name: { kind: 'Name', value: 'total' } },\n                          ],\n                        },\n                      },\n                      {\n                        kind: 'Field',\n                        name: { kind: 'Name', value: 'accessCounts' },\n                        selectionSet: {\n                          kind: 'SelectionSet',\n                          selections: [\n                            { kind: 'Field', name: { kind: 'Name', value: 'total' } },\n                            {\n                              kind: 'Field',\n                              name: { kind: 'Name', value: 'counts' },\n                              selectionSet: {\n                                kind: 'SelectionSet',\n                                selections: [\n                                  {\n                                    kind: 'Field',\n                                    name: { kind: 'Name', value: 'date' },\n                                  },\n                                  {\n                                    kind: 'Field',\n                                    name: { kind: 'Name', value: 'value' },\n                                  },\n                                ],\n                              },\n                            },\n                          ],\n                        },\n                      },\n                      {\n                        kind: 'Field',\n                        name: { kind: 'Name', value: 'revision' },\n                        selectionSet: {\n                          kind: 'SelectionSet',\n                          selections: [\n                            { kind: 'Field', name: { kind: 'Name', value: 'message' } },\n                            { kind: 'Field', name: { kind: 'Name', value: 'userMeta' } },\n                          ],\n                        },\n                      },\n                    ],\n                  },\n                },\n              ],\n            },\n          },\n        ],\n      },\n    },\n  ],\n} as unknown as DocumentNode<\n  containers_Bucket_PackageList_gql_PackageListQuery,\n  containers_Bucket_PackageList_gql_PackageListQueryVariables\n>\n\nexport { containers_Bucket_PackageList_gql_PackageListDocument as default }\n","import * as dateFns from 'date-fns'\nimport * as jsonpath from 'jsonpath'\nimport * as R from 'ramda'\nimport * as React from 'react'\nimport * as RRDom from 'react-router-dom'\nimport * as M from '@material-ui/core'\nimport { fade } from '@material-ui/core/styles'\nimport type { ResultOf } from '@graphql-typed-document-node/core'\n\nimport Skeleton from 'components/Skeleton'\nimport Sparkline from 'components/Sparkline'\nimport * as Model from 'model'\nimport * as BucketPreferences from 'utils/BucketPreferences'\nimport MetaTitle from 'utils/MetaTitle'\nimport * as NamedRoutes from 'utils/NamedRoutes'\nimport * as SVG from 'utils/SVG'\nimport StyledLink from 'utils/StyledLink'\nimport * as Format from 'utils/format'\nimport parseSearch from 'utils/parseSearch'\nimport mkStorage from 'utils/storage'\nimport { readableQuantity } from 'utils/string'\nimport { JsonRecord } from 'utils/types'\nimport useDebouncedInput from 'utils/useDebouncedInput'\nimport usePrevious from 'utils/usePrevious'\nimport useQuery from 'utils/useQuery'\n\nimport * as PD from '../PackageDialog'\nimport Pagination from '../Pagination'\nimport WithPackagesSupport from '../WithPackagesSupport'\nimport { displayError } from '../errors'\n\nimport PACKAGE_COUNT_QUERY from './gql/PackageCount.generated'\nimport PACKAGE_LIST_QUERY from './gql/PackageList.generated'\n\nconst EXAMPLE_PACKAGE_URL = 'https://docs.quiltdata.com/walkthrough/editing-a-package'\n\nconst PER_PAGE = 30\n\nconst SORT_OPTIONS = [\n  {\n    key: 'modified',\n    value: Model.GQLTypes.PackageListOrder.MODIFIED,\n    label: 'Updated',\n  },\n  {\n    key: 'name',\n    value: Model.GQLTypes.PackageListOrder.NAME,\n    label: 'Name',\n  },\n] as const\n\ntype SortMode = typeof SORT_OPTIONS[number]['key']\n\nconst DEFAULT_SORT = SORT_OPTIONS[0]\n\n// Possible values are 'modified', 'name'\nconst storage = mkStorage({ sortPackagesBy: 'SORT_PACKAGES_BY' })\n\nconst getSort = (key: unknown) => {\n  if (!key) return DEFAULT_SORT\n  return SORT_OPTIONS.find((o) => o.key === key) || DEFAULT_SORT\n}\n\ntype CountsProps = NonNullable<\n  NonNullable<\n    ResultOf<typeof PACKAGE_LIST_QUERY>['packages']\n  >['page'][number]['accessCounts']\n>\n\nfunction Counts({ counts, total }: CountsProps) {\n  const [cursor, setCursor] = React.useState<number | null>(null)\n  const t = M.useTheme()\n  const xs = M.useMediaQuery(t.breakpoints.down('xs'))\n  const sm = M.useMediaQuery(t.breakpoints.down('sm'))\n  // eslint-disable-next-line no-nested-ternary\n  const sparklineW = xs ? 176 : sm ? 300 : 400\n  const sparklineH = xs ? 32 : 40\n  return (\n    <M.Box position=\"absolute\" right={0} top={0} bottom={0}>\n      <M.Box position=\"absolute\" right={16} top={16} whiteSpace=\"nowrap\">\n        <M.Typography\n          variant=\"body2\"\n          color={cursor === null ? 'textSecondary' : 'textPrimary'}\n          component=\"span\"\n          noWrap\n        >\n          {cursor === null\n            ? 'Total views'\n            : dateFns.format(counts[cursor].date, `MMM do`)}\n          :\n        </M.Typography>\n        <M.Box\n          component=\"span\"\n          textAlign=\"right\"\n          ml={1}\n          minWidth={30}\n          display=\"inline-block\"\n        >\n          <M.Typography\n            variant=\"subtitle2\"\n            color={cursor === null ? 'textSecondary' : 'textPrimary'}\n            component=\"span\"\n          >\n            {readableQuantity(cursor === null ? total : counts[cursor].value)}\n          </M.Typography>\n        </M.Box>\n      </M.Box>\n      <Sparkline\n        boxProps={{\n          position: 'absolute',\n          right: 0,\n          bottom: 0,\n          width: sparklineW,\n          height: sparklineH,\n        }}\n        data={R.pluck('value', counts)}\n        onCursor={setCursor}\n        width={sparklineW}\n        height={sparklineH}\n        pb={8}\n        pt={5}\n        px={10}\n        extendL\n        extendR\n        stroke={SVG.Paint.Color(M.colors.blue[500])}\n        fill={SVG.Paint.Server(\n          <linearGradient>\n            <stop offset=\"0\" stopColor={fade(M.colors.blue[500], 0)} />\n            <stop offset=\"30%\" stopColor={fade(M.colors.blue[500], 0.3)} />\n          </linearGradient>,\n        )}\n        contourThickness={1.5}\n        cursorLineExtendUp={false}\n        cursorCircleR={3}\n        cursorCircleFill={SVG.Paint.Color(M.colors.common.white)}\n      />\n    </M.Box>\n  )\n}\n\nconst useRevisionAttributesStyles = M.makeStyles((t) => ({\n  revisionsNumber: {\n    ...t.typography.subtitle2,\n    color: t.palette.text.secondary,\n    position: 'relative',\n  },\n  updated: {\n    ...t.typography.body2,\n    color: t.palette.text.secondary,\n    position: 'relative',\n    marginLeft: t.spacing(2),\n  },\n}))\n\ninterface RevisionAttributesProps {\n  className: string\n  revisions: {\n    total: number\n  }\n  modified: Date\n}\n\nfunction RevisionAttributes({ className, modified, revisions }: RevisionAttributesProps) {\n  const classes = useRevisionAttributesStyles()\n  const t = M.useTheme()\n  const xs = M.useMediaQuery(t.breakpoints.down('xs'))\n  return (\n    <div className={className}>\n      <span className={classes.revisionsNumber}>\n        {revisions.total}{' '}\n        {xs ? (\n          'Rev.'\n        ) : (\n          <Format.Plural value={revisions.total} one=\"Revision\" other=\"Revisions\" />\n        )}\n      </span>\n      <span\n        className={classes.updated}\n        title={modified ? modified.toString() : undefined}\n      >\n        {xs ? 'Upd. ' : 'Updated '}\n        {modified ? <Format.Relative value={modified} /> : '[unknown: see console]'}\n      </span>\n    </div>\n  )\n}\n\nconst useRevisionMetaStyles = M.makeStyles((t) => ({\n  root: {\n    borderTop: `1px solid ${t.palette.divider}`,\n    padding: t.spacing(2),\n    ...t.typography.body2,\n    color: t.palette.text.secondary,\n  },\n  section: {\n    '& + &': {\n      marginTop: t.spacing(1),\n    },\n  },\n  tag: {\n    '& + &': {\n      marginLeft: t.spacing(1),\n    },\n  },\n}))\n\ninterface RevisionMetaProps {\n  sections: (string | string[])[]\n}\n\nfunction RevisionMeta({ sections }: RevisionMetaProps) {\n  const classes = useRevisionMetaStyles()\n\n  return (\n    <div className={classes.root}>\n      {sections.map((section, i) => (\n        <div className={classes.section} key={`${i}+${section}`}>\n          {Array.isArray(section)\n            ? section.map((label, j) => (\n                <M.Chip\n                  className={classes.tag}\n                  label={label}\n                  key={`${j}+${label}`}\n                  size=\"small\"\n                  variant=\"outlined\"\n                />\n              ))\n            : section}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nfunction usePackageMeta(\n  name: string,\n  revision: { message: string | null; userMeta: JsonRecord | null } | null,\n) {\n  // TODO: move visible meta calculation to the graphql\n  const { preferences } = BucketPreferences.use()\n  return React.useMemo(() => {\n    const output: (string | string[])[] = []\n    try {\n      if (!preferences?.ui.package_description) return output\n      const { message, userMeta } =\n        Object.entries(preferences?.ui.package_description)\n          .reverse() // The last found config wins\n          .find(([nameRegex]) => new RegExp(nameRegex).test(name))?.[1] || {}\n      if (message && revision?.message) output.push(revision.message)\n      if (userMeta && revision?.userMeta)\n        userMeta.forEach((jPath) => {\n          const section = jsonpath.value(revision.userMeta, jPath)\n          if (typeof section === 'string') output.push(section)\n          if (Array.isArray(section)) output.push(section.filter(R.is(String)))\n        })\n      return output\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error)\n      return output\n    }\n  }, [name, preferences, revision])\n}\n\nconst usePackageStyles = M.makeStyles((t) => ({\n  root: {\n    [t.breakpoints.down('xs')]: {\n      borderRadius: 0,\n    },\n\n    [t.breakpoints.up('sm')]: {\n      marginTop: t.spacing(1),\n    },\n  },\n  base: {\n    padding: t.spacing(2),\n    position: 'relative',\n  },\n  handleContainer: {\n    WebkitBoxOrient: 'vertical',\n    WebkitLineClamp: 2,\n    display: '-webkit-box',\n    overflow: 'hidden',\n    overflowWrap: 'break-word',\n    paddingRight: t.spacing(21),\n    textOverflow: 'ellipsis',\n  },\n  handle: {\n    fontSize: t.typography.pxToRem(16),\n    fontWeight: t.typography.fontWeightMedium,\n    lineHeight: t.typography.pxToRem(20),\n  },\n  handleText: {\n    position: 'relative',\n  },\n  handleClickArea: {\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n\n    '$handle:hover &': {\n      background: t.palette.action.hover,\n    },\n  },\n  attributes: {\n    marginTop: t.spacing(1),\n  },\n}))\n\ntype PackageProps = NonNullable<\n  ResultOf<typeof PACKAGE_LIST_QUERY>['packages']\n>['page'][number]\n\nfunction Package({\n  name,\n  modified,\n  revisions,\n  bucket,\n  accessCounts,\n  revision,\n}: PackageProps) {\n  const { urls } = NamedRoutes.use()\n  const classes = usePackageStyles()\n  const meta = usePackageMeta(name, revision)\n  return (\n    <M.Paper className={classes.root}>\n      <div className={classes.base}>\n        <div className={classes.handleContainer}>\n          <RRDom.Link\n            className={classes.handle}\n            to={urls.bucketPackageDetail(bucket, name)}\n          >\n            <span className={classes.handleClickArea} />\n            <span className={classes.handleText}>{name}</span>\n          </RRDom.Link>\n        </div>\n        <RevisionAttributes\n          className={classes.attributes}\n          modified={modified}\n          revisions={revisions}\n        />\n        {!!accessCounts && <Counts {...accessCounts} />}\n      </div>\n      {!!meta && !!meta.length && <RevisionMeta sections={meta} />}\n    </M.Paper>\n  )\n}\n\nfunction PackageSkel() {\n  const classes = usePackageStyles()\n  return (\n    <M.Paper className={classes.root}>\n      <M.Box p={2}>\n        <Skeleton height={20} width=\"50%\" borderRadius=\"borderRadius\" />\n        <Skeleton mt={1} height={20} width=\"70%\" borderRadius=\"borderRadius\" />\n      </M.Box>\n    </M.Paper>\n  )\n}\n\nconst useSortDropdownStyles = M.makeStyles((t) => ({\n  root: {\n    paddingBottom: t.spacing(1),\n    paddingLeft: t.spacing(1.5),\n    paddingTop: t.spacing(1),\n    textTransform: 'none',\n    ...t.typography.body1,\n  },\n}))\n\ninterface SortDropdownProps {\n  value: SortMode\n  options: typeof SORT_OPTIONS\n  makeSortUrl: (mode: SortMode) => string\n}\n\nfunction SortDropdown({ value, options, makeSortUrl }: SortDropdownProps) {\n  const t = M.useTheme()\n  const xs = M.useMediaQuery(t.breakpoints.down('xs'))\n  const classes = useSortDropdownStyles()\n  const [anchor, setAnchor] = React.useState(null)\n  const open = React.useCallback(\n    (evt) => {\n      setAnchor(evt.target)\n    },\n    [setAnchor],\n  )\n  const close = React.useCallback(() => {\n    setAnchor(null)\n  }, [setAnchor])\n\n  const handleClick = React.useCallback(\n    (key) => {\n      storage.set('sortPackagesBy', key)\n      close()\n    },\n    [close],\n  )\n\n  const selected = getSort(value)\n\n  return (\n    <>\n      {xs ? (\n        <M.IconButton onClick={open}>\n          <M.Icon>sort</M.Icon>\n        </M.IconButton>\n      ) : (\n        <M.Button onClick={open} className={classes.root}>\n          Sort by:\n          <M.Box component=\"span\" fontWeight=\"fontWeightMedium\" ml={1}>\n            {selected.label}\n          </M.Box>\n          <M.Icon>expand_more</M.Icon>\n        </M.Button>\n      )}\n      <M.Menu anchorEl={anchor} open={!!anchor} onClose={close}>\n        {options.map((o) => (\n          <M.MenuItem\n            onClick={() => handleClick(o.key)}\n            component={RRDom.Link}\n            to={makeSortUrl(o.key)}\n            key={o.key}\n            selected={o.key === value}\n          >\n            {o.label}\n          </M.MenuItem>\n        ))}\n      </M.Menu>\n    </>\n  )\n}\n\nconst useStyles = M.makeStyles((t) => ({\n  paper: {\n    [t.breakpoints.down('xs')]: {\n      borderRadius: 0,\n      boxShadow: 'none',\n    },\n  },\n  searchIcon: {\n    left: 8,\n    pointerEvents: 'none',\n    position: 'absolute',\n  },\n  input: {\n    paddingLeft: t.spacing(5),\n    paddingRight: t.spacing(5),\n    paddingBottom: 11,\n    paddingTop: 10,\n    [t.breakpoints.down('xs')]: {\n      paddingBottom: 15,\n      paddingTop: 14,\n    },\n  },\n  clear: {\n    position: 'absolute',\n    right: -4,\n  },\n}))\n\ninterface PackageListProps {\n  bucket: string\n  sort?: string\n  filter?: string\n  page?: number\n}\n\nfunction PackageList({ bucket, sort, filter, page }: PackageListProps) {\n  const history = RRDom.useHistory()\n  const { urls } = NamedRoutes.use()\n  const classes = useStyles()\n\n  const scrollRef = React.useRef<HTMLDivElement | null>(null)\n\n  const computedPage = page || 1\n  const computedSort = getSort(sort)\n  const computedFilter = filter || ''\n  const filtering = useDebouncedInput(computedFilter, 500)\n\n  const totalCountQuery = useQuery({\n    query: PACKAGE_COUNT_QUERY,\n    variables: { bucket, filter: null },\n  })\n\n  const filteredCountQuery = useQuery({\n    query: PACKAGE_COUNT_QUERY,\n    variables: { bucket, filter: filter || null },\n  })\n\n  const packagesQuery = useQuery({\n    query: PACKAGE_LIST_QUERY,\n    variables: {\n      bucket,\n      filter: filter || null,\n      order: computedSort.value,\n      page: computedPage,\n      perPage: PER_PAGE,\n    },\n  })\n\n  const makeSortUrl = React.useCallback(\n    (s) =>\n      urls.bucketPackageList(bucket, {\n        filter,\n        sort: s === DEFAULT_SORT.key ? undefined : s,\n        // reset page if sort order changed\n        p: s === computedSort.key ? page : undefined,\n      }),\n    [urls, bucket, filter, computedSort, page],\n  )\n\n  const makePageUrl = React.useCallback(\n    (newP) =>\n      urls.bucketPackageList(bucket, { filter, sort, p: newP !== 1 ? newP : undefined }),\n    [urls, bucket, filter, sort],\n  )\n\n  // set filter query param on filter input change (debounced)\n  React.useEffect(() => {\n    if (filtering.value !== computedFilter) {\n      history.push(\n        urls.bucketPackageList(bucket, { filter: filtering.value || undefined, sort }),\n      )\n    }\n  }, [history, urls, bucket, sort, filtering.value, computedFilter])\n\n  // set sort query param to previously selected\n  const sortPackagesBy = storage.load()?.sortPackagesBy\n  React.useEffect(() => {\n    if (sort || sort === sortPackagesBy) return\n    switch (sortPackagesBy) {\n      case 'modified':\n      case 'name':\n        history.replace(makeSortUrl(sortPackagesBy))\n      // no default\n    }\n  }, [history, makeSortUrl, sort, sortPackagesBy])\n\n  // scroll to top on page change\n  usePrevious(computedPage, (prev) => {\n    if (prev && computedPage !== prev && scrollRef.current) {\n      scrollRef.current.scrollIntoView()\n    }\n  })\n\n  const { preferences } = BucketPreferences.use()\n\n  const createDialog = PD.usePackageCreationDialog({\n    bucket,\n    delayHashing: true,\n    disableStateDisplay: true,\n  })\n  const openPackageCreationDialog = React.useCallback(\n    () => createDialog.open(),\n    [createDialog],\n  )\n\n  return (\n    <>\n      {createDialog.render({\n        successTitle: 'Package created',\n        successRenderMessage: ({ packageLink }) => (\n          <>Package {packageLink} successfully created</>\n        ),\n        title: 'Create package',\n      })}\n\n      {totalCountQuery.case({\n        fetching: () => (\n          <M.Box pb={{ xs: 0, sm: 5 }} mx={{ xs: -2, sm: 0 }}>\n            <M.Box mt={{ xs: 0, sm: 3 }} display=\"flex\" justifyContent=\"space-between\">\n              <M.Box\n                component={M.Paper}\n                className={classes.paper}\n                flexGrow={{ xs: 1, sm: 0 }}\n                px={2}\n                py={{ xs: 1.75, sm: 1.25 }}\n              >\n                <Skeleton\n                  height={20}\n                  width={{ xs: '100%', sm: 160 }}\n                  borderRadius=\"borderRadius\"\n                />\n              </M.Box>\n              <M.Box\n                component={M.Paper}\n                className={classes.paper}\n                px={2}\n                py={{ xs: 1.75, sm: 1.25 }}\n              >\n                <Skeleton\n                  height={20}\n                  width={{ xs: 24, sm: 120 }}\n                  borderRadius=\"borderRadius\"\n                />\n              </M.Box>\n            </M.Box>\n            {R.range(0, 10).map((i) => (\n              <PackageSkel key={i} />\n            ))}\n          </M.Box>\n        ),\n        error: displayError(),\n        data: (totalCountData) => {\n          if (!totalCountData.packages?.total) {\n            return (\n              <M.Box pt={5} textAlign=\"center\">\n                <M.Typography variant=\"h4\">No packages</M.Typography>\n                <M.Box pt={3} />\n                {preferences?.ui?.actions?.createPackage && (\n                  <>\n                    <M.Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={openPackageCreationDialog}\n                    >\n                      Create package\n                    </M.Button>\n                    <M.Box pt={2} />\n                    <M.Typography>\n                      Or{' '}\n                      <StyledLink href={EXAMPLE_PACKAGE_URL} target=\"_blank\">\n                        push a package\n                      </StyledLink>{' '}\n                      with the Quilt Python API.\n                    </M.Typography>\n                  </>\n                )}\n              </M.Box>\n            )\n          }\n\n          return (\n            <M.Box pb={{ xs: 0, sm: 5 }} mx={{ xs: -2, sm: 0 }}>\n              <M.Box position=\"relative\" top={-80} ref={scrollRef} />\n              <M.Box display=\"flex\" mt={{ xs: 0, sm: 3 }}>\n                <M.Box\n                  component={M.Paper}\n                  className={classes.paper}\n                  flexGrow={{ xs: 1, sm: 0 }}\n                  position=\"relative\"\n                >\n                  <M.InputBase\n                    {...filtering.input}\n                    placeholder=\"Filter packages\"\n                    classes={{ input: classes.input }}\n                    fullWidth\n                    startAdornment={\n                      <M.Icon className={classes.searchIcon}>search</M.Icon>\n                    }\n                    endAdornment={\n                      <M.Fade in={!!filtering.input.value}>\n                        <M.IconButton\n                          className={classes.clear}\n                          onClick={() => filtering.set('')}\n                        >\n                          <M.Icon>clear</M.Icon>\n                        </M.IconButton>\n                      </M.Fade>\n                    }\n                  />\n                </M.Box>\n                <M.Box flexGrow={1} display={{ xs: 'none', sm: 'block' }} />\n                {preferences?.ui?.actions?.createPackage && (\n                  <M.Box display={{ xs: 'none', sm: 'block' }} pr={1}>\n                    <M.Button\n                      variant=\"contained\"\n                      size=\"large\"\n                      color=\"primary\"\n                      style={{ paddingTop: 7, paddingBottom: 7 }}\n                      onClick={openPackageCreationDialog}\n                    >\n                      Create package\n                    </M.Button>\n                  </M.Box>\n                )}\n                <M.Box component={M.Paper} className={classes.paper}>\n                  <SortDropdown\n                    value={computedSort.key}\n                    options={SORT_OPTIONS}\n                    makeSortUrl={makeSortUrl}\n                  />\n                </M.Box>\n              </M.Box>\n\n              {filteredCountQuery.case({\n                fetching: () => R.range(0, 10).map((i) => <PackageSkel key={i} />),\n                error: displayError(),\n                data: (filteredCountData) => {\n                  const filteredCount = filteredCountData.packages?.total\n                  if (!filteredCount) {\n                    return (\n                      <M.Box\n                        borderTop={{ xs: 1, sm: 0 }}\n                        borderColor=\"divider\"\n                        pt={3}\n                        px={{ xs: 2, sm: 0 }}\n                      >\n                        <M.Typography variant=\"h5\">\n                          No matching packages found\n                        </M.Typography>\n                      </M.Box>\n                    )\n                  }\n\n                  const pages = Math.ceil(filteredCount / PER_PAGE)\n\n                  if (computedPage > pages) {\n                    return <RRDom.Redirect to={makePageUrl(pages)} />\n                  }\n\n                  return (\n                    <>\n                      {packagesQuery.case({\n                        fetching: () => {\n                          const items =\n                            computedPage < pages ? PER_PAGE : filteredCount % PER_PAGE\n                          return R.range(0, items).map((i) => <PackageSkel key={i} />)\n                        },\n                        error: displayError(),\n                        data: (packagesData) =>\n                          (packagesData.packages?.page || []).map((pkg) => (\n                            <Package key={pkg.name} {...pkg} />\n                          )),\n                      })}\n                      {pages > 1 && (\n                        <Pagination {...{ pages, page: computedPage, makePageUrl }} />\n                      )}\n                    </>\n                  )\n                },\n              })}\n            </M.Box>\n          )\n        },\n      })}\n    </>\n  )\n}\n\nexport default function PackageListWrapper({\n  match: {\n    params: { bucket },\n  },\n  location,\n}: RRDom.RouteComponentProps<{ bucket: string }>) {\n  const { sort, filter, p } = parseSearch(location.search, true)\n  const page = p ? parseInt(p, 10) : undefined\n  return (\n    <>\n      <MetaTitle>{['Packages', bucket]}</MetaTitle>\n      <WithPackagesSupport bucket={bucket}>\n        <PackageList {...{ bucket, sort, filter, page }} />\n      </WithPackagesSupport>\n    </>\n  )\n}\n\n/* TODO: optimize LinkedData fetching\n{!!bucketCfg &&\n  (packages && []).map(({ name }) => (\n    <Data.Fetcher\n      key={name}\n      fetch={requests.getRevisionData}\n      params={{ s3, sign, endpoint, bucket, name, id: 'latest', maxKeys: 0 }}\n    >\n      {AsyncResult.case({\n        _: () => null,\n        Ok: ({ hash, modified, header }) => (\n          <React.Suspense fallback={null}>\n            <LinkedData.PackageData\n              {...{\n                bucket: bucketCfg,\n                name,\n                revision: 'latest',\n                hash,\n                modified,\n                header,\n              }}\n            />\n          </React.Suspense>\n        ),\n      })}\n    </Data.Fetcher>\n  ))}\n*/\n","import * as React from 'react'\n\nimport Message from 'components/Message'\nimport * as BucketConfig from 'utils/BucketConfig'\nimport * as Config from 'utils/Config'\n\ninterface WithPackagesSupportProps {\n  bucket: string\n  children: React.ReactNode\n}\n\nexport default function WithPackagesSupport({\n  bucket,\n  children,\n}: WithPackagesSupportProps) {\n  const localMode = Config.use().mode === 'LOCAL'\n  const isInStack = BucketConfig.useIsInStack()\n  const inStack = React.useMemo(() => isInStack(bucket), [bucket, isInStack])\n\n  return inStack || localMode ? (\n    <>{children}</>\n  ) : (\n    <Message headline=\"Packages temporarily hidden\">\n      Ask an admin to add the bucket <strong>{bucket}</strong> to Quilt so that you can\n      browse packages.\n    </Message>\n  )\n}\n","import type { Json, JsonRecord } from 'utils/types'\nimport type { PackageContentsFlatMap } from 'model'\nimport type { S3ObjectLocation } from 'model/S3'\n\nexport type Maybe<T> = T | null\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] }\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & {\n  [SubKey in K]?: Maybe<T[SubKey]>\n}\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {\n  [SubKey in K]: Maybe<T[SubKey]>\n}\n/** All built-in and custom scalars, mapped to their actual values */\nexport interface Scalars {\n  ID: string\n  String: string\n  Boolean: boolean\n  Int: number\n  Float: number\n  Datetime: Date\n  Json: Json\n  JsonRecord: JsonRecord\n  PackageContentsFlatMap: PackageContentsFlatMap\n  S3ObjectLocation: S3ObjectLocation\n}\n\nexport interface AccessCountForDate {\n  readonly __typename: 'AccessCountForDate'\n  readonly date: Scalars['Datetime']\n  readonly value: Scalars['Int']\n}\n\nexport interface AccessCounts {\n  readonly __typename: 'AccessCounts'\n  readonly total: Scalars['Int']\n  readonly counts: ReadonlyArray<AccessCountForDate>\n}\n\nexport interface BucketAddInput {\n  readonly name: Scalars['String']\n  readonly title: Scalars['String']\n  readonly iconUrl: Maybe<Scalars['String']>\n  readonly description: Maybe<Scalars['String']>\n  readonly linkedData: Maybe<Scalars['Json']>\n  readonly overviewUrl: Maybe<Scalars['String']>\n  readonly tags: Maybe<ReadonlyArray<Scalars['String']>>\n  readonly relevanceScore: Maybe<Scalars['Int']>\n  readonly snsNotificationArn: Maybe<Scalars['String']>\n  readonly scannerParallelShardsDepth: Maybe<Scalars['Int']>\n  readonly skipMetaDataIndexing: Maybe<Scalars['Boolean']>\n  readonly fileExtensionsToIndex: Maybe<ReadonlyArray<Scalars['String']>>\n  readonly indexContentBytes: Maybe<Scalars['Int']>\n  readonly delayScan: Maybe<Scalars['Boolean']>\n}\n\nexport type BucketAddResult =\n  | BucketAddSuccess\n  | BucketAlreadyAdded\n  | BucketDoesNotExist\n  | BucketFileExtensionsToIndexInvalid\n  | BucketIndexContentBytesInvalid\n  | InsufficientPermissions\n  | NotificationConfigurationError\n  | NotificationTopicNotFound\n  | SnsInvalid\n\nexport interface BucketAddSuccess {\n  readonly __typename: 'BucketAddSuccess'\n  readonly bucketConfig: BucketConfig\n}\n\nexport interface BucketAlreadyAdded {\n  readonly __typename: 'BucketAlreadyAdded'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface BucketConfig {\n  readonly __typename: 'BucketConfig'\n  readonly name: Scalars['String']\n  readonly title: Scalars['String']\n  readonly iconUrl: Maybe<Scalars['String']>\n  readonly description: Maybe<Scalars['String']>\n  readonly linkedData: Maybe<Scalars['Json']>\n  readonly overviewUrl: Maybe<Scalars['String']>\n  readonly tags: Maybe<ReadonlyArray<Scalars['String']>>\n  readonly relevanceScore: Scalars['Int']\n  readonly lastIndexed: Maybe<Scalars['Datetime']>\n  readonly snsNotificationArn: Maybe<Scalars['String']>\n  readonly scannerParallelShardsDepth: Maybe<Scalars['Int']>\n  readonly skipMetaDataIndexing: Maybe<Scalars['Boolean']>\n  readonly fileExtensionsToIndex: Maybe<ReadonlyArray<Scalars['String']>>\n  readonly indexContentBytes: Maybe<Scalars['Int']>\n  readonly associatedPolicies: ReadonlyArray<PolicyBucketPermission>\n  readonly associatedRoles: ReadonlyArray<RoleBucketPermission>\n  readonly collaborators: ReadonlyArray<CollaboratorBucketConnection>\n}\n\nexport interface BucketDoesNotExist {\n  readonly __typename: 'BucketDoesNotExist'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface BucketFileExtensionsToIndexInvalid {\n  readonly __typename: 'BucketFileExtensionsToIndexInvalid'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface BucketIndexContentBytesInvalid {\n  readonly __typename: 'BucketIndexContentBytesInvalid'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface BucketNotFound {\n  readonly __typename: 'BucketNotFound'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface BucketPermission {\n  readonly bucket: BucketConfig\n  readonly level: BucketPermissionLevel\n}\n\nexport enum BucketPermissionLevel {\n  READ = 'READ',\n  READ_WRITE = 'READ_WRITE',\n}\n\nexport type BucketRemoveResult = BucketRemoveSuccess | BucketNotFound | IndexingInProgress\n\nexport interface BucketRemoveSuccess {\n  readonly __typename: 'BucketRemoveSuccess'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface BucketUpdateInput {\n  readonly title: Scalars['String']\n  readonly iconUrl: Maybe<Scalars['String']>\n  readonly description: Maybe<Scalars['String']>\n  readonly linkedData: Maybe<Scalars['Json']>\n  readonly overviewUrl: Maybe<Scalars['String']>\n  readonly tags: Maybe<ReadonlyArray<Scalars['String']>>\n  readonly relevanceScore: Maybe<Scalars['Int']>\n  readonly snsNotificationArn: Maybe<Scalars['String']>\n  readonly scannerParallelShardsDepth: Maybe<Scalars['Int']>\n  readonly skipMetaDataIndexing: Maybe<Scalars['Boolean']>\n  readonly fileExtensionsToIndex: Maybe<ReadonlyArray<Scalars['String']>>\n  readonly indexContentBytes: Maybe<Scalars['Int']>\n}\n\nexport type BucketUpdateResult =\n  | BucketUpdateSuccess\n  | BucketFileExtensionsToIndexInvalid\n  | BucketIndexContentBytesInvalid\n  | BucketNotFound\n  | NotificationConfigurationError\n  | NotificationTopicNotFound\n  | SnsInvalid\n\nexport interface BucketUpdateSuccess {\n  readonly __typename: 'BucketUpdateSuccess'\n  readonly bucketConfig: BucketConfig\n}\n\nexport interface Canary {\n  readonly __typename: 'Canary'\n  readonly name: Scalars['String']\n  readonly region: Scalars['String']\n  readonly group: Scalars['String']\n  readonly title: Scalars['String']\n  readonly description: Scalars['String']\n  readonly schedule: Scalars['String']\n  readonly ok: Maybe<Scalars['Boolean']>\n  readonly lastRun: Maybe<Scalars['Datetime']>\n}\n\nexport interface Collaborator {\n  readonly __typename: 'Collaborator'\n  readonly email: Scalars['String']\n  readonly username: Scalars['String']\n}\n\nexport interface CollaboratorBucketConnection {\n  readonly __typename: 'CollaboratorBucketConnection'\n  readonly collaborator: Collaborator\n  readonly permissionLevel: BucketPermissionLevel\n}\n\nexport interface Config {\n  readonly __typename: 'Config'\n  readonly contentIndexingSettings: ContentIndexingSettings\n}\n\nexport interface ContentIndexingSettings {\n  readonly __typename: 'ContentIndexingSettings'\n  readonly extensions: ReadonlyArray<Scalars['String']>\n  readonly bytesDefault: Scalars['Int']\n  readonly bytesMin: Scalars['Int']\n  readonly bytesMax: Scalars['Int']\n}\n\nexport interface IndexingInProgress {\n  readonly __typename: 'IndexingInProgress'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface InputError {\n  readonly __typename: 'InputError'\n  readonly path: Maybe<Scalars['String']>\n  readonly message: Scalars['String']\n  readonly name: Scalars['String']\n  readonly context: Maybe<Scalars['JsonRecord']>\n}\n\nexport interface InsufficientPermissions {\n  readonly __typename: 'InsufficientPermissions'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface InvalidInput {\n  readonly __typename: 'InvalidInput'\n  readonly errors: ReadonlyArray<InputError>\n}\n\nexport interface ManagedPolicyInput {\n  readonly title: Scalars['String']\n  readonly permissions: ReadonlyArray<PermissionInput>\n  readonly roles: ReadonlyArray<Scalars['ID']>\n}\n\nexport interface ManagedRole {\n  readonly __typename: 'ManagedRole'\n  readonly id: Scalars['ID']\n  readonly name: Scalars['String']\n  readonly arn: Scalars['String']\n  readonly policies: ReadonlyArray<Policy>\n  readonly permissions: ReadonlyArray<RoleBucketPermission>\n}\n\nexport interface ManagedRoleInput {\n  readonly name: Scalars['String']\n  readonly policies: ReadonlyArray<Scalars['ID']>\n}\n\nexport interface Mutation {\n  readonly __typename: 'Mutation'\n  readonly packageConstruct: PackageConstructResult\n  readonly packagePromote: PackagePromoteResult\n  readonly packageFromFolder: PackageFromFolderResult\n  readonly packageRevisionDelete: PackageRevisionDeleteResult\n  readonly bucketAdd: BucketAddResult\n  readonly bucketUpdate: BucketUpdateResult\n  readonly bucketRemove: BucketRemoveResult\n  readonly policyCreateManaged: PolicyResult\n  readonly policyCreateUnmanaged: PolicyResult\n  readonly policyUpdateManaged: PolicyResult\n  readonly policyUpdateUnmanaged: PolicyResult\n  readonly policyDelete: PolicyDeleteResult\n  readonly roleCreateManaged: RoleCreateResult\n  readonly roleCreateUnmanaged: RoleCreateResult\n  readonly roleUpdateManaged: RoleUpdateResult\n  readonly roleUpdateUnmanaged: RoleUpdateResult\n  readonly roleDelete: RoleDeleteResult\n  readonly roleSetDefault: RoleSetDefaultResult\n}\n\nexport interface MutationpackageConstructArgs {\n  params: PackagePushParams\n  src: PackageConstructSource\n}\n\nexport interface MutationpackagePromoteArgs {\n  params: PackagePushParams\n  src: PackagePromoteSource\n}\n\nexport interface MutationpackageFromFolderArgs {\n  params: PackagePushParams\n  src: PackageFromFolderSource\n}\n\nexport interface MutationpackageRevisionDeleteArgs {\n  bucket: Scalars['String']\n  name: Scalars['String']\n  hash: Scalars['String']\n}\n\nexport interface MutationbucketAddArgs {\n  input: BucketAddInput\n}\n\nexport interface MutationbucketUpdateArgs {\n  name: Scalars['String']\n  input: BucketUpdateInput\n}\n\nexport interface MutationbucketRemoveArgs {\n  name: Scalars['String']\n}\n\nexport interface MutationpolicyCreateManagedArgs {\n  input: ManagedPolicyInput\n}\n\nexport interface MutationpolicyCreateUnmanagedArgs {\n  input: UnmanagedPolicyInput\n}\n\nexport interface MutationpolicyUpdateManagedArgs {\n  id: Scalars['ID']\n  input: ManagedPolicyInput\n}\n\nexport interface MutationpolicyUpdateUnmanagedArgs {\n  id: Scalars['ID']\n  input: UnmanagedPolicyInput\n}\n\nexport interface MutationpolicyDeleteArgs {\n  id: Scalars['ID']\n}\n\nexport interface MutationroleCreateManagedArgs {\n  input: ManagedRoleInput\n}\n\nexport interface MutationroleCreateUnmanagedArgs {\n  input: UnmanagedRoleInput\n}\n\nexport interface MutationroleUpdateManagedArgs {\n  id: Scalars['ID']\n  input: ManagedRoleInput\n}\n\nexport interface MutationroleUpdateUnmanagedArgs {\n  id: Scalars['ID']\n  input: UnmanagedRoleInput\n}\n\nexport interface MutationroleDeleteArgs {\n  id: Scalars['ID']\n}\n\nexport interface MutationroleSetDefaultArgs {\n  id: Scalars['ID']\n}\n\nexport interface NotificationConfigurationError {\n  readonly __typename: 'NotificationConfigurationError'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface NotificationTopicNotFound {\n  readonly __typename: 'NotificationTopicNotFound'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface Ok {\n  readonly __typename: 'Ok'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface OperationError {\n  readonly __typename: 'OperationError'\n  readonly message: Scalars['String']\n  readonly name: Scalars['String']\n  readonly context: Maybe<Scalars['JsonRecord']>\n}\n\nexport interface Package {\n  readonly __typename: 'Package'\n  readonly bucket: Scalars['String']\n  readonly name: Scalars['String']\n  readonly modified: Scalars['Datetime']\n  readonly revisions: PackageRevisionList\n  readonly revision: Maybe<PackageRevision>\n  readonly accessCounts: Maybe<AccessCounts>\n}\n\nexport interface PackagerevisionArgs {\n  hashOrTag?: Maybe<Scalars['String']>\n}\n\nexport interface PackageaccessCountsArgs {\n  window?: Maybe<Scalars['Int']>\n}\n\nexport interface PackageConstructEntry {\n  readonly logicalKey: Scalars['String']\n  readonly physicalKey: Scalars['String']\n  readonly hash: Maybe<Scalars['String']>\n  readonly size: Maybe<Scalars['Float']>\n  readonly meta: Maybe<Scalars['JsonRecord']>\n}\n\nexport type PackageConstructResult = PackagePushSuccess | InvalidInput | OperationError\n\nexport interface PackageConstructSource {\n  readonly entries: ReadonlyArray<PackageConstructEntry>\n}\n\nexport interface PackageDir {\n  readonly __typename: 'PackageDir'\n  readonly path: Scalars['String']\n  readonly metadata: Maybe<Scalars['JsonRecord']>\n  readonly size: Scalars['Float']\n  readonly children: ReadonlyArray<PackageEntry>\n}\n\nexport type PackageEntry = PackageFile | PackageDir\n\nexport interface PackageFile {\n  readonly __typename: 'PackageFile'\n  readonly path: Scalars['String']\n  readonly metadata: Maybe<Scalars['JsonRecord']>\n  readonly size: Scalars['Float']\n  readonly physicalKey: Scalars['String']\n}\n\nexport interface PackageFromFolderEntry {\n  readonly isDir: Scalars['Boolean']\n  readonly logicalKey: Scalars['String']\n  readonly path: Scalars['String']\n}\n\nexport type PackageFromFolderResult = PackagePushSuccess | InvalidInput | OperationError\n\nexport interface PackageFromFolderSource {\n  readonly bucket: Scalars['String']\n  readonly entries: ReadonlyArray<PackageFromFolderEntry>\n}\n\nexport interface PackageList {\n  readonly __typename: 'PackageList'\n  readonly total: Scalars['Int']\n  readonly page: ReadonlyArray<Package>\n}\n\nexport interface PackageListpageArgs {\n  number?: Maybe<Scalars['Int']>\n  perPage?: Maybe<Scalars['Int']>\n  order?: Maybe<PackageListOrder>\n}\n\nexport enum PackageListOrder {\n  NAME = 'NAME',\n  MODIFIED = 'MODIFIED',\n}\n\nexport type PackagePromoteResult = PackagePushSuccess | InvalidInput | OperationError\n\nexport interface PackagePromoteSource {\n  readonly bucket: Scalars['String']\n  readonly name: Scalars['String']\n  readonly hash: Scalars['String']\n}\n\nexport interface PackagePushParams {\n  readonly message: Maybe<Scalars['String']>\n  readonly userMeta: Maybe<Scalars['JsonRecord']>\n  readonly workflow: Maybe<Scalars['String']>\n  readonly bucket: Scalars['String']\n  readonly name: Scalars['String']\n}\n\nexport interface PackagePushSuccess {\n  readonly __typename: 'PackagePushSuccess'\n  readonly package: Package\n  readonly revision: PackageRevision\n}\n\nexport interface PackageRevision {\n  readonly __typename: 'PackageRevision'\n  readonly hash: Scalars['String']\n  readonly modified: Scalars['Datetime']\n  readonly message: Maybe<Scalars['String']>\n  readonly metadata: Scalars['JsonRecord']\n  readonly userMeta: Maybe<Scalars['JsonRecord']>\n  readonly workflow: Maybe<PackageWorkflow>\n  readonly totalEntries: Maybe<Scalars['Int']>\n  readonly totalBytes: Maybe<Scalars['Float']>\n  readonly dir: Maybe<PackageDir>\n  readonly file: Maybe<PackageFile>\n  readonly accessCounts: Maybe<AccessCounts>\n  readonly contentsFlatMap: Maybe<Scalars['PackageContentsFlatMap']>\n}\n\nexport interface PackageRevisiondirArgs {\n  path: Scalars['String']\n}\n\nexport interface PackageRevisionfileArgs {\n  path: Scalars['String']\n}\n\nexport interface PackageRevisionaccessCountsArgs {\n  window?: Maybe<Scalars['Int']>\n}\n\nexport interface PackageRevisioncontentsFlatMapArgs {\n  max?: Maybe<Scalars['Int']>\n}\n\nexport type PackageRevisionDeleteResult = PackageRevisionDeleteSuccess | OperationError\n\nexport interface PackageRevisionDeleteSuccess {\n  readonly __typename: 'PackageRevisionDeleteSuccess'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface PackageRevisionList {\n  readonly __typename: 'PackageRevisionList'\n  readonly total: Scalars['Int']\n  readonly page: ReadonlyArray<PackageRevision>\n}\n\nexport interface PackageRevisionListpageArgs {\n  number?: Maybe<Scalars['Int']>\n  perPage?: Maybe<Scalars['Int']>\n}\n\nexport interface PackageWorkflow {\n  readonly __typename: 'PackageWorkflow'\n  readonly config: Scalars['String']\n  readonly id: Maybe<Scalars['String']>\n}\n\nexport interface PermissionInput {\n  readonly bucket: Scalars['String']\n  readonly level: BucketPermissionLevel\n}\n\nexport interface Policy {\n  readonly __typename: 'Policy'\n  readonly id: Scalars['ID']\n  readonly title: Scalars['String']\n  readonly arn: Scalars['String']\n  readonly managed: Scalars['Boolean']\n  readonly permissions: ReadonlyArray<PolicyBucketPermission>\n  readonly roles: ReadonlyArray<ManagedRole>\n}\n\nexport interface PolicyBucketPermission extends BucketPermission {\n  readonly __typename: 'PolicyBucketPermission'\n  readonly policy: Policy\n  readonly bucket: BucketConfig\n  readonly level: BucketPermissionLevel\n}\n\nexport type PolicyDeleteResult = Ok | InvalidInput | OperationError\n\nexport type PolicyResult = Policy | InvalidInput | OperationError\n\nexport interface Query {\n  readonly __typename: 'Query'\n  readonly config: Config\n  readonly bucketConfigs: ReadonlyArray<BucketConfig>\n  readonly bucketConfig: Maybe<BucketConfig>\n  readonly potentialCollaborators: ReadonlyArray<Collaborator>\n  readonly packages: Maybe<PackageList>\n  readonly package: Maybe<Package>\n  readonly policies: ReadonlyArray<Policy>\n  readonly policy: Maybe<Policy>\n  readonly roles: ReadonlyArray<Role>\n  readonly role: Maybe<Role>\n  readonly defaultRole: Maybe<Role>\n  readonly status: StatusResult\n}\n\nexport interface QuerybucketConfigArgs {\n  name: Scalars['String']\n}\n\nexport interface QuerypackagesArgs {\n  bucket: Scalars['String']\n  filter: Maybe<Scalars['String']>\n}\n\nexport interface QuerypackageArgs {\n  bucket: Scalars['String']\n  name: Scalars['String']\n}\n\nexport interface QuerypolicyArgs {\n  id: Scalars['ID']\n}\n\nexport interface QueryroleArgs {\n  id: Scalars['ID']\n}\n\nexport type Role = UnmanagedRole | ManagedRole\n\nexport interface RoleAssigned {\n  readonly __typename: 'RoleAssigned'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface RoleBucketPermission extends BucketPermission {\n  readonly __typename: 'RoleBucketPermission'\n  readonly role: Role\n  readonly bucket: BucketConfig\n  readonly level: BucketPermissionLevel\n}\n\nexport type RoleCreateResult =\n  | RoleCreateSuccess\n  | RoleNameReserved\n  | RoleNameExists\n  | RoleNameInvalid\n  | RoleHasTooManyPoliciesToAttach\n\nexport interface RoleCreateSuccess {\n  readonly __typename: 'RoleCreateSuccess'\n  readonly role: Role\n}\n\nexport type RoleDeleteResult =\n  | RoleDeleteSuccess\n  | RoleDoesNotExist\n  | RoleNameReserved\n  | RoleAssigned\n\nexport interface RoleDeleteSuccess {\n  readonly __typename: 'RoleDeleteSuccess'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface RoleDoesNotExist {\n  readonly __typename: 'RoleDoesNotExist'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface RoleHasTooManyPoliciesToAttach {\n  readonly __typename: 'RoleHasTooManyPoliciesToAttach'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface RoleIsManaged {\n  readonly __typename: 'RoleIsManaged'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface RoleIsUnmanaged {\n  readonly __typename: 'RoleIsUnmanaged'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface RoleNameExists {\n  readonly __typename: 'RoleNameExists'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface RoleNameInvalid {\n  readonly __typename: 'RoleNameInvalid'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface RoleNameReserved {\n  readonly __typename: 'RoleNameReserved'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport type RoleSetDefaultResult = RoleSetDefaultSuccess | RoleDoesNotExist\n\nexport interface RoleSetDefaultSuccess {\n  readonly __typename: 'RoleSetDefaultSuccess'\n  readonly role: Role\n}\n\nexport type RoleUpdateResult =\n  | RoleUpdateSuccess\n  | RoleNameReserved\n  | RoleNameExists\n  | RoleNameInvalid\n  | RoleIsManaged\n  | RoleIsUnmanaged\n  | RoleHasTooManyPoliciesToAttach\n\nexport interface RoleUpdateSuccess {\n  readonly __typename: 'RoleUpdateSuccess'\n  readonly role: Role\n}\n\nexport interface SnsInvalid {\n  readonly __typename: 'SnsInvalid'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface Status {\n  readonly __typename: 'Status'\n  readonly canaries: ReadonlyArray<Canary>\n  readonly latestStats: TestStats\n  readonly stats: TestStatsTimeSeries\n  readonly reports: StatusReportList\n  readonly reportsBucket: Scalars['String']\n}\n\nexport interface StatusstatsArgs {\n  window?: Maybe<Scalars['Int']>\n}\n\nexport interface StatusreportsArgs {\n  filter: Maybe<StatusReportListFilter>\n}\n\nexport interface StatusReport {\n  readonly __typename: 'StatusReport'\n  readonly timestamp: Scalars['Datetime']\n  readonly renderedReportLocation: Scalars['S3ObjectLocation']\n}\n\nexport interface StatusReportList {\n  readonly __typename: 'StatusReportList'\n  readonly total: Scalars['Int']\n  readonly page: ReadonlyArray<StatusReport>\n}\n\nexport interface StatusReportListpageArgs {\n  number?: Scalars['Int']\n  perPage?: Scalars['Int']\n  order?: StatusReportListOrder\n}\n\nexport interface StatusReportListFilter {\n  readonly timestampFrom: Maybe<Scalars['Datetime']>\n  readonly timestampTo: Maybe<Scalars['Datetime']>\n}\n\nexport enum StatusReportListOrder {\n  NEW_FIRST = 'NEW_FIRST',\n  OLD_FIRST = 'OLD_FIRST',\n}\n\nexport type StatusResult = Status | Unavailable\n\nexport interface TestStats {\n  readonly __typename: 'TestStats'\n  readonly passed: Scalars['Int']\n  readonly failed: Scalars['Int']\n  readonly running: Scalars['Int']\n}\n\nexport interface TestStatsTimeSeries {\n  readonly __typename: 'TestStatsTimeSeries'\n  readonly datetimes: ReadonlyArray<Scalars['Datetime']>\n  readonly passed: ReadonlyArray<Scalars['Int']>\n  readonly failed: ReadonlyArray<Scalars['Int']>\n}\n\nexport interface Unavailable {\n  readonly __typename: 'Unavailable'\n  readonly _: Maybe<Scalars['Boolean']>\n}\n\nexport interface UnmanagedPolicyInput {\n  readonly title: Scalars['String']\n  readonly arn: Scalars['String']\n  readonly roles: ReadonlyArray<Scalars['ID']>\n}\n\nexport interface UnmanagedRole {\n  readonly __typename: 'UnmanagedRole'\n  readonly id: Scalars['ID']\n  readonly name: Scalars['String']\n  readonly arn: Scalars['String']\n}\n\nexport interface UnmanagedRoleInput {\n  readonly name: Scalars['String']\n  readonly arn: Scalars['String']\n}\n","import * as IO from 'io-ts'\n\nimport assertNever from 'utils/assertNever'\nimport * as Types from 'utils/types'\n\nimport * as GQLTypes from './graphql/types.generated'\n\nexport * as GQLTypes from './graphql/types.generated'\n\nexport * as S3 from './S3'\n\nexport const BucketPermissionLevel = Types.enum(\n  GQLTypes.BucketPermissionLevel,\n  'BucketPermissionLevel',\n)\n\nexport const BucketPermissionLevelStrings = ['Read', 'ReadWrite'] as const\n\nexport type BucketPermissionLevelString = typeof BucketPermissionLevelStrings[number]\n\nexport const BucketPermissionLevelFromString = new IO.Type<\n  GQLTypes.BucketPermissionLevel,\n  BucketPermissionLevelString\n>(\n  'BucketPermissionLevelFromString',\n  BucketPermissionLevel.is,\n  (u, c) => {\n    if (u === 'Read') return IO.success(GQLTypes.BucketPermissionLevel.READ)\n    if (u === 'ReadWrite') return IO.success(GQLTypes.BucketPermissionLevel.READ_WRITE)\n    return IO.failure(u, c)\n  },\n  (a) => {\n    if (a === GQLTypes.BucketPermissionLevel.READ) return 'Read' as const\n    if (a === GQLTypes.BucketPermissionLevel.READ_WRITE) return 'ReadWrite' as const\n    return assertNever(a)\n  },\n)\n\nexport type PotentialCollaborator = {\n  collaborator: GQLTypes.Collaborator\n  permissionLevel?: undefined\n}\n\nexport type Collaborators = ReadonlyArray<\n  GQLTypes.CollaboratorBucketConnection | PotentialCollaborator\n>\n\nexport interface PackageEntry {\n  physicalKey: string\n  hash: string\n  meta: Types.JsonRecord | null\n  size: number\n}\n\nexport type PackageContentsFlatMap = Record<string, PackageEntry>\n\nexport interface S3File {\n  bucket: string\n  key: string\n  meta?: Types.JsonRecord // TODO: make it the same as in PackageEntry\n  size: number\n  version?: string\n}\n","import * as React from 'react'\n\nconst MINUTE = 1000 * 60\nconst HOUR = MINUTE * 60\nconst DAY = HOUR * 24\nconst MONTH = DAY * 30\nconst YEAR = DAY * 365\n\nconst intl = new Intl.RelativeTimeFormat('en', { numeric: 'auto' })\n\nexport function relativify(date: Date, baseDate?: Date) {\n  const delta = date.valueOf() - (baseDate?.valueOf() || Date.now())\n\n  const years = delta / YEAR\n  if (Math.abs(years) >= 1) return intl.format(Math.round(years), 'year')\n\n  const months = delta / MONTH\n  if (Math.abs(months) >= 1) return intl.format(Math.round(months), 'month')\n\n  const days = delta / DAY\n  if (Math.abs(days) >= 1) return intl.format(Math.round(days), 'day')\n\n  const hours = delta / HOUR\n  if (Math.abs(hours) >= 1) return intl.format(Math.round(hours), 'hour')\n\n  const minutes = delta / MINUTE\n  if (Math.abs(minutes) >= 1) return intl.format(Math.round(minutes), 'minute')\n\n  return intl.format(Math.round(delta / 1000), 'second')\n}\n\ninterface RelativeProps {\n  value: Date\n}\n\nexport function Relative({ value }: RelativeProps) {\n  const [t, setT] = React.useState(new Date())\n\n  React.useEffect(() => {\n    const timerId = window.setInterval(() => setT(new Date()), 1000)\n    return () => clearInterval(timerId)\n  }, [value])\n\n  // return a Fragment to overcome a typing limitation:\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20544\n  return React.useMemo(() => <>{relativify(value, t)}</>, [value, t])\n}\n\ninterface Rules {\n  zero?: string | ((v: number) => string)\n  one?: string | ((v: number) => string)\n  // NOTE: we don't need it yet and, maybe, never\n  // two?: (v: number) => string\n  // few?: (v: number) => string\n  // many?: (v: number) => string\n  other: string | ((v: number) => string)\n}\n\nfunction numberToRule(value: number) {\n  switch (value) {\n    case 0:\n      return 'zero'\n    case 1:\n      return 'one'\n    // NOTE: we don't need it yet and, maybe, never\n    // 2,3,4,22,23... return 'few'\n    // 5,6,...11,12... return 'many'\n    default:\n      return 'other'\n  }\n}\n\nexport function pluralify(value: number, rules: Rules) {\n  const intlFunc = rules[numberToRule(value)]\n  if (intlFunc) return typeof intlFunc === 'function' ? intlFunc(value) : intlFunc\n  return typeof rules.other === 'function' ? rules.other(value) : rules.other\n}\n\ninterface PluralProps extends Rules {\n  value: number\n}\n\nexport function Plural({ value, zero, one, other }: PluralProps) {\n  // return a Fragment to overcome a typing limitation:\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20544\n  return React.useMemo(\n    () => <>{pluralify(value, { zero, one, other })}</>,\n    [value, zero, one, other],\n  )\n}\n","import * as FP from 'fp-ts'\nimport * as IO from 'io-ts'\nimport { formatValidationErrors } from 'io-ts-reporters'\nimport * as R from 'ramda'\n\nimport { BaseError } from 'utils/error'\n\nexport * from 'io-ts-types'\n\nexport class ValidationError extends BaseError {\n  constructor(e: IO.Errors) {\n    const formatted = formatValidationErrors(e).join('\\n')\n    super(`ValidationError\\n${formatted}`)\n  }\n}\n\nexport const decode = <T>(codec: IO.Type<T, any, any>) =>\n  R.pipe(\n    codec.decode,\n    FP.either.fold(\n      (e) => {\n        throw new ValidationError(e)\n      },\n      (a) => a,\n    ),\n  ) as (i: unknown) => T\n\nexport interface NullableC<C extends IO.Mixed>\n  extends IO.Type<IO.TypeOf<C> | null, IO.OutputOf<C> | null, unknown> {}\n\nexport type Nullable<T> = T | null\n\nexport const nullable = <C extends IO.Mixed>(\n  codec: C,\n  name: string = `Nullable<${codec.name}>`,\n) =>\n  new IO.Type(\n    name,\n    (i): i is Nullable<IO.TypeOf<C>> => i === null || codec.is(i),\n    (u, c) => (u == null ? IO.success(null) : codec.validate(u, c)),\n    (a) => a,\n  ) as NullableC<C>\n\n// enum implementation taken from https://github.com/gcanti/io-ts/pull/366\nenum Enum {}\n\nexport class EnumType<E extends typeof Enum> extends IO.Type<E[keyof E]> {\n  readonly _tag: 'EnumType' = 'EnumType'\n\n  private readonly enum: E\n\n  private readonly enumValues: Set<string | number>\n\n  constructor(e: E, name: string) {\n    super(\n      name,\n      (u): u is E[keyof E] => {\n        if (!this.enumValues.has(u as any)) return false\n        // Don't allow key names from number enum reverse mapping\n        if (typeof (this.enum as any)[u as string] === 'number') return false\n        return true\n      },\n      (u, c) => (this.is(u) ? IO.success(u) : IO.failure(u, c)),\n      IO.identity,\n    )\n    this.enum = e\n    this.enumValues = new Set(Object.values(e))\n  }\n}\n\nexport const enumType = <E extends typeof Enum>(e: E, name: string = 'enum') =>\n  new EnumType<E>(e, name)\n\nexport { enumType as enum }\n\nexport type AtLeast<T, K extends keyof T> = Partial<T> & Pick<T, K>\n","import * as React from 'react'\nimport { useDebounce } from 'use-debounce'\n\nimport usePrevious from 'utils/usePrevious'\n\nexport interface DebouncedInput<V> {\n  input: {\n    value: V\n    onChange: (e: { target: { value: V } }) => void\n  }\n  value: V\n  set: (v: V) => void\n}\n\nexport function useDebouncedInput<V = unknown>(\n  init: V,\n  timeout: number = 500,\n): DebouncedInput<V> {\n  const [value, setValue] = React.useState(init)\n  const [debouncedValue] = useDebounce(value, timeout)\n\n  usePrevious(init, (prevInit) => {\n    if (init !== prevInit) setValue(init)\n  })\n\n  const onChange = React.useCallback(\n    (e: { target: { value: V } }) => {\n      setValue(e.target.value)\n    },\n    [setValue],\n  )\n\n  return {\n    input: { value, onChange },\n    value: debouncedValue,\n    set: setValue,\n  }\n}\n\nexport default useDebouncedInput\n","import cx from 'classnames'\nimport * as R from 'ramda'\nimport * as React from 'react'\nimport { Link } from 'react-router-dom'\nimport * as M from '@material-ui/core'\n\nconst Gap = Symbol('gap')\n\nconst MAX_PAGE_BUTTONS = 8 // fits on 320px-wide screen\n\n// 1-based\n// total | current  | output\n// ------|----------|----------------------\n// 8     | *        | [1, 2, 3, 4, 5, 6, 7, 8]\n// 100   | 1...4    | [1, 2, 3, 4, 5, 6, <G>, 100]\n// 100   | 5...95   | [1, <G>, N-1, N, N+1, N+2, <G>, 100]\n// 100   | 96...100 | [1, <G>, 95, 96, 97, 98, 99, 100]\nconst displayRange = (total, current) => {\n  if (total <= MAX_PAGE_BUTTONS) return R.range(1, total + 1)\n  if (current <= MAX_PAGE_BUTTONS - 4) {\n    return [...R.range(1, MAX_PAGE_BUTTONS - 1), Gap, total]\n  }\n  if (current >= total - MAX_PAGE_BUTTONS + 4) {\n    return [1, Gap, ...R.range(total - MAX_PAGE_BUTTONS + 3, total + 1)]\n  }\n  return [1, Gap, ...R.range(current - 1, current + 3), Gap, total]\n}\n\nconst usePaginationStyles = M.makeStyles((t) => ({\n  button: {\n    background: t.palette.common.white,\n    paddingLeft: t.spacing(1.5),\n    paddingRight: t.spacing(1.5),\n  },\n  current: {\n    color: t.palette.primary.contrastText,\n    backgroundColor: t.palette.primary.main,\n    '&:hover': {\n      backgroundColor: t.palette.primary.dark,\n    },\n  },\n  gap: {\n    cursor: 'default',\n    pointerEvents: 'none',\n  },\n}))\n\nexport default function Pagination({ page, pages, makePageUrl }) {\n  const classes = usePaginationStyles()\n  const range = React.useMemo(() => displayRange(pages, page), [pages, page])\n\n  return (\n    <M.Box display=\"flex\" justifyContent=\"center\" mt={3} mb={{ xs: 5, sm: 0 }}>\n      <M.ButtonGroup variant=\"contained\">\n        {range.map((p, i) =>\n          p === Gap ? (\n            <M.Button\n              // eslint-disable-next-line react/no-array-index-key\n              key={`gap:${i}`}\n              className={cx(classes.button, classes.gap)}\n              component=\"span\"\n            >\n              &hellip;\n            </M.Button>\n          ) : (\n            <M.Button\n              key={`page:${p}`}\n              component={Link}\n              className={cx(classes.button, { [classes.current]: page === p })}\n              to={makePageUrl(p)}\n            >\n              {p}\n            </M.Button>\n          ),\n        )}\n      </M.ButtonGroup>\n    </M.Box>\n  )\n}\n","import * as R from 'ramda'\nimport * as React from 'react'\nimport * as uuid from 'uuid'\n\nimport tagged from 'utils/tagged'\nimport useMemoEq from 'utils/useMemoEq'\n\nexport const Paint = tagged(['Color', 'Server', 'None'])\n\nexport const pointsToSVG = (points) => points.map(({ x, y }) => `${x} ${y}`).join(' ')\n\nconst memoEq = (fn) => (input) => useMemoEq(input, fn)\n\nexport const usePaint = memoEq(\n  R.pipe(\n    (paint) => {\n      if (Paint.is(paint)) {\n        const id = uuid.v1()\n        return (fn) => fn(paint, id)\n      }\n      // assuming object if not array\n      const map = Array.isArray(paint) ? R.addIndex(R.map) : R.mapObjIndexed\n      const ids = map(() => uuid.v1(), paint)\n      return (fn) => map((p, k) => fn(p, ids[k]), paint)\n    },\n    (map) =>\n      map(\n        Paint.case({\n          Color: (value) => ({ ref: value, def: null }),\n          Server: (el, id) => ({\n            ref: `url(#${id})`,\n            def: React.cloneElement(el, { id, key: id }),\n          }),\n          None: () => ({ ref: 'none', def: null }),\n        }),\n      ),\n  ),\n)\n"],"names":["Sparkline","data","onCursor","width","height","stroke","SVG","fill","contourThickness","contourStroke","extendL","extendR","cursorLineThickness","cursorLineExtendUp","cursorLineExtendDown","cursorLineStroke","cursorCircleThickness","cursorCircleR","cursorCircleFill","cursorCircleStroke","padding","px","py","pt","pb","pl","pr","boxProps","props","cursor","showCursor","hideCursor","handleMove","e","rect","currentTarget","getBoundingClientRect","pos","clientX","x","step","length","idx","Math","round","handleLeave","contourShape","max","vfactor","hfactor","dataPoints","map","d","i","y","contourStrokePaint","cursorLineStrokePaint","cursorCircleFillPaint","cursorCircleStrokePaint","fillPaint","fillShape","None","_","cursorPos","component","viewBox","onMouseLeave","onMouseMove","def","points","ref","pointerEvents","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","cx","cy","r","Actions","revisePackage","useInitialActions","history","location","searchParams","URLSearchParams","search","actions","getAll","initialActions","every","a","isActions","has","delete","replace","toString","clearActions","current","containers_Bucket_PackageList_gql_PackageCountDocument","kind","definitions","operation","name","value","variableDefinitions","variable","type","selectionSet","selections","arguments","containers_Bucket_PackageList_gql_PackageListDocument","SORT_OPTIONS","key","label","DEFAULT_SORT","sortPackagesBy","getSort","find","o","Counts","counts","total","setCursor","t","xs","breakpoints","down","sm","sparklineW","sparklineH","position","right","top","bottom","whiteSpace","variant","color","noWrap","date","textAlign","ml","minWidth","display","offset","stopColor","useRevisionAttributesStyles","revisionsNumber","typography","subtitle2","palette","text","secondary","updated","body2","marginLeft","spacing","RevisionAttributes","className","modified","revisions","classes","one","other","title","undefined","useRevisionMetaStyles","root","borderTop","divider","section","marginTop","tag","RevisionMeta","sections","Array","isArray","j","size","usePackageStyles","borderRadius","up","base","handleContainer","WebkitBoxOrient","WebkitLineClamp","overflow","overflowWrap","paddingRight","textOverflow","handle","fontSize","pxToRem","fontWeight","fontWeightMedium","lineHeight","handleText","handleClickArea","left","background","action","hover","attributes","Package","bucket","accessCounts","revision","urls","NamedRoutes","meta","preferences","BucketPreferences","output","ui","package_description","Object","entries","reverse","nameRegex","RegExp","test","message","userMeta","push","forEach","jPath","jsonpath","filter","String","error","console","usePackageMeta","to","bucketPackageDetail","PackageSkel","p","Skeleton","mt","useSortDropdownStyles","paddingBottom","paddingLeft","paddingTop","textTransform","body1","SortDropdown","options","makeSortUrl","anchor","setAnchor","open","evt","target","close","handleClick","set","selected","onClick","anchorEl","onClose","useStyles","paper","boxShadow","searchIcon","input","clear","PackageList","sort","page","scrollRef","computedPage","computedSort","computedFilter","filtering","useDebouncedInput","totalCountQuery","useQuery","query","variables","filteredCountQuery","packagesQuery","order","perPage","s","bucketPackageList","makePageUrl","newP","load","usePrevious","prev","scrollIntoView","createDialog","delayHashing","disableStateDisplay","openPackageCreationDialog","render","successTitle","successRenderMessage","packageLink","case","fetching","mx","justifyContent","flexGrow","totalCountData","packages","placeholder","fullWidth","startAdornment","endAdornment","in","createPackage","style","filteredCountData","filteredCount","borderColor","pages","ceil","items","packagesData","pkg","Pagination","StyledLink","href","PackageListWrapper","parseSearch","parseInt","MetaTitle","WithPackagesSupport","children","localMode","mode","isInStack","headline","BucketPermissionLevel","PackageListOrder","StatusReportListOrder","is","u","c","assertNever","HOUR","MINUTE","DAY","intl","Intl","RelativeTimeFormat","numeric","Relative","Date","setT","timerId","window","setInterval","clearInterval","baseDate","delta","valueOf","now","years","abs","format","months","days","hours","minutes","relativify","Plural","zero","rules","intlFunc","numberToRule","pluralify","Enum","formatted","formatValidationErrors","join","decode","codec","ValidationError","nullable","validate","enumValues","enum","_tag","Set","values","enumType","EnumType","init","timeout","setValue","debouncedValue","prevInit","onChange","Gap","Symbol","usePaginationStyles","button","common","white","primary","contrastText","backgroundColor","main","dark","gap","range","MAX_PAGE_BUTTONS","mb","Link","fn","Paint","pointsToSVG","usePaint","paint","ids","k","Color","Server","el","id"],"sourceRoot":""}