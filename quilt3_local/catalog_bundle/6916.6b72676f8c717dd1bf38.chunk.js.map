{"version":3,"file":"6916.6b72676f8c717dd1bf38.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./node_modules/brace/mode/snippets.js"],"sourcesContent":["ace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/snippets\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/text_highlight_rules\",\"ace/mode/folding/coffee\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar SnippetHighlightRules = function() {\n\n    var builtins = \"SELECTION|CURRENT_WORD|SELECTED_TEXT|CURRENT_LINE|LINE_INDEX|\" +\n        \"LINE_NUMBER|SOFT_TABS|TAB_SIZE|FILENAME|FILEPATH|FULLNAME\";\n\n    this.$rules = {\n        \"start\" : [\n            {token:\"constant.language.escape\", regex: /\\\\[\\$}`\\\\]/},\n            {token:\"keyword\", regex: \"\\\\$(?:TM_)?(?:\" + builtins + \")\\\\b\"},\n            {token:\"variable\", regex: \"\\\\$\\\\w+\"},\n            {onMatch: function(value, state, stack) {\n                if (stack[1])\n                    stack[1]++;\n                else\n                    stack.unshift(state, 1);\n                return this.tokenName;\n            }, tokenName: \"markup.list\", regex: \"\\\\${\", next: \"varDecl\"},\n            {onMatch: function(value, state, stack) {\n                if (!stack[1])\n                    return \"text\";\n                stack[1]--;\n                if (!stack[1])\n                    stack.splice(0,2);\n                return this.tokenName;\n            }, tokenName: \"markup.list\", regex: \"}\"},\n            {token: \"doc.comment\", regex:/^\\${2}-{5,}$/}\n        ],\n        \"varDecl\" : [\n            {regex: /\\d+\\b/, token: \"constant.numeric\"},\n            {token:\"keyword\", regex: \"(?:TM_)?(?:\" + builtins + \")\\\\b\"},\n            {token:\"variable\", regex: \"\\\\w+\"},\n            {regex: /:/, token: \"punctuation.operator\", next: \"start\"},\n            {regex: /\\//, token: \"string.regex\", next: \"regexp\"},\n            {regex: \"\", next: \"start\"}\n        ],\n        \"regexp\" : [\n            {regex: /\\\\./, token: \"escape\"},\n            {regex: /\\[/, token: \"regex.start\", next: \"charClass\"},\n            {regex: \"/\", token: \"string.regex\", next: \"format\"},\n            {\"token\": \"string.regex\", regex:\".\"}\n        ],\n        charClass : [\n            {regex: \"\\\\.\", token: \"escape\"},\n            {regex: \"\\\\]\", token: \"regex.end\", next: \"regexp\"},\n            {\"token\": \"string.regex\", regex:\".\"}\n        ],\n        \"format\" : [\n            {regex: /\\\\[ulULE]/, token: \"keyword\"},\n            {regex: /\\$\\d+/, token: \"variable\"},\n            {regex: \"/[gim]*:?\", token: \"string.regex\", next: \"start\"},\n            {\"token\": \"string\", regex:\".\"}\n        ]\n    };\n};\noop.inherits(SnippetHighlightRules, TextHighlightRules);\n\nexports.SnippetHighlightRules = SnippetHighlightRules;\n\nvar SnippetGroupHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n\t\t\t{token: \"text\", regex: \"^\\\\t\", next: \"sn-start\"},\n\t\t\t{token:\"invalid\", regex: /^ \\s*/},\n            {token:\"comment\", regex: /^#.*/},\n            {token:\"constant.language.escape\", regex: \"^regex \", next: \"regex\"},\n            {token:\"constant.language.escape\", regex: \"^(trigger|endTrigger|name|snippet|guard|endGuard|tabTrigger|key)\\\\b\"}\n        ],\n\t\t\"regex\" : [\n\t\t\t{token:\"text\", regex: \"\\\\.\"},\n\t\t\t{token:\"keyword\", regex: \"/\"},\n\t\t\t{token:\"empty\", regex: \"$\", next: \"start\"}\n\t\t]\n    };\n\tthis.embedRules(SnippetHighlightRules, \"sn-\", [\n\t\t{token: \"text\", regex: \"^\\\\t\", next: \"sn-start\"},\n\t\t{onMatch: function(value, state, stack) {\n\t\t\tstack.splice(stack.length);\n\t\t\treturn this.tokenName;\n\t\t}, tokenName: \"text\", regex: \"^(?!\\t)\", next: \"start\"}\n\t]);\n\t\n};\n\noop.inherits(SnippetGroupHighlightRules, TextHighlightRules);\n\nexports.SnippetGroupHighlightRules = SnippetGroupHighlightRules;\n\nvar FoldMode = acequire(\"./folding/coffee\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = SnippetGroupHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.$indentWithTabs = true;\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/snippets\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n\n});\n"],"names":["ace","define","acequire","exports","module","oop","BaseFoldMode","FoldMode","Range","inherits","this","getFoldWidgetRange","session","foldStyle","row","range","indentationBlock","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","indent","next","prev","prevIndent","nextIndent","foldWidgets","call","prototype","TextMode","Mode","TextHighlightRules","SnippetHighlightRules","builtins","$rules","token","regex","onMatch","value","state","stack","unshift","tokenName","splice","charClass","SnippetGroupHighlightRules","embedRules","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","$indentWithTabs","lineCommentStart","$id"],"sourceRoot":""}