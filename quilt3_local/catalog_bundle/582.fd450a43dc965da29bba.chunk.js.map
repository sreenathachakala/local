{"version":3,"file":"582.fd450a43dc965da29bba.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./app/containers/Bucket/FileProperties.tsx","webpack://quilt-navigator/./app/containers/OpenInDesktop/OpenInDesktop.tsx","webpack://quilt-navigator/./app/utils/TeleportUri.ts","webpack://quilt-navigator/./app/containers/Bucket/PackageDialog/gql/PackagePromote.generated.ts","webpack://quilt-navigator/./app/containers/Bucket/PackageCopyDialog.tsx","webpack://quilt-navigator/./app/containers/Bucket/PackageTree/PackageLink.tsx","webpack://quilt-navigator/./app/containers/Bucket/PackageTree/RevisionDeleteDialog.tsx","webpack://quilt-navigator/./app/containers/Bucket/PackageTree/RevisionInfo.tsx","webpack://quilt-navigator/./app/containers/Bucket/PackageTree/RevisionMenu.tsx","webpack://quilt-navigator/./app/containers/Bucket/PackageTree/gql/Revision.generated.ts","webpack://quilt-navigator/./app/containers/Bucket/PackageTree/gql/RevisionList.generated.ts","webpack://quilt-navigator/./app/containers/Bucket/PackageTree/gql/Dir.generated.ts","webpack://quilt-navigator/./app/containers/Bucket/PackageTree/gql/File.generated.ts","webpack://quilt-navigator/./app/containers/Bucket/PackageTree/gql/DeleteRevision.generated.ts","webpack://quilt-navigator/./app/containers/Bucket/PackageTree/PackageTree.tsx","webpack://quilt-navigator/./app/containers/Bucket/WithPackagesSupport.tsx","webpack://quilt-navigator/./app/utils/voila.ts","webpack://quilt-navigator/./app/containers/Bucket/viewModes.ts","webpack://quilt-navigator/./app/utils/PackageUri.ts","webpack://quilt-navigator/./app/containers/Bucket/renderPreview.js"],"sourcesContent":["import cx from 'classnames'\nimport * as dateFns from 'date-fns'\nimport * as React from 'react'\nimport * as M from '@material-ui/core'\n\nimport Skeleton from 'components/Skeleton'\nimport { readableBytes } from 'utils/string'\n\nimport * as requests from './requests'\n\ninterface FilePropertyProps extends M.TypographyProps {\n  children: React.ReactNode\n  className: string\n}\n\nconst useFilePropertyStyles = M.makeStyles((t) => ({\n  root: {\n    alignItems: 'center',\n    display: 'inline-flex',\n  },\n  icon: {\n    color: t.palette.text.hint,\n    fontSize: 16,\n    marginRight: '2px',\n  },\n}))\n\nfunction FileProperty({ className, children, ...props }: FilePropertyProps) {\n  const classes = useFilePropertyStyles()\n  return (\n    <M.Typography\n      className={cx(classes.root, className)}\n      component=\"span\"\n      variant=\"body2\"\n      {...props}\n    >\n      {children}\n    </M.Typography>\n  )\n}\n\nfunction FilePropertiesSkeleton({ className }: { className: string }) {\n  const classes = useFilePropertiesStyles()\n  return (\n    <div className={cx(classes.root, className)}>\n      <Skeleton animate className={classes.property} width=\"80px\" height=\"14px\" />\n      <Skeleton animate className={classes.property} width=\"80px\" height=\"14px\" />\n    </div>\n  )\n}\n\ninterface FilePropertiesProps {\n  data: $TSFixMe\n  className: string\n}\n\nconst useFilePropertiesStyles = M.makeStyles((t) => ({\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  property: {\n    marginLeft: t.spacing(1),\n  },\n}))\n\ninterface FilePropertiesBareProps {\n  className?: string\n  lastModified?: Date\n  size?: number\n}\n\nexport function FileProperties({\n  className,\n  lastModified,\n  size,\n}: FilePropertiesBareProps) {\n  const classes = useFilePropertiesStyles()\n\n  const today = React.useMemo(() => new Date(), [])\n  const formattedDate = React.useMemo(\n    () =>\n      lastModified\n        ? dateFns.format(\n            lastModified,\n            today.getFullYear() === lastModified.getFullYear() ? 'd MMM' : 'd MMM yyyy',\n          )\n        : null,\n    [lastModified, today],\n  )\n  const formattedSize = React.useMemo(() => readableBytes(size), [size])\n\n  return (\n    <div className={cx(classes.root, className)}>\n      {formattedDate && (\n        <FileProperty title={lastModified?.toLocaleString()} className={classes.property}>\n          {formattedDate}\n        </FileProperty>\n      )}\n      <FileProperty className={classes.property}>{formattedSize}</FileProperty>\n    </div>\n  )\n}\n\nexport default function Wrapper({ className, data }: FilePropertiesProps) {\n  const classes = useFilePropertiesStyles()\n  return (\n    <div className={cx(classes.root, className)}>\n      {data.case({\n        Ok: requests.ObjectExistence.case({\n          Exists: ({ lastModified, size }: { lastModified?: Date; size?: number }) => (\n            <FileProperties {...{ className, lastModified, size }} />\n          ),\n          _: () => null,\n        }),\n        Err: (e: Error) => (\n          <M.Icon title={`Fetching object info failed: ${e.message}`} color=\"error\">\n            warning_outline\n          </M.Icon>\n        ),\n        _: () => <FilePropertiesSkeleton className={className} />,\n      })}\n    </div>\n  )\n}\n","import * as React from 'react'\nimport * as M from '@material-ui/core'\nimport * as Lab from '@material-ui/lab'\n\nimport * as IPC from 'utils/electron/ipc-provider'\nimport * as Config from 'utils/Config'\nimport * as TeleportUri from 'utils/TeleportUri'\nimport { PackageHandle } from 'utils/packageHandle'\nimport { readableBytes } from 'utils/string'\n\nconst SIZE_THRESHOLD = 1024 * 1024 * 100\n\nconst isNumber = (v: any) => typeof v === 'number' && !Number.isNaN(v)\n\ninterface OpenInDesktopProps {\n  onClose: () => void\n  onConfirm: () => Promise<void>\n  open: boolean\n  size?: number\n}\n\nexport function Dialog({ onClose, onConfirm, open, size }: OpenInDesktopProps) {\n  const [error, setError] = React.useState<Error | null>(null)\n  const [disabled, setDisabled] = React.useState(false)\n  const handleConfirm = React.useCallback(async () => {\n    try {\n      setDisabled(true)\n      await onConfirm()\n      setDisabled(false)\n      onClose()\n    } catch (e) {\n      if (e instanceof Error) setError(e)\n    }\n  }, [onClose, onConfirm])\n  return (\n    <M.Dialog open={open} onClose={onClose}>\n      <M.DialogTitle>Open in Teleport</M.DialogTitle>\n      <M.DialogContent>\n        <M.Typography>Download package and open in desktop application</M.Typography>\n        {isNumber(size) && (\n          <M.Typography>Total size of package is {readableBytes(size)}</M.Typography>\n        )}\n        <M.Typography>It could take a while</M.Typography>\n        {error && <Lab.Alert severity=\"error\">{error.message}</Lab.Alert>}\n      </M.DialogContent>\n      <M.DialogActions>\n        <M.Button onClick={onClose}>Cancel</M.Button>\n        <M.Button\n          color=\"primary\"\n          disabled={disabled}\n          onClick={handleConfirm}\n          variant=\"contained\"\n        >\n          Confirm\n        </M.Button>\n      </M.DialogActions>\n    </M.Dialog>\n  )\n}\n\nfunction useOpenInDesktop(packageHandle: PackageHandle, size?: number) {\n  const { desktop } = Config.use()\n  const ipc = IPC.use()\n\n  const [confirming, setConfirming] = React.useState(false)\n  const openInDesktop = React.useCallback(async () => {\n    if (desktop) {\n      await ipc.invoke(IPC.EVENTS.DOWNLOAD_PACKAGE, packageHandle)\n    } else {\n      const deepLink = TeleportUri.stringify(packageHandle)\n      window.location.assign(deepLink)\n    }\n  }, [desktop, ipc, packageHandle])\n  const unconfirm = React.useCallback(() => setConfirming(false), [])\n  const confirm = React.useCallback(() => {\n    if (!size || size > SIZE_THRESHOLD) {\n      setConfirming(true)\n    } else {\n      openInDesktop()\n    }\n  }, [openInDesktop, size])\n  // TODO: probably rename OpenInDesktop to something\n  //       then you can rename confirm → open, unconfirm → close\n  return {\n    confirm,\n    confirming,\n    openInDesktop,\n    unconfirm,\n  }\n}\n\nexport const use = useOpenInDesktop\n","import * as PackageUri from './PackageUri'\n\n// TODO: add query\n// export functin parse() {}\n\nexport function stringify(packageHandle: PackageUri.PackageUri): string {\n  return PackageUri.stringify(packageHandle).replace('quilt+s3', 'teleport')\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'\nimport * as Types from '../../../../model/graphql/types.generated'\n\nimport {\n  PackagePushSuccessSelectionFragment,\n  PackagePushSuccessSelectionFragmentDoc,\n} from './PackagePushSuccessSelection.generated'\nimport {\n  InvalidInputSelectionFragment,\n  InvalidInputSelectionFragmentDoc,\n} from './InvalidInputSelection.generated'\nimport {\n  OperationErrorSelectionFragment,\n  OperationErrorSelectionFragmentDoc,\n} from './OperationErrorSelection.generated'\n\nexport type containers_Bucket_PackageDialog_gql_PackagePromoteMutationVariables =\n  Types.Exact<{\n    params: Types.PackagePushParams\n    src: Types.PackagePromoteSource\n  }>\n\nexport type containers_Bucket_PackageDialog_gql_PackagePromoteMutation = {\n  readonly __typename: 'Mutation'\n} & {\n  readonly packagePromote:\n    | ({\n        readonly __typename: 'PackagePushSuccess'\n      } & PackagePushSuccessSelectionFragment)\n    | ({ readonly __typename: 'InvalidInput' } & InvalidInputSelectionFragment)\n    | ({ readonly __typename: 'OperationError' } & OperationErrorSelectionFragment)\n}\n\nexport const containers_Bucket_PackageDialog_gql_PackagePromoteDocument = {\n  kind: 'Document',\n  definitions: [\n    {\n      kind: 'OperationDefinition',\n      operation: 'mutation',\n      name: { kind: 'Name', value: 'containers_Bucket_PackageDialog_gql_PackagePromote' },\n      variableDefinitions: [\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'params' } },\n          type: {\n            kind: 'NonNullType',\n            type: {\n              kind: 'NamedType',\n              name: { kind: 'Name', value: 'PackagePushParams' },\n            },\n          },\n        },\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'src' } },\n          type: {\n            kind: 'NonNullType',\n            type: {\n              kind: 'NamedType',\n              name: { kind: 'Name', value: 'PackagePromoteSource' },\n            },\n          },\n        },\n      ],\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [\n          {\n            kind: 'Field',\n            name: { kind: 'Name', value: 'packagePromote' },\n            arguments: [\n              {\n                kind: 'Argument',\n                name: { kind: 'Name', value: 'params' },\n                value: { kind: 'Variable', name: { kind: 'Name', value: 'params' } },\n              },\n              {\n                kind: 'Argument',\n                name: { kind: 'Name', value: 'src' },\n                value: { kind: 'Variable', name: { kind: 'Name', value: 'src' } },\n              },\n            ],\n            selectionSet: {\n              kind: 'SelectionSet',\n              selections: [\n                { kind: 'Field', name: { kind: 'Name', value: '__typename' } },\n                {\n                  kind: 'FragmentSpread',\n                  name: { kind: 'Name', value: 'PackagePushSuccessSelection' },\n                },\n                {\n                  kind: 'FragmentSpread',\n                  name: { kind: 'Name', value: 'InvalidInputSelection' },\n                },\n                {\n                  kind: 'FragmentSpread',\n                  name: { kind: 'Name', value: 'OperationErrorSelection' },\n                },\n              ],\n            },\n          },\n        ],\n      },\n    },\n    ...PackagePushSuccessSelectionFragmentDoc.definitions,\n    ...InvalidInputSelectionFragmentDoc.definitions,\n    ...OperationErrorSelectionFragmentDoc.definitions,\n  ],\n} as unknown as DocumentNode<\n  containers_Bucket_PackageDialog_gql_PackagePromoteMutation,\n  containers_Bucket_PackageDialog_gql_PackagePromoteMutationVariables\n>\n\nexport { containers_Bucket_PackageDialog_gql_PackagePromoteDocument as default }\n","import * as FF from 'final-form'\nimport * as R from 'ramda'\nimport * as React from 'react'\nimport * as RF from 'react-final-form'\nimport * as urql from 'urql'\nimport * as M from '@material-ui/core'\n\nimport * as Intercom from 'components/Intercom'\nimport * as AWS from 'utils/AWS'\nimport * as Data from 'utils/Data'\nimport * as NamedRoutes from 'utils/NamedRoutes'\nimport StyledLink from 'utils/StyledLink'\nimport assertNever from 'utils/assertNever'\nimport { mkFormError, mapInputErrors } from 'utils/formTools'\nimport * as tagged from 'utils/taggedV2'\nimport * as Types from 'utils/types'\nimport * as validators from 'utils/validators'\nimport * as workflows from 'utils/workflows'\n\nimport * as PD from './PackageDialog'\nimport PACKAGE_PROMOTE from './PackageDialog/gql/PackagePromote.generated'\nimport * as requests from './requests'\n\nconst useFormSkeletonStyles = M.makeStyles((t) => ({\n  meta: {\n    marginTop: t.spacing(3),\n  },\n}))\n\ninterface FormSkeletonProps {\n  animate?: boolean\n}\n\nfunction FormSkeleton({ animate }: FormSkeletonProps) {\n  const classes = useFormSkeletonStyles()\n\n  return (\n    <>\n      <PD.TextFieldSkeleton animate={animate} />\n      <PD.TextFieldSkeleton animate={animate} />\n\n      <PD.MetaInputSkeleton className={classes.meta} animate={animate} />\n      <PD.WorkflowsInputSkeleton animate={animate} />\n    </>\n  )\n}\n\ninterface DialogTitleProps {\n  bucket: string\n}\n\nfunction DialogTitle({ bucket }: DialogTitleProps) {\n  const { urls } = NamedRoutes.use()\n\n  return (\n    <M.DialogTitle>\n      Push package to{' '}\n      <StyledLink target=\"_blank\" to={urls.bucketOverview(bucket)}>\n        {bucket}\n      </StyledLink>{' '}\n      bucket\n    </M.DialogTitle>\n  )\n}\n\nconst useStyles = M.makeStyles((t) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    overflowY: 'auto',\n  },\n  meta: {\n    display: 'flex',\n    flexDirection: 'column',\n    paddingTop: t.spacing(3),\n    overflowY: 'auto',\n  },\n}))\n\ninterface DialogFormProps {\n  bucket: string\n  close: () => void\n  hash: string\n  initialMeta: PD.Manifest['meta']\n  name: string\n  setSubmitting: (submitting: boolean) => void\n  setSuccess: (success: PackageCreationSuccess) => void\n  setWorkflow: (workflow: workflows.Workflow) => void\n  successor: workflows.Successor\n  workflowsConfig: workflows.WorkflowsConfig\n}\n\nfunction DialogForm({\n  bucket,\n  close,\n  hash,\n  initialMeta,\n  name: initialName,\n  responseError,\n  schema,\n  schemaLoading,\n  selectedWorkflow,\n  setSubmitting,\n  setSuccess,\n  setWorkflow,\n  successor,\n  validate: validateMetaInput,\n  workflowsConfig,\n}: DialogFormProps & PD.SchemaFetcherRenderProps) {\n  const nameValidator = PD.useNameValidator(selectedWorkflow)\n  const nameExistence = PD.useNameExistence(successor.slug)\n  const [nameWarning, setNameWarning] = React.useState<React.ReactNode>('')\n  const [metaHeight, setMetaHeight] = React.useState(0)\n  const classes = useStyles()\n  const validateWorkflow = PD.useWorkflowValidator(workflowsConfig)\n\n  const [, copyPackage] = urql.useMutation(PACKAGE_PROMOTE)\n\n  interface FormData {\n    commitMessage: string\n    name: string\n    meta: Types.JsonRecord | undefined\n    workflow: workflows.Workflow\n  }\n\n  // eslint-disable-next-line consistent-return\n  const onSubmit = async ({ commitMessage, name, meta, workflow }: FormData) => {\n    try {\n      const res = await copyPackage({\n        params: {\n          bucket: successor.slug,\n          name,\n          message: commitMessage,\n          userMeta: requests.getMetaValue(meta, schema) ?? null,\n          workflow:\n            // eslint-disable-next-line no-nested-ternary\n            workflow.slug === workflows.notAvailable\n              ? null\n              : workflow.slug === workflows.notSelected\n              ? ''\n              : workflow.slug,\n        },\n        src: {\n          bucket,\n          name: initialName,\n          hash,\n        },\n      })\n      if (res.error) throw res.error\n      if (!res.data) throw new Error('No data returned by the API')\n      const r = res.data.packagePromote\n      switch (r.__typename) {\n        case 'PackagePushSuccess':\n          setSuccess({ name, hash: r.revision.hash, bucket: successor.slug })\n          return\n        case 'OperationError':\n          return mkFormError(r.message)\n        case 'InvalidInput':\n          return mapInputErrors(r.errors)\n        default:\n          assertNever(r)\n      }\n    } catch (e: any) {\n      // eslint-disable-next-line no-console\n      console.error('Error creating manifest:')\n      // eslint-disable-next-line no-console\n      console.error(e)\n      return mkFormError(\n        e.message ? `Unexpected error: ${e.message}` : PD.ERROR_MESSAGES.MANIFEST,\n      )\n    }\n  }\n\n  const onSubmitWrapped = async (...args: Parameters<typeof onSubmit>) => {\n    setSubmitting(true)\n    try {\n      return await onSubmit(...args)\n    } finally {\n      setSubmitting(false)\n    }\n  }\n\n  const handleNameChange = React.useCallback(\n    async (name) => {\n      const nameExists = await nameExistence.validate(name)\n      const warning = <PD.PackageNameWarning exists={!!nameExists} />\n\n      if (warning !== nameWarning) {\n        setNameWarning(warning)\n      }\n    },\n    [nameWarning, nameExistence],\n  )\n\n  const [editorElement, setEditorElement] = React.useState<HTMLDivElement | null>(null)\n  const resizeObserver = React.useMemo(\n    () =>\n      new window.ResizeObserver((entries) => {\n        const { height } = entries[0].contentRect\n        setMetaHeight(height)\n      }),\n    [setMetaHeight],\n  )\n\n  // HACK: FIXME: it triggers name validation with correct workflow\n  const [hideMeta, setHideMeta] = React.useState(false)\n\n  const onFormChange = React.useCallback(\n    async ({ modified, values }) => {\n      if (modified.workflow && values.workflow !== selectedWorkflow) {\n        setWorkflow(values.workflow)\n\n        // HACK: FIXME: it triggers name validation with correct workflow\n        setHideMeta(true)\n        setTimeout(() => {\n          setHideMeta(false)\n        }, 300)\n      }\n\n      handleNameChange(values.name)\n    },\n    [handleNameChange, selectedWorkflow, setWorkflow],\n  )\n\n  React.useEffect(() => {\n    if (editorElement) resizeObserver.observe(editorElement)\n    return () => {\n      if (editorElement) resizeObserver.unobserve(editorElement)\n    }\n  }, [editorElement, resizeObserver])\n\n  const dialogContentClasses = PD.useContentStyles({ metaHeight })\n\n  return (\n    <RF.Form\n      onSubmit={onSubmitWrapped}\n      subscription={{\n        error: true,\n        hasValidationErrors: true,\n        submitError: true,\n        submitFailed: true,\n        submitting: true,\n      }}\n    >\n      {({\n        error,\n        hasValidationErrors,\n        submitError,\n        submitFailed,\n        submitting,\n        handleSubmit,\n      }) => (\n        <>\n          <DialogTitle bucket={successor.slug} />\n          <M.DialogContent classes={dialogContentClasses}>\n            <form onSubmit={handleSubmit} className={classes.form}>\n              <RF.FormSpy\n                subscription={{ modified: true, values: true }}\n                onChange={onFormChange}\n              />\n\n              <RF.FormSpy\n                subscription={{ modified: true, values: true }}\n                onChange={({ modified, values }) => {\n                  if (modified?.workflow) {\n                    setWorkflow(values.workflow)\n                  }\n                }}\n              />\n\n              <RF.Field\n                component={PD.WorkflowInput}\n                bucket={bucket}\n                name=\"workflow\"\n                workflowsConfig={workflowsConfig}\n                initialValue={selectedWorkflow}\n                validate={validateWorkflow}\n                validateFields={['meta', 'workflow']}\n                errors={{\n                  required: 'Workflow is required for this bucket.',\n                }}\n              />\n\n              <RF.Field\n                component={PD.PackageNameInput}\n                name=\"name\"\n                workflow={selectedWorkflow || workflowsConfig}\n                validate={validators.composeAsync(\n                  validators.required,\n                  nameValidator.validate,\n                )}\n                validateFields={['name']}\n                errors={{\n                  required: 'Enter a package name',\n                  invalid: 'Invalid package name',\n                  pattern: `Name should match ${selectedWorkflow?.packageNamePattern}`,\n                }}\n                helperText={nameWarning}\n                initialValue={initialName}\n              />\n\n              <RF.Field\n                component={PD.CommitMessageInput}\n                name=\"commitMessage\"\n                validate={validators.required as FF.FieldValidator<any>}\n                validateFields={['commitMessage']}\n                errors={{\n                  required: 'Enter a commit message',\n                }}\n              />\n\n              {schemaLoading || hideMeta ? (\n                <PD.MetaInputSkeleton className={classes.meta} ref={setEditorElement} />\n              ) : (\n                <RF.Field\n                  className={classes.meta}\n                  component={PD.MetaInput}\n                  name=\"meta\"\n                  bucket={successor.slug}\n                  schema={schema}\n                  schemaError={responseError}\n                  validate={validateMetaInput}\n                  validateFields={['meta']}\n                  isEqual={R.equals}\n                  ref={setEditorElement}\n                  initialValue={initialMeta}\n                />\n              )}\n\n              <input type=\"submit\" style={{ display: 'none' }} />\n            </form>\n          </M.DialogContent>\n          <M.DialogActions>\n            {submitting && (\n              <PD.SubmitSpinner>\n                {successor.copyData\n                  ? 'Copying files and writing manifest'\n                  : 'Writing manifest'}\n              </PD.SubmitSpinner>\n            )}\n\n            {!submitting && (!!error || !!submitError) && (\n              <M.Box flexGrow={1} display=\"flex\" alignItems=\"center\" pl={2}>\n                <M.Icon color=\"error\">error_outline</M.Icon>\n                <M.Box pl={1} />\n                <M.Typography variant=\"body2\" color=\"error\">\n                  {error || submitError}\n                </M.Typography>\n              </M.Box>\n            )}\n\n            <M.Button onClick={close} disabled={submitting}>\n              Cancel\n            </M.Button>\n            <M.Button\n              onClick={handleSubmit}\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={submitting || (submitFailed && hasValidationErrors)}\n            >\n              Push\n            </M.Button>\n          </M.DialogActions>\n        </>\n      )}\n    </RF.Form>\n  )\n}\n\ninterface DialogErrorProps {\n  bucket: string\n  error: Error\n  onCancel: () => void\n}\n\nfunction DialogError({ bucket, error, onCancel }: DialogErrorProps) {\n  const { urls } = NamedRoutes.use()\n\n  return (\n    <PD.DialogError\n      bucket={bucket}\n      error={error}\n      skeletonElement={<FormSkeleton animate={false} />}\n      title={\n        <>\n          Push package to{' '}\n          <StyledLink target=\"_blank\" to={urls.bucketOverview(bucket)}>\n            {bucket}\n          </StyledLink>{' '}\n          bucket\n        </>\n      }\n      onCancel={onCancel}\n    />\n  )\n}\n\ninterface DialogLoadingProps {\n  bucket: string\n  onCancel: () => void\n}\n\nfunction DialogLoading({ bucket, onCancel }: DialogLoadingProps) {\n  const { urls } = NamedRoutes.use()\n\n  return (\n    <PD.DialogLoading\n      skeletonElement={<FormSkeleton />}\n      title={\n        <>\n          Push package to{' '}\n          <StyledLink target=\"_blank\" to={urls.bucketOverview(bucket)}>\n            {bucket}\n          </StyledLink>{' '}\n          bucket\n        </>\n      }\n      onCancel={onCancel}\n    />\n  )\n}\n\ninterface PackageCreationSuccess {\n  bucket: string\n  name: string\n  hash: string\n}\n\nconst DialogState = tagged.create(\n  'app/containers/Bucket/PackageCopyDialog:DialogState' as const,\n  {\n    Loading: () => {},\n    Error: (e: Error) => e,\n    Form: (v: { manifest: PD.Manifest; workflowsConfig: workflows.WorkflowsConfig }) => v,\n    Success: (v: PackageCreationSuccess) => v,\n  },\n)\n\ninterface PackageCopyDialogProps {\n  open: boolean\n  bucket: string\n  successor: workflows.Successor | null\n  name: string\n  hash: string\n  onExited: (props: { pushed: PackageCreationSuccess | null }) => void\n}\n\nexport default function PackageCopyDialog({\n  open,\n  bucket,\n  successor,\n  name,\n  hash,\n  onExited,\n}: PackageCopyDialogProps) {\n  const s3 = AWS.S3.use()\n\n  const [success, setSuccess] = React.useState<PackageCreationSuccess | null>(null)\n  const [submitting, setSubmitting] = React.useState(false)\n\n  const [workflow, setWorkflow] = React.useState<workflows.Workflow>()\n\n  const manifestData = PD.useManifest({\n    bucket,\n    name,\n    hash,\n    skipEntries: true,\n    pause: !successor || !open,\n  })\n\n  const workflowsData = Data.use(\n    requests.workflowsConfig,\n    { s3, bucket: successor ? successor.slug : '' },\n    { noAutoFetch: !successor || !open },\n  )\n\n  const state = React.useMemo(() => {\n    if (success) return DialogState.Success(success)\n    return workflowsData.case({\n      Ok: (workflowsConfig: workflows.WorkflowsConfig) =>\n        manifestData.case({\n          Ok: (manifest: PD.Manifest) => DialogState.Form({ manifest, workflowsConfig }),\n          Err: DialogState.Error,\n          _: DialogState.Loading,\n        }),\n      Err: DialogState.Error,\n      _: DialogState.Loading,\n    })\n  }, [success, workflowsData, manifestData])\n\n  const handleExited = React.useCallback(() => {\n    if (submitting) return\n\n    onExited({\n      pushed: success,\n    })\n    setSuccess(null)\n  }, [submitting, success, setSuccess, onExited])\n\n  const close = React.useCallback(() => {\n    if (submitting) return\n\n    onExited({\n      pushed: success,\n    })\n    setSuccess(null)\n  }, [submitting, success, setSuccess, onExited])\n\n  Intercom.usePauseVisibilityWhen(open)\n\n  return (\n    <M.Dialog fullWidth onClose={close} onExited={handleExited} open={open} scroll=\"body\">\n      {DialogState.match({\n        Error: (e) =>\n          successor && <DialogError bucket={successor.slug} onCancel={close} error={e} />,\n        Loading: () =>\n          successor && <DialogLoading bucket={successor.slug} onCancel={close} />,\n        Form: ({ manifest, workflowsConfig }) =>\n          successor && (\n            <PD.SchemaFetcher\n              initialWorkflowId={manifest.workflowId}\n              workflowsConfig={workflowsConfig}\n              workflow={workflow}\n            >\n              {(schemaProps) => (\n                <DialogForm\n                  {...schemaProps}\n                  {...{\n                    bucket,\n                    close,\n                    setSubmitting,\n                    setSuccess,\n                    setWorkflow,\n                    workflowsConfig,\n                    initialMeta: manifest.meta,\n                    hash,\n                    name,\n                    successor,\n                  }}\n                />\n              )}\n            </PD.SchemaFetcher>\n          ),\n        Success: (props) => successor && <PD.DialogSuccess {...props} onClose={close} />,\n      })(state)}\n    </M.Dialog>\n  )\n}\n","import * as React from 'react'\nimport * as M from '@material-ui/core'\n\nimport * as NamedRoutes from 'utils/NamedRoutes'\nimport Link from 'utils/StyledLink'\n\nconst useStyles = M.makeStyles({\n  name: {\n    wordBreak: 'break-all',\n  },\n})\n\ninterface PackageLinkProps {\n  bucket: string\n  name: string\n}\n\nexport default function PackageLink({ bucket, name }: PackageLinkProps) {\n  const classes = useStyles()\n  const { urls } = NamedRoutes.use()\n  const [prefix, suffix] = name.split('/')\n  return (\n    <span className={classes.name}>\n      <Link to={urls.bucketPackageList(bucket, { filter: `${prefix}/` })}>{prefix}/</Link>\n      <Link to={urls.bucketPackageDetail(bucket, name)}>{suffix}</Link>\n    </span>\n  )\n}\n","import * as React from 'react'\nimport * as M from '@material-ui/core'\nimport * as Lab from '@material-ui/lab'\n\nimport Code from 'components/Code'\nimport * as packageHandleUtils from 'utils/packageHandle'\n\nconst useStyles = M.makeStyles((t) => ({\n  danger: {\n    color: t.palette.error.dark,\n  },\n  lock: {\n    alignItems: 'center',\n    background: 'rgba(255,255,255,0.7)',\n    border: `1px solid ${t.palette.action.disabled}`,\n    borderRadius: t.shape.borderRadius,\n    bottom: 0,\n    cursor: 'not-allowed',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n  progressContainer: {\n    display: 'flex',\n    position: 'relative',\n  },\n}))\n\ninterface PackageDeleteDialogProps {\n  error?: React.ReactNode\n  loading: boolean\n  onClose: () => void\n  onDelete: (handle: packageHandleUtils.PackageHandle) => void\n  open: boolean\n  packageHandle: packageHandleUtils.PackageHandle\n}\n\nexport default function PackageDeleteDialog({\n  error,\n  loading,\n  onClose,\n  onDelete,\n  open,\n  packageHandle,\n}: PackageDeleteDialogProps) {\n  const classes = useStyles()\n\n  const onConfirm = React.useCallback(() => {\n    onDelete(packageHandle)\n  }, [packageHandle, onDelete])\n\n  const onCancel = React.useCallback(() => {\n    if (!loading) onClose()\n  }, [loading, onClose])\n\n  return (\n    <M.Dialog\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      open={open}\n      onClose={onCancel}\n    >\n      <M.DialogTitle id=\"alert-dialog-title\">\n        Really delete revision{' '}\n        <Code>{packageHandleUtils.shortenRevision(packageHandle.hash)}</Code> of{' '}\n        <Code>{packageHandle.name}</Code>?\n      </M.DialogTitle>\n      <M.DialogContent id=\"alert-dialog-description\">\n        <M.DialogContentText>\n          This package revision will be lost forever. Package deletion does not delete\n          objects in the package, but it does delete all metadata and all records of the\n          contents of this revision. Are you sure you want to delete it?\n        </M.DialogContentText>\n\n        {!!error && <Lab.Alert severity=\"error\">{error}</Lab.Alert>}\n      </M.DialogContent>\n\n      <M.DialogActions>\n        <M.Button onClick={onCancel} color=\"primary\" autoFocus disabled={loading}>\n          Cancel\n        </M.Button>\n        <M.Button onClick={onConfirm} className={classes.danger} disabled={loading}>\n          Yes, delete it\n        </M.Button>\n      </M.DialogActions>\n\n      {loading && (\n        <div className={classes.lock}>\n          <div className={classes.progressContainer}>\n            <M.CircularProgress size={80} variant=\"indeterminate\" />\n          </div>\n        </div>\n      )}\n    </M.Dialog>\n  )\n}\n","import cx from 'classnames'\nimport * as dateFns from 'date-fns'\nimport * as R from 'ramda'\nimport * as React from 'react'\nimport { Link as RRLink } from 'react-router-dom'\nimport type { ResultOf } from '@graphql-typed-document-node/core'\nimport * as M from '@material-ui/core'\n\nimport * as Notifications from 'containers/Notifications'\nimport * as NamedRoutes from 'utils/NamedRoutes'\nimport { linkStyle } from 'utils/StyledLink'\nimport copyToClipboard from 'utils/clipboard'\nimport { UseQueryResult } from 'utils/useQuery'\n\nimport REVISION_LIST_QUERY from './gql/RevisionList.generated'\n\nconst useRevisionInfoStyles = M.makeStyles((t) => ({\n  revision: {\n    ...linkStyle,\n    alignItems: 'center',\n    display: 'inline-flex',\n  },\n  mono: {\n    // @ts-expect-error\n    fontFamily: t.typography.monospace.fontFamily,\n  },\n  line: {\n    whiteSpace: 'nowrap',\n  },\n  secondaryText: {\n    display: 'block',\n    height: 40,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  list: {\n    width: 420,\n  },\n}))\n\ninterface RevisionInfoProps {\n  bucket: string\n  name: string\n  path: string\n  hashOrTag: string\n  hash?: string\n  revisionListQuery: UseQueryResult<ResultOf<typeof REVISION_LIST_QUERY>>\n}\n\nexport default function RevisionInfo({\n  bucket,\n  name,\n  hash,\n  hashOrTag,\n  path,\n  revisionListQuery,\n}: RevisionInfoProps) {\n  const { urls } = NamedRoutes.use()\n  const { push } = Notifications.use()\n  const classes = useRevisionInfoStyles()\n\n  const listRef = React.useRef<HTMLUListElement>(null)\n  const [anchor, setAnchor] = React.useState<HTMLSpanElement | null>(null)\n  const [opened, setOpened] = React.useState(false)\n  const open = React.useCallback(() => setOpened(true), [])\n  const close = React.useCallback(() => setOpened(false), [])\n\n  const getHttpsUri = (h: string) =>\n    `${window.origin}${urls.bucketPackageTree(bucket, name, h, path)}`\n\n  const copyHttpsUri =\n    (h: string, containerRef?: React.RefObject<HTMLUListElement>) =>\n    (e: React.MouseEvent) => {\n      e.preventDefault()\n      copyToClipboard(getHttpsUri(h), { container: containerRef?.current || undefined })\n      push('Canonical URI copied to clipboard')\n    }\n\n  return (\n    <>\n      {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */}\n      <span\n        className={classes.revision}\n        onClick={open}\n        ref={setAnchor}\n        title={hashOrTag.length > 10 ? hashOrTag : undefined}\n      >\n        {R.take(10, hashOrTag)} <M.Icon>expand_more</M.Icon>\n      </span>\n\n      {!!hash && (\n        <M.IconButton\n          size=\"small\"\n          title=\"Copy package revision's canonical catalog URI to the clipboard\"\n          href={getHttpsUri(hash)}\n          onClick={copyHttpsUri(hash)}\n          style={{ marginTop: -4, marginBottom: -4 }}\n        >\n          <M.Icon>link</M.Icon>\n        </M.IconButton>\n      )}\n\n      <M.Popover\n        open={opened && !!anchor}\n        anchorEl={anchor}\n        onClose={close}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n      >\n        <M.List className={classes.list} ref={listRef}>\n          {revisionListQuery.case({\n            data: (d) =>\n              d.package ? (\n                d.package.revisions.page.map((r) => (\n                  <M.ListItem\n                    key={`${r.hash}:${r.modified.valueOf()}`}\n                    button\n                    onClick={close}\n                    selected={r.hash === hash}\n                    component={RRLink}\n                    to={urls.bucketPackageTree(bucket, name, r.hash, path)}\n                  >\n                    <M.ListItemText\n                      primary={dateFns.format(r.modified, 'MMMM do yyyy - h:mma')}\n                      secondary={\n                        <span className={classes.secondaryText}>\n                          <span className={classes.line}>\n                            {r.message || <i>No message</i>}\n                          </span>\n                          <br />\n                          <span className={cx(classes.line, classes.mono)}>{r.hash}</span>\n                        </span>\n                      }\n                    />\n                    <M.ListItemSecondaryAction>\n                      <M.IconButton\n                        title=\"Copy package revision's canonical catalog URI to the clipboard\"\n                        href={getHttpsUri(r.hash)}\n                        onClick={copyHttpsUri(r.hash, listRef)}\n                      >\n                        <M.Icon>link</M.Icon>\n                      </M.IconButton>\n                    </M.ListItemSecondaryAction>\n                  </M.ListItem>\n                ))\n              ) : (\n                <M.ListItem>\n                  <M.ListItemText\n                    primary=\"No revisions found\"\n                    secondary=\"Looks like this package has been deleted\"\n                  />\n                </M.ListItem>\n              ),\n            error: () => (\n              <M.ListItem>\n                <M.ListItemIcon>\n                  <M.Icon>error</M.Icon>\n                </M.ListItemIcon>\n                <M.Typography variant=\"body1\">Error fetching revisions</M.Typography>\n              </M.ListItem>\n            ),\n            fetching: () => (\n              <M.ListItem>\n                <M.ListItemIcon>\n                  <M.CircularProgress size={24} />\n                </M.ListItemIcon>\n                <M.Typography variant=\"body1\">Fetching revisions</M.Typography>\n              </M.ListItem>\n            ),\n          })}\n          <M.Divider />\n          <M.ListItem\n            button\n            onClick={close}\n            component={RRLink}\n            to={urls.bucketPackageRevisions(bucket, name)}\n          >\n            <M.Box textAlign=\"center\" width=\"100%\">\n              Show all revisions\n            </M.Box>\n          </M.ListItem>\n        </M.List>\n      </M.Popover>\n    </>\n  )\n}\n","import * as React from 'react'\n\nimport * as BucketPreferences from 'utils/BucketPreferences'\nimport * as Config from 'utils/Config'\n\nimport Menu from '../Menu'\n\ninterface RevisionMenuProps {\n  className: string\n  onCreateFile: () => void\n  onDelete: () => void\n  onDesktop: () => void\n}\n\nexport default function RevisionMenu({\n  className,\n  onCreateFile,\n  onDelete,\n  onDesktop,\n}: RevisionMenuProps) {\n  const { preferences } = BucketPreferences.use()\n  const { desktop }: { desktop: boolean } = Config.use()\n\n  const items = React.useMemo(() => {\n    const menu = []\n    if (preferences?.ui?.actions?.revisePackage) {\n      menu.push({\n        onClick: onCreateFile,\n        title: 'Create file',\n      })\n    }\n    if (preferences?.ui?.actions?.deleteRevision) {\n      menu.push({\n        onClick: onDelete,\n        title: 'Delete revision',\n      })\n    }\n    if (preferences?.ui?.actions?.openInDesktop && !desktop) {\n      menu.push({\n        onClick: onDesktop,\n        title: 'Open in Teleport',\n      })\n    }\n    return menu\n  }, [desktop, onCreateFile, onDelete, onDesktop, preferences])\n\n  if (!items.length) return null\n\n  return <Menu className={className} items={items} />\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'\nimport * as Types from '../../../../model/graphql/types.generated'\n\nexport type containers_Bucket_PackageTree_gql_RevisionQueryVariables = Types.Exact<{\n  bucket: Types.Scalars['String']\n  name: Types.Scalars['String']\n  hashOrTag: Types.Scalars['String']\n}>\n\nexport type containers_Bucket_PackageTree_gql_RevisionQuery = {\n  readonly __typename: 'Query'\n} & {\n  readonly package: Types.Maybe<\n    { readonly __typename: 'Package' } & Pick<Types.Package, 'bucket' | 'name'> & {\n        readonly revision: Types.Maybe<\n          { readonly __typename: 'PackageRevision' } & Pick<\n            Types.PackageRevision,\n            'hash' | 'totalBytes'\n          >\n        >\n      }\n  >\n}\n\nexport const containers_Bucket_PackageTree_gql_RevisionDocument = {\n  kind: 'Document',\n  definitions: [\n    {\n      kind: 'OperationDefinition',\n      operation: 'query',\n      name: { kind: 'Name', value: 'containers_Bucket_PackageTree_gql_Revision' },\n      variableDefinitions: [\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'bucket' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n          },\n        },\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'name' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n          },\n        },\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'hashOrTag' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n          },\n        },\n      ],\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [\n          {\n            kind: 'Field',\n            name: { kind: 'Name', value: 'package' },\n            arguments: [\n              {\n                kind: 'Argument',\n                name: { kind: 'Name', value: 'bucket' },\n                value: { kind: 'Variable', name: { kind: 'Name', value: 'bucket' } },\n              },\n              {\n                kind: 'Argument',\n                name: { kind: 'Name', value: 'name' },\n                value: { kind: 'Variable', name: { kind: 'Name', value: 'name' } },\n              },\n            ],\n            selectionSet: {\n              kind: 'SelectionSet',\n              selections: [\n                { kind: 'Field', name: { kind: 'Name', value: 'bucket' } },\n                { kind: 'Field', name: { kind: 'Name', value: 'name' } },\n                {\n                  kind: 'Field',\n                  name: { kind: 'Name', value: 'revision' },\n                  arguments: [\n                    {\n                      kind: 'Argument',\n                      name: { kind: 'Name', value: 'hashOrTag' },\n                      value: {\n                        kind: 'Variable',\n                        name: { kind: 'Name', value: 'hashOrTag' },\n                      },\n                    },\n                  ],\n                  selectionSet: {\n                    kind: 'SelectionSet',\n                    selections: [\n                      { kind: 'Field', name: { kind: 'Name', value: 'hash' } },\n                      { kind: 'Field', name: { kind: 'Name', value: 'totalBytes' } },\n                    ],\n                  },\n                },\n              ],\n            },\n          },\n        ],\n      },\n    },\n  ],\n} as unknown as DocumentNode<\n  containers_Bucket_PackageTree_gql_RevisionQuery,\n  containers_Bucket_PackageTree_gql_RevisionQueryVariables\n>\n\nexport { containers_Bucket_PackageTree_gql_RevisionDocument as default }\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'\nimport * as Types from '../../../../model/graphql/types.generated'\n\nexport type containers_Bucket_PackageTree_gql_RevisionListQueryVariables = Types.Exact<{\n  bucket: Types.Scalars['String']\n  name: Types.Scalars['String']\n}>\n\nexport type containers_Bucket_PackageTree_gql_RevisionListQuery = {\n  readonly __typename: 'Query'\n} & {\n  readonly package: Types.Maybe<\n    { readonly __typename: 'Package' } & Pick<Types.Package, 'bucket' | 'name'> & {\n        readonly revisions: { readonly __typename: 'PackageRevisionList' } & {\n          readonly page: ReadonlyArray<\n            { readonly __typename: 'PackageRevision' } & Pick<\n              Types.PackageRevision,\n              'hash' | 'modified' | 'message'\n            >\n          >\n        }\n      }\n  >\n}\n\nexport const containers_Bucket_PackageTree_gql_RevisionListDocument = {\n  kind: 'Document',\n  definitions: [\n    {\n      kind: 'OperationDefinition',\n      operation: 'query',\n      name: { kind: 'Name', value: 'containers_Bucket_PackageTree_gql_RevisionList' },\n      variableDefinitions: [\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'bucket' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n          },\n        },\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'name' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n          },\n        },\n      ],\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [\n          {\n            kind: 'Field',\n            name: { kind: 'Name', value: 'package' },\n            arguments: [\n              {\n                kind: 'Argument',\n                name: { kind: 'Name', value: 'bucket' },\n                value: { kind: 'Variable', name: { kind: 'Name', value: 'bucket' } },\n              },\n              {\n                kind: 'Argument',\n                name: { kind: 'Name', value: 'name' },\n                value: { kind: 'Variable', name: { kind: 'Name', value: 'name' } },\n              },\n            ],\n            selectionSet: {\n              kind: 'SelectionSet',\n              selections: [\n                { kind: 'Field', name: { kind: 'Name', value: 'bucket' } },\n                { kind: 'Field', name: { kind: 'Name', value: 'name' } },\n                {\n                  kind: 'Field',\n                  name: { kind: 'Name', value: 'revisions' },\n                  selectionSet: {\n                    kind: 'SelectionSet',\n                    selections: [\n                      {\n                        kind: 'Field',\n                        name: { kind: 'Name', value: 'page' },\n                        arguments: [\n                          {\n                            kind: 'Argument',\n                            name: { kind: 'Name', value: 'number' },\n                            value: { kind: 'IntValue', value: '1' },\n                          },\n                          {\n                            kind: 'Argument',\n                            name: { kind: 'Name', value: 'perPage' },\n                            value: { kind: 'IntValue', value: '5' },\n                          },\n                        ],\n                        selectionSet: {\n                          kind: 'SelectionSet',\n                          selections: [\n                            { kind: 'Field', name: { kind: 'Name', value: 'hash' } },\n                            { kind: 'Field', name: { kind: 'Name', value: 'modified' } },\n                            { kind: 'Field', name: { kind: 'Name', value: 'message' } },\n                          ],\n                        },\n                      },\n                    ],\n                  },\n                },\n              ],\n            },\n          },\n        ],\n      },\n    },\n  ],\n} as unknown as DocumentNode<\n  containers_Bucket_PackageTree_gql_RevisionListQuery,\n  containers_Bucket_PackageTree_gql_RevisionListQueryVariables\n>\n\nexport { containers_Bucket_PackageTree_gql_RevisionListDocument as default }\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'\nimport * as Types from '../../../../model/graphql/types.generated'\n\nexport type containers_Bucket_PackageTree_gql_DirQueryVariables = Types.Exact<{\n  bucket: Types.Scalars['String']\n  name: Types.Scalars['String']\n  hash: Types.Scalars['String']\n  path: Types.Scalars['String']\n}>\n\nexport type containers_Bucket_PackageTree_gql_DirQuery = {\n  readonly __typename: 'Query'\n} & {\n  readonly package: Types.Maybe<\n    { readonly __typename: 'Package' } & Pick<Types.Package, 'bucket' | 'name'> & {\n        readonly revision: Types.Maybe<\n          { readonly __typename: 'PackageRevision' } & Pick<\n            Types.PackageRevision,\n            'hash'\n          > & {\n              readonly dir: Types.Maybe<\n                { readonly __typename: 'PackageDir' } & Pick<\n                  Types.PackageDir,\n                  'path' | 'metadata'\n                > & {\n                    readonly children: ReadonlyArray<\n                      | ({ readonly __typename: 'PackageFile' } & Pick<\n                          Types.PackageFile,\n                          'path' | 'size' | 'physicalKey'\n                        >)\n                      | ({ readonly __typename: 'PackageDir' } & Pick<\n                          Types.PackageDir,\n                          'path' | 'size'\n                        >)\n                    >\n                  }\n              >\n            }\n        >\n      }\n  >\n}\n\nexport const containers_Bucket_PackageTree_gql_DirDocument = {\n  kind: 'Document',\n  definitions: [\n    {\n      kind: 'OperationDefinition',\n      operation: 'query',\n      name: { kind: 'Name', value: 'containers_Bucket_PackageTree_gql_Dir' },\n      variableDefinitions: [\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'bucket' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n          },\n        },\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'name' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n          },\n        },\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'hash' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n          },\n        },\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'path' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n          },\n        },\n      ],\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [\n          {\n            kind: 'Field',\n            name: { kind: 'Name', value: 'package' },\n            arguments: [\n              {\n                kind: 'Argument',\n                name: { kind: 'Name', value: 'bucket' },\n                value: { kind: 'Variable', name: { kind: 'Name', value: 'bucket' } },\n              },\n              {\n                kind: 'Argument',\n                name: { kind: 'Name', value: 'name' },\n                value: { kind: 'Variable', name: { kind: 'Name', value: 'name' } },\n              },\n            ],\n            selectionSet: {\n              kind: 'SelectionSet',\n              selections: [\n                { kind: 'Field', name: { kind: 'Name', value: 'bucket' } },\n                { kind: 'Field', name: { kind: 'Name', value: 'name' } },\n                {\n                  kind: 'Field',\n                  name: { kind: 'Name', value: 'revision' },\n                  arguments: [\n                    {\n                      kind: 'Argument',\n                      name: { kind: 'Name', value: 'hashOrTag' },\n                      value: { kind: 'Variable', name: { kind: 'Name', value: 'hash' } },\n                    },\n                  ],\n                  selectionSet: {\n                    kind: 'SelectionSet',\n                    selections: [\n                      { kind: 'Field', name: { kind: 'Name', value: 'hash' } },\n                      {\n                        kind: 'Field',\n                        name: { kind: 'Name', value: 'dir' },\n                        arguments: [\n                          {\n                            kind: 'Argument',\n                            name: { kind: 'Name', value: 'path' },\n                            value: {\n                              kind: 'Variable',\n                              name: { kind: 'Name', value: 'path' },\n                            },\n                          },\n                        ],\n                        selectionSet: {\n                          kind: 'SelectionSet',\n                          selections: [\n                            { kind: 'Field', name: { kind: 'Name', value: 'path' } },\n                            { kind: 'Field', name: { kind: 'Name', value: 'metadata' } },\n                            {\n                              kind: 'Field',\n                              name: { kind: 'Name', value: 'children' },\n                              selectionSet: {\n                                kind: 'SelectionSet',\n                                selections: [\n                                  {\n                                    kind: 'Field',\n                                    name: { kind: 'Name', value: '__typename' },\n                                  },\n                                  {\n                                    kind: 'InlineFragment',\n                                    typeCondition: {\n                                      kind: 'NamedType',\n                                      name: { kind: 'Name', value: 'PackageFile' },\n                                    },\n                                    selectionSet: {\n                                      kind: 'SelectionSet',\n                                      selections: [\n                                        {\n                                          kind: 'Field',\n                                          name: { kind: 'Name', value: 'path' },\n                                        },\n                                        {\n                                          kind: 'Field',\n                                          name: { kind: 'Name', value: 'size' },\n                                        },\n                                        {\n                                          kind: 'Field',\n                                          name: { kind: 'Name', value: 'physicalKey' },\n                                        },\n                                      ],\n                                    },\n                                  },\n                                  {\n                                    kind: 'InlineFragment',\n                                    typeCondition: {\n                                      kind: 'NamedType',\n                                      name: { kind: 'Name', value: 'PackageDir' },\n                                    },\n                                    selectionSet: {\n                                      kind: 'SelectionSet',\n                                      selections: [\n                                        {\n                                          kind: 'Field',\n                                          name: { kind: 'Name', value: 'path' },\n                                        },\n                                        {\n                                          kind: 'Field',\n                                          name: { kind: 'Name', value: 'size' },\n                                        },\n                                      ],\n                                    },\n                                  },\n                                ],\n                              },\n                            },\n                          ],\n                        },\n                      },\n                    ],\n                  },\n                },\n              ],\n            },\n          },\n        ],\n      },\n    },\n  ],\n} as unknown as DocumentNode<\n  containers_Bucket_PackageTree_gql_DirQuery,\n  containers_Bucket_PackageTree_gql_DirQueryVariables\n>\n\nexport { containers_Bucket_PackageTree_gql_DirDocument as default }\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'\nimport * as Types from '../../../../model/graphql/types.generated'\n\nexport type containers_Bucket_PackageTree_gql_FileQueryVariables = Types.Exact<{\n  bucket: Types.Scalars['String']\n  name: Types.Scalars['String']\n  hash: Types.Scalars['String']\n  path: Types.Scalars['String']\n}>\n\nexport type containers_Bucket_PackageTree_gql_FileQuery = {\n  readonly __typename: 'Query'\n} & {\n  readonly package: Types.Maybe<\n    { readonly __typename: 'Package' } & Pick<Types.Package, 'bucket' | 'name'> & {\n        readonly revision: Types.Maybe<\n          { readonly __typename: 'PackageRevision' } & Pick<\n            Types.PackageRevision,\n            'hash'\n          > & {\n              readonly file: Types.Maybe<\n                { readonly __typename: 'PackageFile' } & Pick<\n                  Types.PackageFile,\n                  'path' | 'metadata' | 'size' | 'physicalKey'\n                >\n              >\n            }\n        >\n      }\n  >\n}\n\nexport const containers_Bucket_PackageTree_gql_FileDocument = {\n  kind: 'Document',\n  definitions: [\n    {\n      kind: 'OperationDefinition',\n      operation: 'query',\n      name: { kind: 'Name', value: 'containers_Bucket_PackageTree_gql_File' },\n      variableDefinitions: [\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'bucket' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n          },\n        },\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'name' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n          },\n        },\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'hash' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n          },\n        },\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'path' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n          },\n        },\n      ],\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [\n          {\n            kind: 'Field',\n            name: { kind: 'Name', value: 'package' },\n            arguments: [\n              {\n                kind: 'Argument',\n                name: { kind: 'Name', value: 'bucket' },\n                value: { kind: 'Variable', name: { kind: 'Name', value: 'bucket' } },\n              },\n              {\n                kind: 'Argument',\n                name: { kind: 'Name', value: 'name' },\n                value: { kind: 'Variable', name: { kind: 'Name', value: 'name' } },\n              },\n            ],\n            selectionSet: {\n              kind: 'SelectionSet',\n              selections: [\n                { kind: 'Field', name: { kind: 'Name', value: 'bucket' } },\n                { kind: 'Field', name: { kind: 'Name', value: 'name' } },\n                {\n                  kind: 'Field',\n                  name: { kind: 'Name', value: 'revision' },\n                  arguments: [\n                    {\n                      kind: 'Argument',\n                      name: { kind: 'Name', value: 'hashOrTag' },\n                      value: { kind: 'Variable', name: { kind: 'Name', value: 'hash' } },\n                    },\n                  ],\n                  selectionSet: {\n                    kind: 'SelectionSet',\n                    selections: [\n                      { kind: 'Field', name: { kind: 'Name', value: 'hash' } },\n                      {\n                        kind: 'Field',\n                        name: { kind: 'Name', value: 'file' },\n                        arguments: [\n                          {\n                            kind: 'Argument',\n                            name: { kind: 'Name', value: 'path' },\n                            value: {\n                              kind: 'Variable',\n                              name: { kind: 'Name', value: 'path' },\n                            },\n                          },\n                        ],\n                        selectionSet: {\n                          kind: 'SelectionSet',\n                          selections: [\n                            { kind: 'Field', name: { kind: 'Name', value: 'path' } },\n                            { kind: 'Field', name: { kind: 'Name', value: 'metadata' } },\n                            { kind: 'Field', name: { kind: 'Name', value: 'size' } },\n                            {\n                              kind: 'Field',\n                              name: { kind: 'Name', value: 'physicalKey' },\n                            },\n                          ],\n                        },\n                      },\n                    ],\n                  },\n                },\n              ],\n            },\n          },\n        ],\n      },\n    },\n  ],\n} as unknown as DocumentNode<\n  containers_Bucket_PackageTree_gql_FileQuery,\n  containers_Bucket_PackageTree_gql_FileQueryVariables\n>\n\nexport { containers_Bucket_PackageTree_gql_FileDocument as default }\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'\nimport * as Types from '../../../../model/graphql/types.generated'\n\nexport type containers_Bucket_PackageTree_gql_DeleteRevisionMutationVariables =\n  Types.Exact<{\n    bucket: Types.Scalars['String']\n    name: Types.Scalars['String']\n    hash: Types.Scalars['String']\n  }>\n\nexport type containers_Bucket_PackageTree_gql_DeleteRevisionMutation = {\n  readonly __typename: 'Mutation'\n} & {\n  readonly packageRevisionDelete:\n    | { readonly __typename: 'PackageRevisionDeleteSuccess' }\n    | ({ readonly __typename: 'OperationError' } & Pick<Types.OperationError, 'message'>)\n}\n\nexport const containers_Bucket_PackageTree_gql_DeleteRevisionDocument = {\n  kind: 'Document',\n  definitions: [\n    {\n      kind: 'OperationDefinition',\n      operation: 'mutation',\n      name: { kind: 'Name', value: 'containers_Bucket_PackageTree_gql_DeleteRevision' },\n      variableDefinitions: [\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'bucket' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n          },\n        },\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'name' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n          },\n        },\n        {\n          kind: 'VariableDefinition',\n          variable: { kind: 'Variable', name: { kind: 'Name', value: 'hash' } },\n          type: {\n            kind: 'NonNullType',\n            type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },\n          },\n        },\n      ],\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [\n          {\n            kind: 'Field',\n            name: { kind: 'Name', value: 'packageRevisionDelete' },\n            arguments: [\n              {\n                kind: 'Argument',\n                name: { kind: 'Name', value: 'bucket' },\n                value: { kind: 'Variable', name: { kind: 'Name', value: 'bucket' } },\n              },\n              {\n                kind: 'Argument',\n                name: { kind: 'Name', value: 'name' },\n                value: { kind: 'Variable', name: { kind: 'Name', value: 'name' } },\n              },\n              {\n                kind: 'Argument',\n                name: { kind: 'Name', value: 'hash' },\n                value: { kind: 'Variable', name: { kind: 'Name', value: 'hash' } },\n              },\n            ],\n            selectionSet: {\n              kind: 'SelectionSet',\n              selections: [\n                { kind: 'Field', name: { kind: 'Name', value: '__typename' } },\n                {\n                  kind: 'InlineFragment',\n                  typeCondition: {\n                    kind: 'NamedType',\n                    name: { kind: 'Name', value: 'OperationError' },\n                  },\n                  selectionSet: {\n                    kind: 'SelectionSet',\n                    selections: [\n                      { kind: 'Field', name: { kind: 'Name', value: 'message' } },\n                    ],\n                  },\n                },\n              ],\n            },\n          },\n        ],\n      },\n    },\n  ],\n} as unknown as DocumentNode<\n  containers_Bucket_PackageTree_gql_DeleteRevisionMutation,\n  containers_Bucket_PackageTree_gql_DeleteRevisionMutationVariables\n>\n\nexport { containers_Bucket_PackageTree_gql_DeleteRevisionDocument as default }\n","import { basename } from 'path'\n\nimport dedent from 'dedent'\nimport * as R from 'ramda'\nimport * as React from 'react'\nimport * as RRDom from 'react-router-dom'\nimport * as urql from 'urql'\nimport type { ResultOf } from '@graphql-typed-document-node/core'\nimport * as M from '@material-ui/core'\nimport * as Lab from '@material-ui/lab'\n\nimport { Crumb, copyWithoutSpaces, render as renderCrumbs } from 'components/BreadCrumbs'\nimport * as FileEditor from 'components/FileEditor'\nimport Message from 'components/Message'\nimport Placeholder from 'components/Placeholder'\nimport * as Preview from 'components/Preview'\nimport * as OpenInDesktop from 'containers/OpenInDesktop'\nimport AsyncResult from 'utils/AsyncResult'\nimport * as AWS from 'utils/AWS'\nimport * as BucketPreferences from 'utils/BucketPreferences'\nimport * as Config from 'utils/Config'\nimport Data from 'utils/Data'\n// import * as LinkedData from 'utils/LinkedData'\nimport * as LogicalKeyResolver from 'utils/LogicalKeyResolver'\nimport MetaTitle from 'utils/MetaTitle'\nimport * as NamedRoutes from 'utils/NamedRoutes'\nimport * as PackageUri from 'utils/PackageUri'\nimport assertNever from 'utils/assertNever'\nimport parseSearch from 'utils/parseSearch'\nimport * as s3paths from 'utils/s3paths'\nimport usePrevious from 'utils/usePrevious'\nimport { UseQueryResult, useQuery } from 'utils/useQuery'\nimport * as workflows from 'utils/workflows'\n\nimport Code from '../Code'\nimport * as Download from '../Download'\nimport { FileProperties } from '../FileProperties'\nimport * as FileView from '../FileView'\nimport Listing, { Item as ListingItem } from '../Listing'\nimport PackageCopyDialog from '../PackageCopyDialog'\nimport * as PD from '../PackageDialog'\nimport Section from '../Section'\nimport * as Successors from '../Successors'\nimport Summary from '../Summary'\nimport WithPackagesSupport from '../WithPackagesSupport'\nimport * as errors from '../errors'\nimport renderPreview from '../renderPreview'\nimport * as requests from '../requests'\nimport { ViewMode, useViewModes, viewModeToSelectOption } from '../viewModes'\nimport PackageLink from './PackageLink'\nimport RevisionDeleteDialog from './RevisionDeleteDialog'\nimport RevisionInfo from './RevisionInfo'\nimport RevisionMenu from './RevisionMenu'\n\nimport REVISION_QUERY from './gql/Revision.generated'\nimport REVISION_LIST_QUERY from './gql/RevisionList.generated'\nimport DIR_QUERY from './gql/Dir.generated'\nimport FILE_QUERY from './gql/File.generated'\nimport DELETE_REVISION from './gql/DeleteRevision.generated'\n\n/*\nfunction ExposeLinkedData({ bucketCfg, bucket, name, hash, modified }) {\n  const sign = AWS.Signer.useS3Signer()\n  const { apiGatewayEndpoint: endpoint } = Config.use()\n  const data = useData(requests.getRevisionData, {\n    sign,\n    endpoint,\n    bucket,\n    hash,\n    maxKeys: 0,\n  })\n  return data.case({\n    _: () => null,\n    Ok: ({ header }) => (\n      <React.Suspense fallback={null}>\n        <LinkedData.PackageData\n          {...{ bucket: bucketCfg, name, hash, modified, header }}\n        />\n      </React.Suspense>\n    ),\n  })\n}\n*/\n\ninterface PkgCodeProps {\n  bucket: string\n  name: string\n  hash: string\n  hashOrTag: string\n  path: string\n}\n\nfunction PkgCode({ bucket, name, hash, hashOrTag, path }: PkgCodeProps) {\n  const pathCli = path && ` --path \"${s3paths.ensureNoSlash(path)}\"`\n  const pathPy = path && `, path=\"${s3paths.ensureNoSlash(path)}\"`\n  const hashDisplay = hashOrTag === 'latest' ? '' : R.take(10, hash)\n  const hashPy = hashDisplay && `, top_hash=\"${hashDisplay}\"`\n  const hashCli = hashDisplay && ` --top-hash ${hashDisplay}`\n  const code = [\n    {\n      label: 'Python',\n      hl: 'python',\n      contents: dedent`\n        import quilt3 as q3\n        # Browse\n        p = q3.Package.browse(\"${name}\"${hashPy}, registry=\"s3://${bucket}\")\n        # make changes to package adding individual files\n        p.set(\"data.csv\", \"data.csv\")\n        # or whole directories\n        p.set_dir(\"subdir\", \"subdir\")\n        # and push changes\n        q3.Package.push(\"${name}\", registry=\"s3://${bucket}\", message=\"Hello World\")\n\n        # Download (be mindful of large packages)\n        q3.Package.install(\"${name}\"${pathPy}${hashPy}, registry=\"s3://${bucket}\", dest=\".\")\n      `,\n    },\n    {\n      label: 'CLI',\n      hl: 'bash',\n      contents:\n        dedent`\n          # Download package\n          quilt3 install \"${name}\"${pathCli}${hashCli} --registry s3://${bucket} --dest .\n        ` +\n        (!path\n          ? dedent`\\n\n              # Upload package\n              echo \"Hello World\" > README.md\n              quilt3 push \"${name}\" --registry s3://${bucket} --dir .\n            `\n          : ''),\n    },\n    {\n      label: 'URI',\n      contents: PackageUri.stringify({ bucket, name, hash, path }),\n    },\n  ]\n  return <Code>{code}</Code>\n}\n\nconst useTopBarStyles = M.makeStyles((t) => ({\n  topBar: {\n    alignItems: 'flex-end',\n    display: 'flex',\n    marginBottom: t.spacing(2),\n    marginTop: t.spacing(0.5),\n  },\n  crumbs: {\n    ...t.typography.body1,\n    maxWidth: 'calc(100% - 160px)',\n    overflowWrap: 'break-word',\n    [t.breakpoints.down('xs')]: {\n      maxWidth: 'calc(100% - 40px)',\n    },\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n}))\n\ninterface TopBarProps {\n  crumbs: $TSFixMe[] // Crumb\n}\n\nfunction TopBar({ crumbs, children }: React.PropsWithChildren<TopBarProps>) {\n  const classes = useTopBarStyles()\n  return (\n    <div className={classes.topBar}>\n      <div className={classes.crumbs} onCopy={copyWithoutSpaces}>\n        {renderCrumbs(crumbs)}\n      </div>\n      <div className={classes.spacer} />\n      {children}\n    </div>\n  )\n}\n\nconst useDirDisplayStyles = M.makeStyles((t) => ({\n  button: {\n    flexShrink: 0,\n    marginBottom: '-3px',\n    marginLeft: t.spacing(1),\n    marginTop: '-3px',\n  },\n}))\n\ninterface DirDisplayProps {\n  bucket: string\n  name: string\n  hash: string\n  hashOrTag: string\n  path: string\n  crumbs: $TSFixMe[] // Crumb\n  size?: number\n}\n\nfunction DirDisplay({\n  bucket,\n  name,\n  hash,\n  hashOrTag,\n  path,\n  crumbs,\n  size,\n}: DirDisplayProps) {\n  const initialActions = PD.useInitialActions()\n  const history = RRDom.useHistory()\n  const { urls } = NamedRoutes.use()\n  const classes = useDirDisplayStyles()\n\n  const dirQuery = useQuery({\n    query: DIR_QUERY,\n    variables: { bucket, name, hash, path: s3paths.ensureNoSlash(path) },\n  })\n\n  const mkUrl = React.useCallback(\n    (handle) => urls.bucketPackageTree(bucket, name, hashOrTag, handle.logicalKey),\n    [urls, bucket, name, hashOrTag],\n  )\n\n  const [initialOpen] = React.useState(initialActions.includes('revisePackage'))\n\n  const updateDialog = PD.usePackageCreationDialog({\n    initialOpen,\n    bucket,\n    src: { name, hash },\n  })\n\n  const [successor, setSuccessor] = React.useState<workflows.Successor | null>(null)\n\n  const onPackageCopyDialogExited = React.useCallback(() => {\n    setSuccessor(null)\n  }, [setSuccessor])\n\n  usePrevious({ bucket, name, hashOrTag }, (prev) => {\n    // close the dialog when navigating away\n    if (!R.equals({ bucket, name, hashOrTag }, prev)) updateDialog.close()\n  })\n\n  const { preferences } = BucketPreferences.use()\n\n  const redirectToPackagesList = React.useCallback(() => {\n    history.push(urls.bucketPackageList(bucket))\n  }, [bucket, history, urls])\n\n  const [deletionState, setDeletionState] = React.useState({\n    error: undefined as React.ReactNode | undefined,\n    loading: false,\n    opened: false,\n  })\n\n  const confirmDelete = React.useCallback(\n    () => setDeletionState(R.assoc('opened', true)),\n    [],\n  )\n\n  const onPackageDeleteDialogClose = React.useCallback(() => {\n    setDeletionState(\n      R.mergeLeft({\n        error: undefined,\n        opened: false,\n      }),\n    )\n  }, [])\n\n  const [, deleteRevision] = urql.useMutation(DELETE_REVISION)\n\n  const handlePackageDeletion = React.useCallback(async () => {\n    setDeletionState(R.assoc('loading', true))\n    try {\n      const res = await deleteRevision({ bucket, name, hash })\n      if (res.error) throw res.error\n      if (!res.data) throw new Error('No data returned by the API')\n      const r = res.data.packageRevisionDelete\n      switch (r.__typename) {\n        case 'PackageRevisionDeleteSuccess':\n          setDeletionState(R.mergeLeft({ opened: false, loading: false }))\n          redirectToPackagesList()\n          return\n        case 'OperationError':\n          setDeletionState(R.mergeLeft({ error: r.message, loading: false }))\n          return\n        default:\n          assertNever(r)\n      }\n    } catch (e: any) {\n      let error = 'Unexpected error'\n      if (e.message) error = `${error}: ${e.message}`\n      setDeletionState(R.mergeLeft({ error, loading: false }))\n    }\n  }, [bucket, hash, name, deleteRevision, redirectToPackagesList, setDeletionState])\n\n  const packageHandle = React.useMemo(\n    () => ({ bucket, name, hash }),\n    [bucket, name, hash],\n  )\n\n  const openInDesktopState = OpenInDesktop.use(packageHandle, size)\n\n  const prompt = FileEditor.useCreateFileInPackage(packageHandle, path)\n\n  return (\n    <>\n      <OpenInDesktop.Dialog\n        open={openInDesktopState.confirming}\n        onClose={openInDesktopState.unconfirm}\n        onConfirm={openInDesktopState.openInDesktop}\n        size={size}\n      />\n\n      <PackageCopyDialog\n        bucket={bucket}\n        hash={hash}\n        name={name}\n        open={!!successor}\n        successor={successor}\n        onExited={onPackageCopyDialogExited}\n      />\n\n      <RevisionDeleteDialog\n        error={deletionState.error}\n        open={deletionState.opened}\n        packageHandle={packageHandle}\n        onClose={onPackageDeleteDialogClose}\n        loading={deletionState.loading}\n        onDelete={handlePackageDeletion}\n      />\n\n      {updateDialog.render({\n        resetFiles: 'Undo changes',\n        submit: 'Push',\n        successBrowse: 'Browse',\n        successTitle: 'Push complete',\n        successRenderMessage: ({ packageLink }) => (\n          <>Package revision {packageLink} successfully created</>\n        ),\n        title: 'Push package revision',\n      })}\n\n      {dirQuery.case({\n        // TODO: skeleton placeholder\n        fetching: () => (\n          <>\n            <TopBar crumbs={crumbs} />\n            <M.Box mt={2}>\n              <M.CircularProgress />\n            </M.Box>\n          </>\n        ),\n        data: (d) => {\n          const dir = d.package?.revision?.dir\n          if (!dir) {\n            return (\n              <>\n                <TopBar crumbs={crumbs} />\n                <M.Box mt={4}>\n                  <M.Typography variant=\"h4\" align=\"center\" gutterBottom>\n                    Error loading directory\n                  </M.Typography>\n                  <M.Typography variant=\"body1\" align=\"center\">\n                    Seems like there's no such directory in this package\n                  </M.Typography>\n                </M.Box>\n              </>\n            )\n          }\n\n          const items: ListingItem[] = dir.children.map((c) => {\n            switch (c.__typename) {\n              case 'PackageFile':\n                return {\n                  type: 'file' as const,\n                  name: basename(c.path),\n                  to: urls.bucketPackageTree(bucket, name, hashOrTag, c.path),\n                  size: c.size,\n                }\n              case 'PackageDir':\n                return {\n                  type: 'dir' as const,\n                  name: basename(c.path),\n                  to: urls.bucketPackageTree(\n                    bucket,\n                    name,\n                    hashOrTag,\n                    s3paths.ensureSlash(c.path),\n                  ),\n                  size: c.size,\n                }\n              default:\n                return assertNever(c)\n            }\n          })\n          if (path) {\n            items.unshift({\n              type: 'dir' as const,\n              name: '..',\n              to: urls.bucketPackageTree(bucket, name, hashOrTag, s3paths.up(path)),\n            })\n          }\n\n          const summaryHandles = dir.children\n            .map((c) =>\n              c.__typename === 'PackageFile'\n                ? {\n                    ...s3paths.parseS3Url(c.physicalKey),\n                    logicalKey: c.path,\n                  }\n                : null,\n            )\n            .filter(Boolean)\n\n          const downloadPath = path\n            ? `package/${bucket}/${name}/${hash}/${path}`\n            : `package/${bucket}/${name}/${hash}`\n          // TODO: disable if nothing to revise on desktop\n          const hasReviseButton = preferences?.ui?.actions?.revisePackage\n\n          return (\n            <>\n              {prompt.render()}\n              <TopBar crumbs={crumbs}>\n                {hasReviseButton && (\n                  <M.Button\n                    className={classes.button}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    style={{ marginTop: -3, marginBottom: -3, flexShrink: 0 }}\n                    onClick={() => updateDialog.open()}\n                  >\n                    Revise package\n                  </M.Button>\n                )}\n                {preferences?.ui?.actions?.copyPackage && (\n                  <Successors.Button\n                    className={classes.button}\n                    bucket={bucket}\n                    onChange={setSuccessor}\n                  >\n                    Push to bucket\n                  </Successors.Button>\n                )}\n                <Download.DownloadButton\n                  className={classes.button}\n                  label={path ? 'Download sub-package' : 'Download package'}\n                  onClick={openInDesktopState.confirm}\n                  path={downloadPath}\n                />\n                <RevisionMenu\n                  className={classes.button}\n                  onDelete={confirmDelete}\n                  onDesktop={openInDesktopState.confirm}\n                  onCreateFile={prompt.open}\n                />\n              </TopBar>\n              {preferences?.ui?.blocks?.code && (\n                <PkgCode {...{ ...packageHandle, hashOrTag, path }} />\n              )}\n              {!!preferences?.ui?.blocks?.meta && (\n                <FileView.PackageMeta data={AsyncResult.Ok(dir.metadata)} />\n              )}\n              <M.Box mt={2}>\n                {preferences?.ui?.blocks?.browser && <Listing items={items} key={hash} />}\n                <Summary\n                  path={path}\n                  files={summaryHandles}\n                  mkUrl={mkUrl}\n                  packageHandle={packageHandle}\n                />\n              </M.Box>\n            </>\n          )\n        },\n      })}\n    </>\n  )\n}\n\nconst withPreview = (\n  { archived, deleted }: ObjectAttrs,\n  handle: LogicalKeyResolver.S3SummarizeHandle,\n  mode: ViewMode | null,\n  callback: (res: $TSFixMe) => JSX.Element,\n) => {\n  if (deleted) {\n    return callback(AsyncResult.Err(Preview.PreviewError.Deleted({ handle })))\n  }\n  if (archived) {\n    return callback(AsyncResult.Err(Preview.PreviewError.Archived({ handle })))\n  }\n  const previewOptions = { mode, context: Preview.CONTEXT.FILE }\n  return Preview.load(handle, callback, previewOptions)\n}\n\ninterface ObjectAttrs {\n  archived: boolean\n  deleted: boolean\n  lastModified?: Date\n  size?: number\n}\n\ntype CrumbProp = $TSFixMe\n\ninterface FileDisplaySkeletonProps {\n  crumbs: CrumbProp[]\n}\n\nfunction FileDisplaySkeleton({ crumbs }: FileDisplaySkeletonProps) {\n  return (\n    // TODO: skeleton placeholder\n    <>\n      <TopBar crumbs={crumbs} />\n      <M.Box mt={2}>\n        <M.CircularProgress />\n      </M.Box>\n    </>\n  )\n}\n\ninterface FileDisplayErrorProps {\n  crumbs: CrumbProp[]\n  detail?: React.ReactNode\n  headline: React.ReactNode\n}\n\nfunction FileDisplayError({ crumbs, detail, headline }: FileDisplayErrorProps) {\n  return (\n    <>\n      <TopBar crumbs={crumbs} />\n      <M.Box mt={4}>\n        <M.Typography variant=\"h4\" align=\"center\" gutterBottom>\n          {headline}\n        </M.Typography>\n        {!!detail && (\n          <M.Typography variant=\"body1\" align=\"center\">\n            {detail}\n          </M.Typography>\n        )}\n      </M.Box>\n    </>\n  )\n}\ninterface FileDisplayQueryProps {\n  bucket: string\n  name: string\n  hash: string\n  hashOrTag: string\n  path: string\n  crumbs: $TSFixMe[] // Crumb\n  mode?: string\n}\n\nfunction FileDisplayQuery({\n  bucket,\n  name,\n  hash,\n  path,\n  crumbs,\n  ...props\n}: FileDisplayQueryProps) {\n  const fileQuery = useQuery({\n    query: FILE_QUERY,\n    variables: { bucket, name, hash, path },\n  })\n  return fileQuery.case({\n    fetching: () => <FileDisplaySkeleton crumbs={crumbs} />,\n    data: (d) => {\n      const file = d.package?.revision?.file\n\n      if (!file) {\n        // eslint-disable-next-line no-console\n        if (fileQuery.error) console.error(fileQuery.error)\n        return (\n          <FileDisplayError\n            headline=\"Error loading file\"\n            detail=\"Seems like there's no such file in this package\"\n            crumbs={crumbs}\n          />\n        )\n      }\n\n      return <FileDisplay {...{ bucket, name, hash, path, crumbs, file }} {...props} />\n    },\n  })\n}\n\nconst useFileDisplayStyles = M.makeStyles((t) => ({\n  button: {\n    marginLeft: t.spacing(2),\n  },\n  fileProperties: {\n    [t.breakpoints.up('sm')]: {\n      marginBottom: '3px',\n    },\n  },\n}))\n\ninterface FileDisplayProps extends FileDisplayQueryProps {\n  file: $TSFixMe\n}\n\nfunction FileDisplay({\n  bucket,\n  mode,\n  name,\n  hash,\n  hashOrTag,\n  path,\n  crumbs,\n  file,\n}: FileDisplayProps) {\n  const s3 = AWS.S3.use()\n  const { noDownload } = Config.use()\n  const history = RRDom.useHistory()\n  const { urls } = NamedRoutes.use()\n  const classes = useFileDisplayStyles()\n  const { preferences } = BucketPreferences.use()\n\n  const packageHandle = React.useMemo(\n    () => ({ bucket, name, hash }),\n    [bucket, name, hash],\n  )\n\n  const viewModes = useViewModes(path, mode, packageHandle)\n\n  const onViewModeChange = React.useCallback(\n    (m) => {\n      history.push(urls.bucketPackageTree(bucket, name, hashOrTag, path, m.valueOf()))\n    },\n    [bucket, history, name, path, hashOrTag, urls],\n  )\n\n  const isEditable =\n    FileEditor.isSupportedFileType(path) &&\n    hashOrTag === 'latest' &&\n    !!preferences?.ui?.actions?.revisePackage\n  const handleEdit = React.useCallback(() => {\n    const next = urls.bucketPackageDetail(bucket, name, { action: 'revisePackage' })\n    const physicalHandle = s3paths.parseS3Url(file.physicalKey)\n    const editUrl = urls.bucketFile(physicalHandle.bucket, physicalHandle.key, {\n      add: path,\n      edit: true,\n      next,\n    })\n    history.push(editUrl)\n  }, [file, bucket, history, name, path, urls])\n\n  const handle: LogicalKeyResolver.S3SummarizeHandle = React.useMemo(\n    () => ({\n      ...s3paths.parseS3Url(file.physicalKey),\n      logicalKey: file.path,\n      packageHandle,\n    }),\n    [file, packageHandle],\n  )\n\n  return (\n    // @ts-expect-error\n    <Data fetch={requests.getObjectExistence} params={{ s3, ...handle }}>\n      {AsyncResult.case({\n        _: () => <FileDisplaySkeleton crumbs={crumbs} />,\n        Err: (e: $TSFixMe) => {\n          if (e.code === 'Forbidden') {\n            return (\n              <FileDisplayError\n                headline=\"Access Denied\"\n                detail=\"You don't have access to this object\"\n                crumbs={crumbs}\n              />\n            )\n          }\n          // eslint-disable-next-line no-console\n          console.error(e)\n          return (\n            <FileDisplayError\n              headline=\"Error loading file\"\n              detail=\"Something went wrong\"\n              crumbs={crumbs}\n            />\n          )\n        },\n        Ok: requests.ObjectExistence.case({\n          Exists: ({ archived, deleted, lastModified, size }: ObjectAttrs) => (\n            <>\n              <TopBar crumbs={crumbs}>\n                <FileProperties\n                  className={classes.fileProperties}\n                  lastModified={lastModified}\n                  size={size}\n                />\n                {isEditable && (\n                  <FileView.AdaptiveButtonLayout\n                    className={classes.button}\n                    icon=\"edit\"\n                    label=\"Edit\"\n                    onClick={handleEdit}\n                  />\n                )}\n                {!!viewModes.modes.length && (\n                  <FileView.ViewModeSelector\n                    className={classes.button}\n                    // @ts-expect-error\n                    options={viewModes.modes.map(viewModeToSelectOption)}\n                    // @ts-expect-error\n                    value={viewModeToSelectOption(viewModes.mode)}\n                    onChange={onViewModeChange}\n                  />\n                )}\n                {!noDownload && !deleted && !archived && (\n                  <FileView.DownloadButton className={classes.button} handle={handle} />\n                )}\n              </TopBar>\n              {preferences?.ui?.blocks?.code && (\n                <PkgCode {...{ ...packageHandle, hashOrTag, path }} />\n              )}\n              {preferences?.ui?.blocks?.meta && (\n                <FileView.ObjectMeta data={AsyncResult.Ok(file.metadata)} />\n              )}\n              <Section icon=\"remove_red_eye\" heading=\"Preview\" expandable={false}>\n                {withPreview(\n                  { archived, deleted },\n                  handle,\n                  viewModes.mode,\n                  renderPreview(viewModes.handlePreviewResult),\n                )}\n              </Section>\n            </>\n          ),\n          _: () => <FileDisplayError headline=\"No Such Object\" crumbs={crumbs} />,\n        }),\n      })}\n    </Data>\n  )\n}\n\ninterface ResolverProviderProps {\n  bucket: string\n  name: string\n  hash: string\n}\n\nfunction ResolverProvider({\n  bucket,\n  name,\n  hash,\n  children,\n}: React.PropsWithChildren<ResolverProviderProps>) {\n  const client = urql.useClient()\n  // XXX: consider optimization: check current level (objects) for quick response\n  // const found = objects.find((o) => o.name === logicalKey)\n  // if (found) return s3paths.parseS3Url(found.physicalKey)\n  const resolveLogicalKey = React.useCallback(\n    (path: string) =>\n      client\n        .query(FILE_QUERY, { bucket, name, hash, path })\n        .toPromise()\n        .then((r) => {\n          const file = r.data?.package?.revision?.file\n          if (!file) throw r.error || new Error(`Could not resolve logical key \"${path}\"`)\n          return {\n            ...s3paths.parseS3Url(file.physicalKey),\n            logicalKey: file.path,\n            size: file.size,\n          }\n        }),\n    [client, bucket, name, hash],\n  )\n\n  return (\n    <LogicalKeyResolver.Provider value={resolveLogicalKey}>\n      {children}\n    </LogicalKeyResolver.Provider>\n  )\n}\n\nconst useStyles = M.makeStyles({\n  alertMsg: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n})\n\ninterface PackageTreeProps {\n  bucket: string\n  name: string\n  hashOrTag: string\n  hash?: string\n  path: string\n  mode?: string\n  resolvedFrom?: string\n  revisionListQuery: UseQueryResult<ResultOf<typeof REVISION_LIST_QUERY>>\n  size?: number\n}\n\nfunction PackageTree({\n  bucket,\n  name,\n  hashOrTag,\n  hash,\n  path,\n  mode,\n  resolvedFrom,\n  revisionListQuery,\n  size,\n}: PackageTreeProps) {\n  const classes = useStyles()\n  const { urls } = NamedRoutes.use()\n\n  // TODO: use urql to get bucket config\n  // const [{ data }] = urql.useQuery({\n  //   ..\n  // })\n  //\n  // const bucketCfg = data?.bucket.config\n\n  const isDir = s3paths.isDir(path)\n\n  const crumbs = React.useMemo(() => {\n    const segments = [{ label: 'ROOT', path: '' }, ...s3paths.getBreadCrumbs(path)]\n    return R.intersperse(\n      Crumb.Sep(<>&nbsp;/ </>),\n      segments.map(({ label, path: segPath }) =>\n        Crumb.Segment({\n          label,\n          to:\n            path === segPath\n              ? undefined\n              : urls.bucketPackageTree(bucket, name, hashOrTag, segPath),\n        }),\n      ),\n    ).concat(path.endsWith('/') ? Crumb.Sep(<>&nbsp;/</>) : [])\n  }, [bucket, name, hashOrTag, path, urls])\n\n  return (\n    <FileView.Root>\n      {/* TODO: bring back linked data after re-implementing it using graphql\n      {!!bucketCfg &&\n        revisionData.case({\n          Ok: ({ hash, modified }) => (\n            <ExposeLinkedData {...{ bucketCfg, bucket, name, hash, modified }} />\n          ),\n          _: () => null,\n        })}\n      */}\n      {!!resolvedFrom && (\n        <M.Box mb={2}>\n          <Lab.Alert\n            severity=\"info\"\n            icon={false}\n            classes={{ message: classes.alertMsg }}\n            action={\n              <M.IconButton\n                size=\"small\"\n                color=\"inherit\"\n                component={RRDom.Link}\n                to={urls.bucketPackageTree(bucket, name, hashOrTag, path)}\n              >\n                <M.Icon fontSize=\"small\">close</M.Icon>\n              </M.IconButton>\n            }\n          >\n            Resolved from{' '}\n            <M.Box\n              fontFamily=\"monospace.fontFamily\"\n              fontWeight=\"fontWeightBold\"\n              component=\"span\"\n              title={resolvedFrom}\n            >\n              {resolvedFrom}\n            </M.Box>\n          </Lab.Alert>\n        </M.Box>\n      )}\n      <M.Typography variant=\"body1\">\n        <PackageLink {...{ bucket, name }} />\n        {' @ '}\n        <RevisionInfo {...{ hash, hashOrTag, bucket, name, path, revisionListQuery }} />\n      </M.Typography>\n      {hash ? (\n        <ResolverProvider {...{ bucket, name, hash }}>\n          {isDir ? (\n            <DirDisplay\n              {...{\n                bucket,\n                name,\n                hash,\n                path,\n                hashOrTag,\n                crumbs,\n                size,\n              }}\n            />\n          ) : (\n            <FileDisplayQuery\n              {...{ bucket, mode, name, hash, hashOrTag, path, crumbs }}\n            />\n          )}\n        </ResolverProvider>\n      ) : (\n        <>\n          <TopBar crumbs={crumbs} />\n          <M.Box mt={4}>\n            <M.Typography variant=\"h4\" align=\"center\" gutterBottom>\n              Error resolving revision\n            </M.Typography>\n            <M.Typography variant=\"body1\" align=\"center\">\n              Revision{' '}\n              <M.Box\n                component=\"span\"\n                fontWeight=\"fontWeightMedium\"\n              >{`\"${hashOrTag}\"`}</M.Box>{' '}\n              could not be resolved.\n            </M.Typography>\n          </M.Box>\n        </>\n      )}\n    </FileView.Root>\n  )\n}\n\ninterface PackageTreeQueriesProps {\n  bucket: string\n  name: string\n  hashOrTag: string\n  path: string\n  resolvedFrom?: string\n  mode?: string\n}\n\nfunction PackageTreeQueries({\n  bucket,\n  name,\n  hashOrTag,\n  path,\n  resolvedFrom,\n  mode,\n}: PackageTreeQueriesProps) {\n  const revisionQuery = useQuery({\n    query: REVISION_QUERY,\n    variables: { bucket, name, hashOrTag },\n  })\n\n  const revisionListQuery = useQuery({\n    query: REVISION_LIST_QUERY,\n    variables: { bucket, name },\n  })\n\n  return revisionQuery.case({\n    fetching: () => <Placeholder color=\"text.secondary\" />,\n    error: (e) => errors.displayError()(e),\n    data: (d) => {\n      if (!d.package) {\n        return (\n          <Message headline=\"No Such Package\">\n            Package named{' '}\n            <M.Box component=\"span\" fontWeight=\"fontWeightMedium\">{`\"${name}\"`}</M.Box>{' '}\n            could not be found in this bucket.\n          </Message>\n        )\n      }\n\n      return (\n        <PackageTree\n          {...{\n            bucket,\n            name,\n            hashOrTag,\n            hash: d.package.revision?.hash,\n            size: d.package.revision?.totalBytes ?? undefined,\n            path,\n            mode,\n            resolvedFrom,\n            revisionListQuery,\n          }}\n        />\n      )\n    },\n  })\n}\n\ninterface PackageTreeRouteParams {\n  bucket: string\n  name: string\n  revision?: string\n  path?: string\n}\n\nexport default function PackageTreeWrapper({\n  match: {\n    params: { bucket, name, revision: hashOrTag = 'latest', path: encodedPath = '' },\n  },\n  location,\n}: RRDom.RouteComponentProps<PackageTreeRouteParams>) {\n  const path = s3paths.decode(encodedPath)\n  // TODO: mode is \"switch view mode\" action, ex. mode=json, or type=json, or type=application/json\n  const { resolvedFrom, mode } = parseSearch(location.search, true)\n  return (\n    <>\n      <MetaTitle>{[`${name}@${R.take(10, hashOrTag)}/${path}`, bucket]}</MetaTitle>\n      <WithPackagesSupport bucket={bucket}>\n        <PackageTreeQueries {...{ bucket, name, hashOrTag, path, resolvedFrom, mode }} />\n      </WithPackagesSupport>\n    </>\n  )\n}\n","import * as React from 'react'\n\nimport Message from 'components/Message'\nimport * as BucketConfig from 'utils/BucketConfig'\nimport * as Config from 'utils/Config'\n\ninterface WithPackagesSupportProps {\n  bucket: string\n  children: React.ReactNode\n}\n\nexport default function WithPackagesSupport({\n  bucket,\n  children,\n}: WithPackagesSupportProps) {\n  const localMode = Config.use().mode === 'LOCAL'\n  const isInStack = BucketConfig.useIsInStack()\n  const inStack = React.useMemo(() => isInStack(bucket), [bucket, isInStack])\n\n  return inStack || localMode ? (\n    <>{children}</>\n  ) : (\n    <Message headline=\"Packages temporarily hidden\">\n      Ask an admin to add the bucket <strong>{bucket}</strong> to Quilt so that you can\n      browse packages.\n    </Message>\n  )\n}\n","import * as Config from 'utils/Config'\nimport * as Cache from 'utils/ResourceCache'\n\nconst VOILA_PING_URL = (registryUrl: string) => `${registryUrl}/voila/`\n\nconst VoilaResource = Cache.createResource({\n  name: 'Voila',\n  persist: true,\n  fetch: (registryUrl: string) =>\n    fetch(VOILA_PING_URL(registryUrl))\n      .then((resp) => resp.ok)\n      .catch(() => false)\n      .then((r) => {\n        if (!r) {\n          // eslint-disable-next-line no-console\n          console.debug('Voila is not supported by current stack')\n          // TODO: add link to documentation\n        }\n        return r\n      }),\n})\n\nexport function useVoila(): boolean {\n  const { registryUrl } = Config.use()\n  return Cache.useData(VoilaResource, registryUrl, { suspend: true })\n}\n\nexport { useVoila as use }\n","import { extname } from 'path'\nimport * as React from 'react'\n\n// NOTE: module imported selectively because Preview's deps break unit-tests\nimport { PreviewData } from 'components/Preview/types'\nimport type { ValueBase as SelectOption } from 'components/SelectDropdown'\nimport AsyncResult from 'utils/AsyncResult'\nimport { useVoila } from 'utils/voila'\nimport { PackageHandle } from 'utils/packageHandle'\nimport { JsonRecord } from 'utils/types'\n\nconst MODES = {\n  igv: 'IGV',\n  json: 'JSON',\n  jupyter: 'Jupyter',\n  vega: 'Vega',\n  voila: 'Voila',\n}\n\nexport type ViewMode = keyof typeof MODES\n\nconst isIgvTracks = (json: JsonRecord) => Array.isArray(json?.tracks)\n\nconst isVegaSchema = (schema: string) => {\n  if (!schema) return false\n  return !!schema.match(/https:\\/\\/vega\\.github\\.io\\/schema\\/([\\w-]+)\\/([\\w.-]+)\\.json/)\n}\n\nexport function viewModeToSelectOption(m: ViewMode): SelectOption\nexport function viewModeToSelectOption(m: null): null\nexport function viewModeToSelectOption(m: ViewMode | null): SelectOption | null {\n  return (\n    m && {\n      toString: () => MODES[m],\n      valueOf: () => m,\n    }\n  )\n}\n\nexport function useViewModes(\n  path: string,\n  modeInput: string | null | undefined,\n  // XXX: consider using a plain boolean here since the contents of this object are unused\n  packageHandle?: PackageHandle,\n) {\n  const voilaAvailable = useVoila()\n  const [previewResult, setPreviewResult] = React.useState(null)\n\n  const handlePreviewResult = React.useCallback(\n    (result) => {\n      if (!previewResult && AsyncResult.Ok.is(result)) {\n        setPreviewResult(AsyncResult.Ok.unbox(result))\n      }\n    },\n    [previewResult, setPreviewResult],\n  )\n\n  const modes: ViewMode[] = React.useMemo(() => {\n    // TODO: add MODES here\n    switch (extname(path)) {\n      case '.ipynb':\n        return !!packageHandle && voilaAvailable\n          ? ['jupyter', 'json', 'voila']\n          : ['jupyter', 'json']\n      case '.json':\n        return PreviewData.case(\n          {\n            Vega: (json: any) =>\n              isVegaSchema(json.spec?.$schema) ? ['vega', 'json'] : [],\n            Json: (json: any) => {\n              if (isVegaSchema(json.rendered?.$schema)) return ['vega', 'json']\n              if (isIgvTracks(json.rendered)) return ['json', 'igv']\n              return []\n            },\n            _: () => [],\n            __: () => [],\n          },\n          previewResult,\n        )\n      default:\n        return []\n    }\n  }, [path, packageHandle, previewResult, voilaAvailable])\n\n  const mode = (\n    modes.includes(modeInput as any) ? modeInput : modes[0] || null\n  ) as ViewMode | null\n\n  return { modes, mode, handlePreviewResult }\n}\n","import { parse as parseQs } from 'querystring'\nimport { parse as parseUrl } from 'url'\n\nimport * as R from 'ramda'\n\nimport { BaseError } from 'utils/error'\n\nexport class PackageUriError extends BaseError {\n  static displayName = 'PackageUriError'\n\n  constructor(msg: string, uri: string) {\n    super(`Invalid package URI (${uri}): ${msg}`, { msg, uri })\n  }\n}\n\nexport interface PackageUri {\n  bucket: string\n  name: string\n  path?: string\n  hash?: string\n  tag?: string\n}\n\nfunction parsePackageSpec(spec: string, uri: string) {\n  if (spec.includes(':') && spec.includes('@')) {\n    throw new PackageUriError('\"package=\" part may either contain \":\" or \"@\".', uri)\n  }\n  if (spec.includes(':')) {\n    const [name, tag, ...rest] = spec.split(':')\n    if (!name) {\n      throw new PackageUriError(\n        '\"package=\" part must contain non-empty package name.',\n        uri,\n      )\n    }\n    if (!tag) {\n      throw new PackageUriError('\"package=\" part: tag must not be empty.', uri)\n    }\n    if (rest.length) {\n      throw new PackageUriError('\"package=\" part may contain only one \":\".', uri)\n    }\n    return { name, tag }\n  }\n  if (spec.includes('@')) {\n    const [name, hash, ...rest] = spec.split('@')\n    if (!name) {\n      throw new PackageUriError(\n        '\"package=\" part must contain non-empty package name.',\n        uri,\n      )\n    }\n    if (!hash) {\n      throw new PackageUriError('\"package=\" part: hash must not be empty.', uri)\n    }\n    if (rest.length) {\n      throw new PackageUriError('\"package=\" part may contain only one \"@\".', uri)\n    }\n    return { name, hash }\n  }\n  return { name: spec }\n}\n\n// TODO: do we need strict parsing here (throw on extra parameters)?\n// TODO: do we need extra validation for each part (package name, path, registry, etc)?\nexport function parse(uri: string): PackageUri {\n  const url = parseUrl(uri)\n  if (url.protocol !== 'quilt+s3:') {\n    throw new PackageUriError(\n      `unsupported protocol \"${url.protocol}\". \"quilt+s3:\" is currently the only supported protocol.`,\n      uri,\n    )\n  }\n  if (!url.slashes) {\n    throw new PackageUriError('missing slashes between protocol and registry.', uri)\n  }\n  if (url.path) {\n    throw new PackageUriError(\n      'non-bucket-root registries are not supported currently.',\n      uri,\n    )\n  }\n  const bucket = url.host\n  const params = parseQs((url.hash || '').replace('#', ''))\n  if (!params.package) {\n    throw new PackageUriError('missing \"package=\" part.', uri)\n  }\n  if (Array.isArray(params.package)) {\n    throw new PackageUriError('\"package=\" specified multiple times.', uri)\n  }\n  const { name, hash, tag } = parsePackageSpec(params.package, uri)\n  if (Array.isArray(params.path)) {\n    throw new PackageUriError('\"path=\" specified multiple times.', uri)\n  }\n  const path = params.path ? decodeURIComponent(params.path) : undefined\n  return R.reject(R.isNil, { bucket, name, hash, tag, path }) as unknown as PackageUri\n}\n\nexport function stringify({ bucket, name, hash, tag, path }: PackageUri) {\n  if (!bucket) throw new Error('PackageUri.stringify: missing \"bucket\"')\n  if (!name) throw new Error('PackageUri.stringify: missing \"name\"')\n  if (hash && tag) {\n    throw new Error(`PackageUri.stringify: can't have both \"hash\" and \"tag\"`)\n  }\n  let pkgSpec = name\n  if (hash) {\n    pkgSpec += `@${hash}`\n  } else if (tag) {\n    pkgSpec += `:${tag}`\n  }\n  const pathPart = path ? `&path=${encodeURIComponent(path)}` : ''\n  return `quilt+s3://${bucket}#package=${pkgSpec}${pathPart}`\n}\n","import * as React from 'react'\nimport * as M from '@material-ui/core'\n\nimport * as Preview from 'components/Preview'\n\nconst Message = M.styled('div')({\n  textAlign: 'center',\n  width: '100%',\n})\n\nconst renderMessage = ({ heading, body, action }) => (\n  <Message>\n    {!!heading && (\n      <M.Typography variant=\"h6\" gutterBottom>\n        {heading}\n      </M.Typography>\n    )}\n    {!!body && (\n      <M.Typography variant=\"body1\" gutterBottom>\n        {body}\n      </M.Typography>\n    )}\n    {!!action && action}\n  </Message>\n)\n\nconst renderProgress = () => (\n  <Message>\n    <M.CircularProgress />\n  </Message>\n)\n\nexport default (onData) => Preview.display({ renderMessage, renderProgress, onData })\n"],"names":["useFilePropertyStyles","t","root","alignItems","display","icon","color","palette","text","hint","fontSize","marginRight","FileProperty","className","children","props","classes","component","variant","FilePropertiesSkeleton","useFilePropertiesStyles","animate","property","width","height","marginLeft","spacing","FileProperties","lastModified","size","today","Date","formattedDate","getFullYear","formattedSize","title","toLocaleString","Wrapper","data","case","Ok","Exists","_","Err","e","message","v","onClose","onConfirm","open","error","setError","disabled","setDisabled","handleConfirm","Error","Number","isNaN","severity","onClick","use","packageHandle","desktop","Config","ipc","confirming","setConfirming","openInDesktop","invoke","deepLink","PackageUri","replace","window","location","assign","unconfirm","confirm","containers_Bucket_PackageDialog_gql_PackagePromoteDocument","kind","definitions","operation","name","value","variableDefinitions","variable","type","selectionSet","selections","arguments","useFormSkeletonStyles","meta","marginTop","FormSkeleton","bucket","urls","NamedRoutes","StyledLink","target","to","bucketOverview","useStyles","form","flexDirection","overflowY","paddingTop","DialogForm","close","hash","initialMeta","initialName","responseError","schema","schemaLoading","selectedWorkflow","setSubmitting","setSuccess","setWorkflow","successor","validateMetaInput","workflowsConfig","nameValidator","nameExistence","slug","nameWarning","setNameWarning","metaHeight","setMetaHeight","validateWorkflow","copyPackage","onSubmit","commitMessage","workflow","params","userMeta","requests","workflows","src","res","r","packagePromote","__typename","revision","errors","assertNever","console","handleNameChange","validate","nameExists","warning","exists","editorElement","setEditorElement","resizeObserver","ResizeObserver","entries","contentRect","hideMeta","setHideMeta","onFormChange","modified","values","setTimeout","observe","unobserve","dialogContentClasses","args","subscription","hasValidationErrors","submitError","submitFailed","submitting","handleSubmit","onChange","initialValue","validateFields","required","validators","invalid","pattern","packageNamePattern","helperText","ref","schemaError","isEqual","style","copyData","flexGrow","pl","DialogError","onCancel","skeletonElement","DialogLoading","DialogState","Loading","Form","Success","PackageCopyDialog","onExited","s3","AWS","S3","success","manifestData","skipEntries","pause","workflowsData","Data","noAutoFetch","state","manifest","handleExited","pushed","Intercom","fullWidth","scroll","match","initialWorkflowId","workflowId","schemaProps","wordBreak","PackageLink","split","prefix","suffix","bucketPackageList","filter","bucketPackageDetail","danger","dark","lock","background","border","action","borderRadius","shape","bottom","cursor","justifyContent","left","position","right","top","progressContainer","PackageDeleteDialog","loading","onDelete","id","autoFocus","useRevisionInfoStyles","mono","fontFamily","typography","monospace","line","whiteSpace","secondaryText","overflow","textOverflow","list","RevisionInfo","hashOrTag","path","revisionListQuery","push","Notifications","listRef","anchor","setAnchor","opened","setOpened","getHttpsUri","h","origin","bucketPackageTree","copyHttpsUri","containerRef","preventDefault","container","current","undefined","length","href","marginBottom","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","d","package","revisions","page","map","key","valueOf","button","selected","primary","secondary","fetching","bucketPackageRevisions","textAlign","RevisionMenu","onCreateFile","onDesktop","preferences","BucketPreferences","items","menu","ui","actions","revisePackage","deleteRevision","Menu","containers_Bucket_PackageTree_gql_RevisionDocument","containers_Bucket_PackageTree_gql_RevisionListDocument","containers_Bucket_PackageTree_gql_DirDocument","typeCondition","containers_Bucket_PackageTree_gql_FileDocument","containers_Bucket_PackageTree_gql_DeleteRevisionDocument","PkgCode","pathCli","s3paths","pathPy","hashDisplay","hashPy","hashCli","code","label","hl","contents","Code","useTopBarStyles","topBar","crumbs","body1","maxWidth","overflowWrap","breakpoints","down","spacer","TopBar","onCopy","useDirDisplayStyles","flexShrink","DirDisplay","initialActions","history","dirQuery","useQuery","query","variables","mkUrl","handle","logicalKey","initialOpen","includes","updateDialog","setSuccessor","onPackageCopyDialogExited","usePrevious","prev","redirectToPackagesList","deletionState","setDeletionState","confirmDelete","onPackageDeleteDialogClose","handlePackageDeletion","packageRevisionDelete","openInDesktopState","prompt","FileEditor","render","resetFiles","submit","successBrowse","successTitle","successRenderMessage","packageLink","mt","dir","align","gutterBottom","c","basename","unshift","up","summaryHandles","physicalKey","Boolean","downloadPath","hasReviseButton","Successors","Download","blocks","FileView","AsyncResult","metadata","browser","Listing","Summary","files","FileDisplaySkeleton","FileDisplayError","detail","headline","FileDisplayQuery","fileQuery","file","FileDisplay","useFileDisplayStyles","fileProperties","mode","noDownload","viewModes","onViewModeChange","m","isEditable","handleEdit","next","physicalHandle","editUrl","bucketFile","add","edit","fetch","archived","deleted","modes","options","Section","heading","expandable","callback","Preview","previewOptions","context","withPreview","renderPreview","handlePreviewResult","ResolverProvider","client","resolveLogicalKey","toPromise","then","LogicalKeyResolver","alertMsg","PackageTree","resolvedFrom","isDir","segments","segPath","concat","endsWith","mb","fontWeight","PackageTreeQueries","revisionQuery","Placeholder","totalBytes","Message","PackageTreeWrapper","encodedPath","parseSearch","search","MetaTitle","WithPackagesSupport","localMode","isInStack","VoilaResource","persist","registryUrl","VOILA_PING_URL","resp","ok","catch","debug","MODES","igv","json","jupyter","vega","voila","isVegaSchema","viewModeToSelectOption","toString","useViewModes","modeInput","voilaAvailable","suspend","previewResult","setPreviewResult","result","extname","Vega","spec","$schema","Json","rendered","Array","isArray","tracks","isIgvTracks","__","msg","uri","displayName","parse","url","protocol","PackageUriError","slashes","host","tag","rest","parsePackageSpec","decodeURIComponent","stringify","pkgSpec","pathPart","encodeURIComponent","renderMessage","body","renderProgress","onData"],"sourceRoot":""}