{"version":3,"file":"1787.a88f255ebbd84711a2a5.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./node_modules/brace/mode/c9search.js"],"sourcesContent":["ace.define(\"ace/mode/c9search_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar lang = acequire(\"../lib/lang\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nfunction safeCreateRegexp(source, flag) {\n    try {\n        return new RegExp(source, flag);\n    } catch(e) {}\n}\n\nvar C9SearchHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n            {\n                tokenNames : [\"c9searchresults.constant.numeric\", \"c9searchresults.text\", \"c9searchresults.text\", \"c9searchresults.keyword\"],\n                regex : /(^\\s+[0-9]+)(:)(\\d*\\s?)([^\\r\\n]+)/,\n                onMatch : function(val, state, stack) {\n                    var values = this.splitRegex.exec(val);\n                    var types = this.tokenNames;\n                    var tokens = [{\n                        type: types[0],\n                        value: values[1]\n                    }, {\n                        type: types[1],\n                        value: values[2]\n                    }];\n                    \n                    if (values[3]) {\n                        if (values[3] == \" \")\n                            tokens[1] = { type: types[1], value: values[2] + \" \" };\n                        else\n                            tokens.push({ type: types[1], value: values[3] });\n                    }\n                    var regex = stack[1];\n                    var str = values[4];\n                    \n                    var m;\n                    var last = 0;\n                    if (regex && regex.exec) {\n                        regex.lastIndex = 0;\n                        while (m = regex.exec(str)) {\n                            var skipped = str.substring(last, m.index);\n                            last = regex.lastIndex;\n                            if (skipped)\n                                tokens.push({type: types[2], value: skipped});\n                            if (m[0])\n                                tokens.push({type: types[3], value: m[0]});\n                            else if (!skipped)\n                                break;\n                        }\n                    }\n                    if (last < str.length)\n                        tokens.push({type: types[2], value: str.substr(last)});\n                    return tokens;\n                }\n            },\n            {\n                regex : \"^Searching for [^\\\\r\\\\n]*$\",\n                onMatch: function(val, state, stack) {\n                    var parts = val.split(\"\\x01\");\n                    if (parts.length < 3)\n                        return \"text\";\n\n                    var options, search, replace;\n                    \n                    var i = 0;\n                    var tokens = [{\n                        value: parts[i++] + \"'\",\n                        type: \"text\"\n                    }, {\n                        value: search = parts[i++],\n                        type: \"text\" // \"c9searchresults.keyword\"\n                    }, {\n                        value: \"'\" + parts[i++],\n                        type: \"text\"\n                    }];\n                    if (parts[2] !== \" in\") {\n                        replace = parts[i];\n                        tokens.push({\n                            value: \"'\" + parts[i++] + \"'\",\n                            type: \"text\"\n                        }, {\n                            value: parts[i++],\n                            type: \"text\"\n                        });\n                    }\n                    tokens.push({\n                        value: \" \" + parts[i++] + \" \",\n                        type: \"text\"\n                    });\n                    if (parts[i+1]) {\n                        options = parts[i+1];\n                        tokens.push({\n                            value: \"(\" + parts[i+1] + \")\",\n                            type: \"text\"\n                        });\n                        i += 1;\n                    } else {\n                        i -= 1;\n                    }\n                    while (i++ < parts.length) {\n                        parts[i] && tokens.push({\n                            value: parts[i],\n                            type: \"text\"\n                        });\n                    }\n                    \n                    if (search) {\n                        if (!/regex/.test(options))\n                            search = lang.escapeRegExp(search);\n                        if (/whole/.test(options))\n                            search = \"\\\\b\" + search + \"\\\\b\";\n                    }\n                    \n                    var regex = search && safeCreateRegexp(\n                        \"(\" + search + \")\",\n                        / sensitive/.test(options) ? \"g\" : \"ig\"\n                    );\n                    if (regex) {\n                        stack[0] = state;\n                        stack[1] = regex;\n                    }\n                    \n                    return tokens;\n                }\n            },\n            {\n                regex : \"^(?=Found \\\\d+ matches)\",\n                token : \"text\",\n                next : \"numbers\"\n            },\n            {\n                token : \"string\", // single line\n                regex : \"^\\\\S:?[^:]+\",\n                next : \"numbers\"\n            }\n        ],\n        numbers:[{\n            regex : \"\\\\d+\",\n            token : \"constant.numeric\"\n        }, {\n            regex : \"$\",\n            token : \"text\",\n            next : \"start\"\n        }]\n    };\n    this.normalizeRules();\n};\n\noop.inherits(C9SearchHighlightRules, TextHighlightRules);\n\nexports.C9SearchHighlightRules = C9SearchHighlightRules;\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/c9search\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.foldingStartMarker = /^(\\S.*:|Searching for.*)$/;\n    this.foldingStopMarker = /^(\\s+|Found.*)$/;\n    \n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var lines = session.doc.getAllLines(row);\n        var line = lines[row];\n        var level1 = /^(Found.*|Searching for.*)$/;\n        var level2 = /^(\\S.*:|\\s*)$/;\n        var re = level1.test(line) ? level1 : level2;\n        \n        var startRow = row;\n        var endRow = row;\n\n        if (this.foldingStartMarker.test(line)) {\n            for (var i = row + 1, l = session.getLength(); i < l; i++) {\n                if (re.test(lines[i]))\n                    break;\n            }\n            endRow = i;\n        }\n        else if (this.foldingStopMarker.test(line)) {\n            for (var i = row - 1; i >= 0; i--) {\n                line = lines[i];\n                if (re.test(line))\n                    break;\n            }\n            startRow = i;\n        }\n        if (startRow != endRow) {\n            var col = line.length;\n            if (re === level1)\n                col = line.search(/\\(Found[^)]+\\)$|$/);\n            return new Range(startRow, col, endRow, 0);\n        }\n    };\n    \n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/c9search\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/c9search_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/c9search\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar C9SearchHighlightRules = acequire(\"./c9search_highlight_rules\").C9SearchHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar C9StyleFoldMode = acequire(\"./folding/c9search\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = C9SearchHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new C9StyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    \n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/c9search\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n\n});\n"],"names":["ace","define","acequire","exports","module","oop","lang","TextHighlightRules","C9SearchHighlightRules","this","$rules","tokenNames","regex","onMatch","val","state","stack","values","splitRegex","exec","types","tokens","type","value","push","m","str","last","lastIndex","skipped","substring","index","length","substr","options","search","parts","split","i","test","escapeRegExp","source","flag","RegExp","e","safeCreateRegexp","token","next","numbers","normalizeRules","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","autoOutdent","doc","row","match","getLine","column","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","foldingStartMarker","foldingStopMarker","getFoldWidgetRange","session","foldStyle","lines","getAllLines","level1","re","startRow","endRow","l","getLength","col","TextMode","Mode","C9StyleFoldMode","HighlightRules","$outdent","foldingRules","getNextLineIndent","tab","$id"],"sourceRoot":""}