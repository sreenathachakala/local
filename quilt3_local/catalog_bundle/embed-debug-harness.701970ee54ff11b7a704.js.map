{"version":3,"file":"embed-debug-harness.701970ee54ff11b7a704.js","mappings":"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","sources":["webpack://quilt-navigator/./app/embed/debug-harness.js"],"sourcesContent":["/* embed/debug-harness.js - debug tool for embedded browser */\nimport * as R from 'ramda'\nimport * as React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as M from '@material-ui/core'\n\nimport 'sanitize.css' // side-effect: inject global css\n\nimport JsonDisplay from 'components/JsonDisplay'\nimport * as Layout from 'components/Layout'\nimport Placeholder from 'components/Placeholder'\nimport * as style from 'constants/style'\nimport * as Config from 'utils/Config'\nimport { createBoundary } from 'utils/ErrorBoundary'\nimport * as Okta from 'utils/Okta'\nimport * as Cache from 'utils/ResourceCache'\nimport * as Store from 'utils/Store'\nimport mkSearch from 'utils/mkSearch'\nimport * as RT from 'utils/reactTools'\n\nimport WithGlobalStyles from '../global-styles'\n\nconst SRC = '/__embed'\nconst EMBED_ORIGIN = window.location.origin\nconst PARENT_ORIGIN = window.location.origin\nconst EVENT_SOURCE = 'quilt-embed'\n\nconst mkNonce = () => `${Math.random()}`\n\nfunction useField(init) {\n  const [value, set] = React.useState(init)\n  const onChange = React.useCallback(\n    (e) => {\n      set(e.target.value)\n    },\n    [set],\n  )\n  return { value, set, input: { value, onChange } }\n}\n\nfunction Embedder() {\n  const cfg = Config.useConfig()\n  const authenticate = Okta.use({ clientId: cfg.oktaClientId, baseUrl: cfg.oktaBaseUrl })\n\n  const iframeRef = React.useRef(null)\n\n  const [nonce, setNonce] = React.useState(mkNonce)\n\n  const src = `${SRC}${mkSearch({ nonce, origin: PARENT_ORIGIN })}`\n\n  const fields = {\n    credentials: useField('{}'),\n    bucket: useField(''),\n    path: useField(''),\n    scope: useField(''),\n    rest: useField('{}'),\n    route: useField(''),\n    newRoute: useField(''),\n  }\n\n  const [messages, setMessages] = React.useState([])\n\n  const logMessage = React.useCallback(\n    (direction, { type, ...contents }) => {\n      setMessages(R.prepend({ direction, type, contents, time: new Date() }))\n    },\n    [setMessages],\n  )\n\n  const initParams = React.useMemo(() => {\n    try {\n      return {\n        bucket: fields.bucket.value,\n        path: fields.path.value,\n        scope: fields.scope.value,\n        credentials: JSON.parse(fields.credentials.value),\n        route: fields.route.value,\n        ...JSON.parse(fields.rest.value || '{}'),\n      }\n    } catch (e) {\n      return e\n    }\n  }, [\n    fields.credentials.value,\n    fields.bucket.value,\n    fields.path.value,\n    fields.scope.value,\n    fields.rest.value,\n    fields.route.value,\n  ])\n\n  const getOktaCredentials = React.useCallback(async () => {\n    const token = await authenticate()\n    fields.credentials.set(JSON.stringify({ provider: 'okta', token }))\n  }, [authenticate, fields.credentials.set]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const postMessage = React.useCallback(\n    (msg) => {\n      if (!iframeRef.current) return\n      const w = iframeRef.current.contentWindow\n      w.postMessage(msg, EMBED_ORIGIN)\n      logMessage('out', msg)\n    },\n    [iframeRef, logMessage],\n  )\n\n  const postInit = React.useCallback(() => {\n    if (initParams instanceof Error) return\n    postMessage({ type: 'init', ...initParams })\n  }, [postMessage, initParams])\n\n  const navigate = React.useCallback(() => {\n    postMessage({ type: 'navigate', route: fields.newRoute.value })\n  }, [postMessage, fields.newRoute.value])\n\n  const reloadIframe = React.useCallback(() => {\n    setNonce(mkNonce)\n    setMessages([])\n  }, [setNonce, setMessages])\n\n  const handleMessage = React.useCallback(\n    (e) => {\n      if (\n        e.source !== iframeRef.current.contentWindow ||\n        e.origin !== EMBED_ORIGIN ||\n        e.data.source !== EVENT_SOURCE ||\n        nonce !== e.data.nonce\n      )\n        return\n      logMessage('in', R.omit(['source', 'nonce'], e.data))\n    },\n    [iframeRef, logMessage, nonce],\n  )\n\n  React.useEffect(() => {\n    window.addEventListener('message', handleMessage)\n    return () => {\n      window.removeEventListener('message', handleMessage)\n    }\n  }, [handleMessage])\n\n  return (\n    <M.Box display=\"flex\" justifyContent=\"space-between\" p={2} maxHeight=\"100vh\">\n      <M.Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        flexGrow={1}\n        pr={2}\n        maxWidth={400}\n        overflow=\"auto\"\n      >\n        <M.Button variant=\"outlined\" onClick={getOktaCredentials}>\n          Get credentials from Okta\n        </M.Button>\n\n        <M.Box mt={2} />\n        <M.TextField\n          multiline\n          label=\"Credentials (JSON)\"\n          rowsMax={10}\n          fullWidth\n          {...fields.credentials.input}\n        />\n\n        <M.Box mt={2} />\n        <M.TextField label=\"Bucket\" fullWidth {...fields.bucket.input} />\n\n        <M.Box mt={2} />\n        <M.TextField label=\"Path\" fullWidth {...fields.path.input} />\n\n        <M.Box mt={2} />\n        <M.TextField label=\"Route\" fullWidth {...fields.route.input} />\n\n        <M.Box mt={2} />\n        <M.TextField label=\"Scope\" fullWidth {...fields.scope.input} />\n\n        <M.Box mt={2} />\n        <M.TextField\n          multiline\n          label=\"Extra params (JSON, merged with the rest)\"\n          rowsMax={10}\n          fullWidth\n          {...fields.rest.input}\n        />\n\n        <M.Box mt={2} />\n        <M.Button variant=\"outlined\" onClick={postInit}>\n          init\n        </M.Button>\n\n        <M.Box mt={1} />\n        <M.Button variant=\"outlined\" onClick={reloadIframe}>\n          reload iframe\n        </M.Button>\n\n        <M.Box mt={2}>\n          {initParams instanceof Error ? (\n            `${initParams}`\n          ) : (\n            <JsonDisplay name=\"init params\" value={initParams} defaultExpanded />\n          )}\n        </M.Box>\n\n        <M.Box mt={4} />\n        <M.Button variant=\"outlined\" onClick={navigate}>\n          navigate to\n        </M.Button>\n\n        <M.Box mt={2} />\n        <M.TextField label=\"New route\" fullWidth {...fields.newRoute.input} />\n      </M.Box>\n\n      <M.Box flexShrink={0}>\n        <iframe\n          title=\"embed\"\n          src={src}\n          width=\"900\"\n          height=\"600\"\n          ref={iframeRef}\n          style={{ border: '1px solid' }}\n        />\n\n        <M.Box mt={3}>\n          <M.Typography variant=\"h6\" gutterBottom>\n            Messages\n          </M.Typography>\n          {messages.map((m) => (\n            <M.Box key={m.time.toISOString()}>\n              <JsonDisplay\n                name={`[${m.time.toISOString()}] ${\n                  m.direction === 'in' ? '<==' : '==>'\n                } ${m.type}`}\n                value={m.contents}\n                color={\n                  // eslint-disable-next-line no-nested-ternary\n                  m.direction === 'in'\n                    ? m.type === 'error'\n                      ? 'error.main'\n                      : 'success.main'\n                    : undefined\n                }\n              />\n            </M.Box>\n          ))}\n        </M.Box>\n      </M.Box>\n    </M.Box>\n  )\n}\n\nconst ErrorBoundary = createBoundary(() => (/* error, info */) => (\n  <h1\n    style={{\n      alignItems: 'center',\n      color: '#fff',\n      display: 'flex',\n      height: '90vh',\n      justifyContent: 'center',\n      maxHeight: '600px',\n    }}\n  >\n    Something went wrong\n  </h1>\n))\n\nfunction App() {\n  return RT.nest(\n    ErrorBoundary,\n    [M.MuiThemeProvider, { theme: style.appTheme }],\n    WithGlobalStyles,\n    Layout.Root,\n    Store.Provider,\n    Cache.Provider,\n    [React.Suspense, { fallback: <Placeholder color=\"text.secondary\" /> }],\n    Embedder,\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('app'))\n"],"names":["EMBED_ORIGIN","window","location","origin","PARENT_ORIGIN","mkNonce","Math","random","useField","init","value","set","onChange","e","target","input","Embedder","cfg","authenticate","clientId","oktaClientId","baseUrl","oktaBaseUrl","iframeRef","nonce","setNonce","src","fields","credentials","bucket","path","scope","rest","route","newRoute","messages","setMessages","logMessage","direction","type","contents","time","Date","initParams","JSON","parse","getOktaCredentials","token","stringify","provider","postMessage","msg","current","contentWindow","postInit","Error","navigate","reloadIframe","handleMessage","source","data","addEventListener","removeEventListener","display","justifyContent","p","maxHeight","flexDirection","flexGrow","pr","maxWidth","overflow","variant","onClick","mt","multiline","label","rowsMax","fullWidth","name","defaultExpanded","flexShrink","title","width","height","ref","style","border","gutterBottom","map","m","key","toISOString","color","undefined","ErrorBoundary","alignItems","theme","fallback","document","getElementById"],"sourceRoot":""}