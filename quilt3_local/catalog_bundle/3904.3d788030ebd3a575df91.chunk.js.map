{"version":3,"file":"3904.3d788030ebd3a575df91.chunk.js","mappings":"gGAAAA,IAAIC,OAAO,gCAAgC,CAAC,UAAU,UAAU,SAAS,cAAc,kCAAkC,SAASC,EAAUC,EAASC,GACrJ,aAEA,IAAIC,EAAMH,EAAS,cACfI,EAAqBJ,EAAS,0BAA0BI,mBAExDC,EAAqB,WACrB,IAAIC,EAAgBC,KAAKC,oBAAoB,CACzC,4BAA6B,cAC9B,cAIHD,KAAKE,OAAS,CACd,MAAS,CACL,CACIC,MAAO,eACPC,MAAO,QAEX,CACID,MAAQ,SACRC,MAAQ,SACRC,KAAQ,YAEZ,CACIF,MAAO,CAAC,0BACRC,MAAO,oCAEX,CACID,MAAO,CAAC,0BACRC,MAAO,8BAEX,CACID,MAAQJ,EACRK,MAvBW,yCAyBf,CACGD,MAAQ,oBACRC,MAAO,kDAEV,CACGD,MAAO,wBACPC,MAAO,sBAGd,SAAa,CACT,CACID,MAAQ,SACRC,MAAQ,QACRC,KAAQ,YAEZ,CACIF,MAAQ,2BACRC,MAAQ,mBAEZ,CACID,MAAQ,SACRC,MAAQ,MACRC,KAAQ,SAEZ,CACIC,aAAc,WAK1B,EAEAV,EAAIW,SAAST,EAAoBD,GAEjCH,EAAQI,mBAAqBA,CAC7B,IAEAP,IAAIC,OAAO,uBAAuB,CAAC,UAAU,UAAU,SAAS,cAAc,YAAY,+BAA+B,SAASC,EAAUC,EAASC,GACrJ,aAEA,IAAIC,EAAMH,EAAS,iBACfe,EAAQf,EAAS,eAAee,MAChCC,EAAehB,EAAS,eAAeiB,SAEvCA,EAAWhB,EAAQgB,SAAW,WAClC,EACAd,EAAIW,SAASG,EAAUD,GAEvB,WAEIT,KAAKW,mBAAqB,gCAE1BX,KAAKY,mBAAqB,SAASC,EAASC,EAAWC,GACnD,IAAIC,EAAKhB,KAAKW,mBACVM,EAAOJ,EAAQK,QAAQH,GAEvBI,EAAIF,EAAKG,MAAMJ,GAEnB,GAAKG,EAAL,CASA,IAPA,IAAIE,EAAYF,EAAE,GAAK,IAEnBG,EAAcL,EAAKM,OACnBC,EAASX,EAAQY,YACjBC,EAAWX,EACXY,EAASZ,IAEJA,EAAMS,GAEX,GADAP,EAAOJ,EAAQK,QAAQH,IACnB,QAAQa,KAAKX,GAAjB,CAGA,IADAE,EAAIF,EAAKG,MAAMJ,KAC6B,IAAnCG,EAAE,GAAGU,YAAYR,EAAW,GACjC,MAEJM,EAASZ,CALG,CAQhB,GAAIY,EAASD,EAAU,CACnB,IAAII,EAAYjB,EAAQK,QAAQS,GAAQJ,OACxC,OAAO,IAAIf,EAAMkB,EAAUJ,EAAaK,EAAQG,EACpD,CAvBc,CAwBlB,CAEH,EAAEC,KAAKrB,EAASsB,UAEjB,IAEAzC,IAAIC,OAAO,gBAAgB,CAAC,UAAU,UAAU,SAAS,cAAc,gBAAgB,gCAAgC,yBAAyB,SAASC,EAAUC,EAASC,GAC5K,aAEA,IAAIC,EAAMH,EAAS,cACfwC,EAAWxC,EAAS,UAAUyC,KAC9BpC,EAAqBL,EAAS,0BAA0BK,mBACxDY,EAAWjB,EAAS,iBAAiBiB,SAErCwB,EAAO,WACPlC,KAAKmC,eAAiBrC,EACtBE,KAAKoC,aAAe,IAAI1B,EACxBV,KAAKqC,WAAarC,KAAKsC,iBAC3B,EACA1C,EAAIW,SAAS2B,EAAMD,GAEnB,WACIjC,KAAKuC,iBAAmB,IACxBvC,KAAKwC,IAAM,eACd,EAAET,KAAKG,EAAKF,WAEbtC,EAAQwC,KAAOA,CACf,G","sources":["webpack://quilt-navigator/./node_modules/brace/mode/toml.js"],"sourcesContent":["ace.define(\"ace/mode/toml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar TomlHighlightRules = function() {\n    var keywordMapper = this.createKeywordMapper({\n        \"constant.language.boolean\": \"true|false\"\n    }, \"identifier\");\n\n    var identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\\\\b\";\n\n    this.$rules = {\n    \"start\": [\n        {\n            token: \"comment.toml\",\n            regex: /#.*$/\n        },\n        {\n            token : \"string\",\n            regex : '\"(?=.)',\n            next  : \"qqstring\"\n        },\n        {\n            token: [\"variable.keygroup.toml\"],\n            regex: \"(?:^\\\\s*)(\\\\[\\\\[([^\\\\]]+)\\\\]\\\\])\"\n        },\n        {\n            token: [\"variable.keygroup.toml\"],\n            regex: \"(?:^\\\\s*)(\\\\[([^\\\\]]+)\\\\])\"\n        },\n        {\n            token : keywordMapper,\n            regex : identifierRe\n        },\n        {\n           token : \"support.date.toml\",\n           regex: \"\\\\d{4}-\\\\d{2}-\\\\d{2}(T)\\\\d{2}:\\\\d{2}:\\\\d{2}(Z)\"\n        },\n        {\n           token: \"constant.numeric.toml\",\n           regex: \"-?\\\\d+(\\\\.?\\\\d+)?\"\n        }\n    ],\n    \"qqstring\" : [\n        {\n            token : \"string\",\n            regex : \"\\\\\\\\$\",\n            next  : \"qqstring\"\n        },\n        {\n            token : \"constant.language.escape\",\n            regex : '\\\\\\\\[0tnr\"\\\\\\\\]'\n        },\n        {\n            token : \"string\",\n            regex : '\"|$',\n            next  : \"start\"\n        },\n        {\n            defaultToken: \"string\"\n        }\n    ]\n    };\n\n};\n\noop.inherits(TomlHighlightRules, TextHighlightRules);\n\nexports.TomlHighlightRules = TomlHighlightRules;\n});\n\nace.define(\"ace/mode/folding/ini\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function() {\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.foldingStartMarker = /^\\s*\\[([^\\])]*)]\\s*(?:$|[;#])/;\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var re = this.foldingStartMarker;\n        var line = session.getLine(row);\n        \n        var m = line.match(re);\n        \n        if (!m) return;\n        \n        var startName = m[1] + \".\";\n        \n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            if (/^\\s*$/.test(line))\n                continue;\n            m = line.match(re);\n            if (m && m[1].lastIndexOf(startName, 0) !== 0)\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/toml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/toml_highlight_rules\",\"ace/mode/folding/ini\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar TomlHighlightRules = acequire(\"./toml_highlight_rules\").TomlHighlightRules;\nvar FoldMode = acequire(\"./folding/ini\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = TomlHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/toml\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","TomlHighlightRules","keywordMapper","this","createKeywordMapper","$rules","token","regex","next","defaultToken","inherits","Range","BaseFoldMode","FoldMode","foldingStartMarker","getFoldWidgetRange","session","foldStyle","row","re","line","getLine","m","match","startName","startColumn","length","maxRow","getLength","startRow","endRow","test","lastIndexOf","endColumn","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","$id"],"sourceRoot":""}