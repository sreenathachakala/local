{"version":3,"file":"1684.a4bdff1d974084727d31.chunk.js","mappings":"iGAAAA,IAAIC,OAAO,kCAAkC,CAAC,UAAU,UAAU,SAAS,cAAc,kCAAkC,SAASC,EAAUC,EAASC,GACvJ,aAEA,IAAIC,EAAMH,EAAS,cACfI,EAAqBJ,EAAS,0BAA0BI,mBAExDC,EAAuB,WAEvBC,KAAKC,OAAS,CAAEC,MACb,CAAE,CAAEC,MAAO,gBACPC,MAAO,OACPC,KACC,CAAE,CAAEF,MAAO,gBAAiBC,MAAO,OAAQE,KAAM,OAC/C,CAAEC,aAAc,mBAErB,CAAEJ,MAAO,iBACPC,MAAO,QAET,CAAED,MAAO,mBACPC,MAAO,2CAET,CAAED,MAAO,SACPC,MAAO,IACPC,KACC,CAAE,CAAEF,MAAO,SAAUC,MAAO,IAAKE,KAAM,OACrC,CAAEC,aAAc,YAErB,CAAEJ,MAAO,oBACPC,MAAO,sBAET,CAAED,MAAO,6BACPC,MAAO,6BAET,CAAED,MAAO,gBAAiBC,MAAO,KAAOI,QAAS,cACjD,CAAEL,MAAO,gBAAiBC,MAAO,SAAOI,QAAS,sBACjD,CAAEL,MAAO,gBAAiBC,MAAO,KAAOI,QAAS,QACjD,CAAEL,MAAO,gBAAiBC,MAAO,MAAOI,QAAS,gBACjD,CAAEL,MAAO,cAAiBC,MAAO,MAAOI,QAAS,cACjD,CAAEL,MAAO,gBAAiBC,MAAO,IAAOI,QAAS,YACjD,CAAEL,MAAO,gBAAiBC,MAAO,IAAOI,QAAS,eACjD,CAAEL,MAAO,gBAAiBC,MAAO,IAAOI,QAAS,eACjD,CAAEL,MAAO,mBAAoBC,MAAO,eAAgBI,QAAS,YAC7D,CAAEL,MAAO,gBAAiBC,MAAO,IAAKI,QAAS,YAC/C,CAAEL,MAAO,mBAAoBC,MAAO,cAAeI,QAAS,yBAC5D,CAAEL,MAAO,UAAWC,MAAO,KAAMI,QAAS,eAC1C,CAAEL,MAAO,mBACPC,MAAO,iBACPC,KACC,CAAE,CAAEI,QAAS,SACX,CAAEN,MAAO,mBACPC,MAAO,KACPE,KAAM,SAEb,CAAEH,MAAO,mBACPC,MAAO,qBAET,CAAED,MAAO,CAAE,eAAgB,QACzBC,MAAO,+DAET,CAAED,MAAO,cACPC,MAAO,6DAET,CAAED,MAAO,qBACPC,MAAO,8DAGdJ,KAAKU,gBACT,EAEAb,EAAIc,SAASZ,EAAsBD,GAEnCH,EAAQI,qBAAuBA,CAC/B,IAEAP,IAAIC,OAAO,0BAA0B,CAAC,UAAU,UAAU,SAAS,cAAc,6BAA6B,cAAc,SAASC,EAAUC,EAASC,GACxJ,aAEA,IAAIC,EAAMH,EAAS,iBACfkB,EAAelB,EAAS,eAAemB,SACvCC,EAAQpB,EAAS,eAAeoB,MAEhCD,EAAWlB,EAAQkB,SAAW,WAAY,EAC9ChB,EAAIc,SAASE,EAAUD,GAEvB,WAEIZ,KAAKe,mBAAqB,SAASC,EAASC,EAAWC,GACnD,IAAIC,EAAQnB,KAAKoB,iBAAiBJ,EAASE,GAC3C,GAAIC,EACA,OAAOA,EAEX,IAAIE,EAAK,KACLC,EAAON,EAAQO,QAAQL,GACvBM,EAAaF,EAAKG,OAAOJ,GAC7B,IAAmB,GAAfG,GAAwC,KAApBF,EAAKE,GAA7B,CAQA,IALA,IAAIE,EAAcJ,EAAKK,OACnBC,EAASZ,EAAQa,YACjBC,EAAWZ,EACXa,EAASb,IAEJA,EAAMU,GAAQ,CAEnB,IAAII,GADJV,EAAON,EAAQO,QAAQL,IACNO,OAAOJ,GAExB,IAAc,GAAVW,EAAJ,CAGA,GAAmB,KAAfV,EAAKU,GACL,MAEJD,EAASb,CALG,CAMhB,CAEA,GAAIa,EAASD,EAAU,CACnB,IAAIG,EAAYjB,EAAQO,QAAQQ,GAAQJ,OACxC,OAAO,IAAIb,EAAMgB,EAAUJ,EAAaK,EAAQE,EACpD,CAvBU,CAwBd,EACAjC,KAAKkC,cAAgB,SAASlB,EAASC,EAAWC,GAC9C,IAAII,EAAON,EAAQO,QAAQL,GACvBiB,EAASb,EAAKG,OAAO,MACrBnB,EAAOU,EAAQO,QAAQL,EAAM,GAC7BkB,EAAOpB,EAAQO,QAAQL,EAAM,GAC7BmB,EAAaD,EAAKX,OAAO,MACzBa,EAAahC,EAAKmB,OAAO,MAE7B,IAAe,GAAXU,EAEA,OADAnB,EAAQuB,YAAYrB,EAAM,IAAmB,GAAdmB,GAAmBA,EAAaC,EAAa,QAAU,GAC/E,GAEX,IAAmB,GAAfD,GACA,GAAIF,GAAUG,GAA8B,KAAhBhB,EAAKa,IAAkC,KAAhB7B,EAAK6B,GAGpD,OAFAnB,EAAQuB,YAAYrB,EAAM,GAAK,GAC/BF,EAAQuB,YAAYrB,EAAM,GAAK,GACxB,aAER,GAAImB,GAAcF,GAA0B,KAAhBb,EAAKa,IAAkC,KAAhBC,EAAKD,KACb,GAA1CnB,EAAQO,QAAQL,EAAM,GAAGO,OAAO,MAGhC,OAFAT,EAAQuB,YAAYrB,EAAM,GAAK,QAC/BF,EAAQuB,YAAYrB,EAAM,GAAK,GACxB,GASf,OAJIF,EAAQuB,YAAYrB,EAAM,IADZ,GAAdmB,GAAmBA,EAAaF,EACD,QAEA,GAE/BA,EAASG,EACF,QAEA,EACf,CAEH,EAAEE,KAAK3B,EAAS4B,UAEjB,IAEAjD,IAAIC,OAAO,kCAAkC,CAAC,UAAU,UAAU,SAAS,cAAc,SAASC,EAAUC,EAASC,GACrH,aAEA,IAAIkB,EAAQpB,EAAS,YAAYoB,MAE7B4B,EAAuB,WAAY,GAEvC,WAEI1C,KAAK2C,aAAe,SAASrB,EAAMsB,GAC/B,QAAM,QAAQC,KAAKvB,IAGZ,SAASuB,KAAKD,EACzB,EAEA5C,KAAK8C,YAAc,SAASC,EAAK7B,GAC7B,IACI8B,EADOD,EAAIxB,QAAQL,GACN8B,MAAM,YAEvB,IAAKA,EAAO,OAAO,EAEnB,IAAIC,EAASD,EAAM,GAAGrB,OAClBuB,EAAeH,EAAII,oBAAoB,CAACjC,IAAKA,EAAK+B,OAAQA,IAE9D,IAAKC,GAAgBA,EAAahC,KAAOA,EAAK,OAAO,EAErD,IAAIiB,EAASnC,KAAKoD,WAAWL,EAAIxB,QAAQ2B,EAAahC,MACtD6B,EAAIM,QAAQ,IAAIvC,EAAMI,EAAK,EAAGA,EAAK+B,EAAO,GAAId,EAClD,EAEAnC,KAAKoD,WAAa,SAAS9B,GACvB,OAAOA,EAAK0B,MAAM,QAAQ,EAC9B,CAEH,GAAER,KAAKE,EAAqBD,WAE7B9C,EAAQ+C,qBAAuBA,CAC/B,IAEAlD,IAAIC,OAAO,kBAAkB,CAAC,UAAU,UAAU,SAAS,cAAc,gBAAgB,kCAAkC,0BAA0B,qBAAqB,YAAY,4BAA4B,oCAAoC,SAASC,EAAUC,EAASC,GAClR,aAEA,IAAIC,EAAMH,EAAS,cACf4D,EAAW5D,EAAS,UAAU6D,KAC9BxD,EAAuBL,EAAS,4BAA4BK,qBAC5Dc,EAAWnB,EAAS,oBAAoBmB,SACxC2C,EAAgB9D,EAAS,qBAAqB8D,cAC9C1C,EAAQpB,EAAS,YAAYoB,MAC7B2C,EAAkB/D,EAAS,sBAAsB+D,gBACjDf,EAAuBhD,EAAS,4BAA4BgD,qBAE5Da,EAAO,WACPvD,KAAK0D,eAAiB3D,EACtBC,KAAK2D,aAAe,IAAI9C,EACxBb,KAAK4D,SAAW,IAAIlB,EACpB1C,KAAK6D,WAAa,IAAIJ,CAC1B,EACA5D,EAAIc,SAAS4C,EAAMD,GAEnB,WACItD,KAAK8D,iBAAmB,KACxB9D,KAAK+D,aAAe,CAAC7D,MAAO,KAAM8D,IAAK,MAEvChE,KAAKiE,kBAAoB,SAASC,EAAO5C,EAAM6C,GAC3C,IAAIhC,EAASnC,KAAKoD,WAAW9B,GAEzB8C,EAAgBpE,KAAKqE,eAAeC,cAAchD,EAAM4C,GACxDK,EAASH,EAAcG,OACvBC,EAAWJ,EAAcF,MAC7B,GAAI,iBAAiBrB,KAAK2B,GACtB,OAAOrC,EACX,GAAIoC,EAAO5C,QAA4C,kBAAlC4C,EAAOA,EAAO5C,OAAS,GAAG8C,KAC3C,OAAOtC,EAECb,EAAK0B,QAGjB,MAFI,wBAAwBH,KAAKvB,KAC7Ba,GAAUgC,GACPhC,CACX,EAEAnC,KAAK2C,aAAe,SAASuB,EAAO5C,EAAMsB,GACtC,QAAI5C,KAAK4D,SAASjB,aAAarB,EAAMsB,KAGvB,OAAVA,GAA4B,SAAVA,MAGjB,OAAOC,KAAKvB,EAIrB,EAEAtB,KAAK8C,YAAc,SAASoB,EAAOnB,EAAK7B,GACpC,IAAIlB,KAAK4D,SAASd,YAAYC,EAAK7B,GAAnC,CAEA,IAAIwD,EAAW3B,EAAIxB,QAAQL,GACvB8B,EAAQ0B,EAAS1B,MAAM,QACvBC,EAASyB,EAASC,YAAY,KAAO,EACzC,IAAK3B,IAAU9B,IAAQ+B,EAAQ,OAAO,EAE3BF,EAAIxB,QAAQL,EAAM,GAA7B,IACI0D,EAAa5E,KAAK6E,YAAY9B,EAAK,CAAC7B,IAAKA,EAAK+B,OAAQA,IAC1D,IAAK2B,GAAcA,EAAW1E,MAAMgB,KAAOA,EAAK,OAAO,EAEvD+B,EAASD,EAAM,GAAGrB,OAClB,IAAIQ,EAASnC,KAAKoD,WAAWL,EAAIxB,QAAQqD,EAAW1E,MAAMgB,MAC1D6B,EAAIM,QAAQ,IAAIvC,EAAMI,EAAM,EAAG,EAAGA,EAAM,EAAG+B,GAASd,EAZ1C,CAad,EAEAnC,KAAK6E,YAAc,SAAS7D,EAASE,EAAK+B,GAC3B6B,MAAP5D,IACAA,EAAMF,EAAQ+D,UAAUC,MACV,iBAAP9D,IACP+B,EAAS/B,EAAI+B,OACb/B,EAAMA,EAAIA,KAGd,IAEI+D,EAFAC,EAAalE,EAAQmE,WAAWjE,EAAK+B,GACrCmC,EAAW,gBAAiBC,EAAS,cAEzC,GAAKH,EAAL,CAEA,GAAIA,EAAWT,MAAQW,EAAU,EACzBE,EAAK,IAAI9B,EAAcxC,EAASE,EAAK+B,IACtCsC,KAAOD,EAAGE,WACjB,KAAO,IAAIN,EAAWT,MAAQY,EAI1B,OAHA,IAAIC,KAAK,IAAI9B,EAAcxC,EAASE,EAAK+B,IACtCsC,KAAOD,EAAGG,YAEP,CAEV,MAAOR,EAAMK,EAAGC,SACRN,EAAIR,MAAQW,GAAYH,EAAIR,MAAQY,IAG5C,GAAKJ,GAAOA,EAAIR,MAAQS,EAAWT,KAAnC,CAGA,IAAIiB,EAAMJ,EAAGK,wBACTzE,EAAMoE,EAAGM,qBACb,OAAO,IAAI9E,EAAMI,EAAKwE,EAAKxE,EAAKwE,EAAMT,EAAIY,MAAMlE,OAJtC,CAfA,CAoBd,EACA3B,KAAK8F,IAAM,iBACd,EAAEtD,KAAKe,EAAKd,WAEb9C,EAAQ4D,KAAOA,CACf,G","sources":["webpack://quilt-navigator/./node_modules/brace/mode/logiql.js"],"sourcesContent":["ace.define(\"ace/mode/logiql_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar LogiQLHighlightRules = function() {\n\n    this.$rules = { start: \n       [ { token: 'comment.block',\n           regex: '/\\\\*',\n           push: \n            [ { token: 'comment.block', regex: '\\\\*/', next: 'pop' },\n              { defaultToken: 'comment.block' } ]\n            },\n         { token: 'comment.single',\n           regex: '//.*'\n            },\n         { token: 'constant.numeric',\n           regex: '\\\\d+(?:\\\\.\\\\d+)?(?:[eE][+-]?\\\\d+)?[fd]?'\n            },\n         { token: 'string',\n           regex: '\"',\n           push: \n            [ { token: 'string', regex: '\"', next: 'pop' },\n              { defaultToken: 'string' } ]\n            },\n         { token: 'constant.language',\n           regex: '\\\\b(true|false)\\\\b'\n            },\n         { token: 'entity.name.type.logicblox',\n           regex: '`[a-zA-Z_:]+(\\\\d|\\\\a)*\\\\b'\n            },\n         { token: 'keyword.start', regex: '->',  comment: 'Constraint' },\n         { token: 'keyword.start', regex: '-->', comment: 'Level 1 Constraint'},\n         { token: 'keyword.start', regex: '<-',  comment: 'Rule' },\n         { token: 'keyword.start', regex: '<--', comment: 'Level 1 Rule' },\n         { token: 'keyword.end',   regex: '\\\\.', comment: 'Terminator' },\n         { token: 'keyword.other', regex: '!',   comment: 'Negation' },\n         { token: 'keyword.other', regex: ',',   comment: 'Conjunction' },\n         { token: 'keyword.other', regex: ';',   comment: 'Disjunction' },\n         { token: 'keyword.operator', regex: '<=|>=|!=|<|>', comment: 'Equality'},\n         { token: 'keyword.other', regex: '@', comment: 'Equality' },\n         { token: 'keyword.operator', regex: '\\\\+|-|\\\\*|/', comment: 'Arithmetic operations'},\n         { token: 'keyword', regex: '::', comment: 'Colon colon' },\n         { token: 'support.function',\n           regex: '\\\\b(agg\\\\s*<<)',\n           push: \n            [ { include: '$self' },\n              { token: 'support.function',\n                regex: '>>',\n                next: 'pop' } ]\n            },\n         { token: 'storage.modifier',\n           regex: '\\\\b(lang:[\\\\w:]*)'\n            },\n         { token: [ 'storage.type', 'text' ],\n           regex: '(export|sealed|clauses|block|alias|alias_all)(\\\\s*\\\\()(?=`)'\n            },\n         { token: 'entity.name',\n           regex: '[a-zA-Z_][a-zA-Z_0-9:]*(@prev|@init|@final)?(?=(\\\\(|\\\\[))'\n            },\n         { token: 'variable.parameter',\n           regex: '([a-zA-Z][a-zA-Z_0-9]*|_)\\\\s*(?=(,|\\\\.|<-|->|\\\\)|\\\\]|=))'\n            } ] };\n    \n    this.normalizeRules();\n};\n\noop.inherits(LogiQLHighlightRules, TextHighlightRules);\n\nexports.LogiQLHighlightRules = LogiQLHighlightRules;\n});\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/logiql\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/logiql_highlight_rules\",\"ace/mode/folding/coffee\",\"ace/token_iterator\",\"ace/range\",\"ace/mode/behaviour/cstyle\",\"ace/mode/matching_brace_outdent\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar LogiQLHighlightRules = acequire(\"./logiql_highlight_rules\").LogiQLHighlightRules;\nvar FoldMode = acequire(\"./folding/coffee\").FoldMode;\nvar TokenIterator = acequire(\"../token_iterator\").TokenIterator;\nvar Range = acequire(\"../range\").Range;\nvar CstyleBehaviour = acequire(\"./behaviour/cstyle\").CstyleBehaviour;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\nvar Mode = function() {\n    this.HighlightRules = LogiQLHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n        if (/comment|string/.test(endState))  \n            return indent;\n        if (tokens.length && tokens[tokens.length - 1].type == \"comment.single\")\n            return indent;\n\n        var match = line.match();\n        if (/(-->|<--|<-|->|{)\\s*$/.test(line))\n            indent += tab;\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        if (this.$outdent.checkOutdent(line, input))\n            return true;\n\n        if (input !== \"\\n\" && input !== \"\\r\\n\")\n            return false;\n            \n        if (!/^\\s+/.test(line))\n            return false;\n\n        return true;\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        if (this.$outdent.autoOutdent(doc, row))\n            return;\n        var prevLine = doc.getLine(row);\n        var match = prevLine.match(/^\\s+/);\n        var column = prevLine.lastIndexOf(\".\") + 1;\n        if (!match || !row || !column) return 0;\n\n        var line = doc.getLine(row + 1);\n        var startRange = this.getMatching(doc, {row: row, column: column});\n        if (!startRange || startRange.start.row == row) return 0;\n\n        column = match[0].length;\n        var indent = this.$getIndent(doc.getLine(startRange.start.row));\n        doc.replace(new Range(row + 1, 0, row + 1, column), indent);\n    };\n\n    this.getMatching = function(session, row, column) {\n        if (row == undefined)\n            row = session.selection.lead;\n        if (typeof row == \"object\") {\n            column = row.column;\n            row = row.row;\n        }\n\n        var startToken = session.getTokenAt(row, column);\n        var KW_START = \"keyword.start\", KW_END = \"keyword.end\";\n        var tok;\n        if (!startToken)\n            return;\n        if (startToken.type == KW_START) {\n            var it = new TokenIterator(session, row, column);\n            it.step = it.stepForward;\n        } else if (startToken.type == KW_END) {\n            var it = new TokenIterator(session, row, column);\n            it.step = it.stepBackward;\n        } else\n            return;\n\n        while (tok = it.step()) {\n            if (tok.type == KW_START || tok.type == KW_END)\n                break;\n        }\n        if (!tok || tok.type == startToken.type)\n            return;\n\n        var col = it.getCurrentTokenColumn();\n        var row = it.getCurrentTokenRow();\n        return new Range(row, col, row, col + tok.value.length);\n    };\n    this.$id = \"ace/mode/logiql\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","LogiQLHighlightRules","this","$rules","start","token","regex","push","next","defaultToken","comment","include","normalizeRules","inherits","BaseFoldMode","FoldMode","Range","getFoldWidgetRange","session","foldStyle","row","range","indentationBlock","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","indent","prev","prevIndent","nextIndent","foldWidgets","call","prototype","MatchingBraceOutdent","checkOutdent","input","test","autoOutdent","doc","match","column","openBracePos","findMatchingBracket","$getIndent","replace","TextMode","Mode","TokenIterator","CstyleBehaviour","HighlightRules","foldingRules","$outdent","$behaviour","lineCommentStart","blockComment","end","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","endState","type","prevLine","lastIndexOf","startRange","getMatching","undefined","selection","lead","tok","startToken","getTokenAt","KW_START","KW_END","it","step","stepForward","stepBackward","col","getCurrentTokenColumn","getCurrentTokenRow","value","$id"],"sourceRoot":""}