{"version":3,"file":"9342.b461be30b28067f64950.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./node_modules/brace/mode/haskell_cabal.js"],"sourcesContent":["ace.define(\"ace/mode/haskell_cabal_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar CabalHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : \"^\\\\s*--.*$\"\n            }, {\n                token: [\"keyword\"],\n                regex: /^(\\s*\\w.*?)(:(?:\\s+|$))/\n            }, {\n                token : \"constant.numeric\", // float\n                regex : /[\\d_]+(?:(?:[\\.\\d_]*)?)/\n            }, {\n                token : \"constant.language.boolean\",\n                regex : \"(?:true|false|TRUE|FALSE|True|False|yes|no)\\\\b\"\n            }, {\n                token : \"markup.heading\",\n                regex : /^(\\w.*)$/\n            }\n        ]};\n\n};\n\noop.inherits(CabalHighlightRules, TextHighlightRules);\n\nexports.CabalHighlightRules = CabalHighlightRules;\n});\n\nace.define(\"ace/mode/folding/haskell_cabal\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n  this.isHeading = function (session,row) {\n      var heading = \"markup.heading\";\n      var token = session.getTokens(row)[0];\n      return row==0 || (token && token.type.lastIndexOf(heading, 0) === 0);\n  };\n\n  this.getFoldWidget = function(session, foldStyle, row) {\n      if (this.isHeading(session,row)){\n        return \"start\";\n      } else if (foldStyle === \"markbeginend\" && !(/^\\s*$/.test(session.getLine(row)))){\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n          if (!(/^\\s*$/.test(session.getLine(row)))){\n              break;\n          }\n        }\n        if (row==maxRow || this.isHeading(session,row)){\n          return \"end\";\n        }\n      }\n      return \"\";\n  };\n\n\n  this.getFoldWidgetRange = function(session, foldStyle, row) {\n      var line = session.getLine(row);\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n      if (this.isHeading(session,row)) {\n          while (++row < maxRow) {\n              if (this.isHeading(session,row)){\n                row--;\n                break;\n              }\n          }\n\n          endRow = row;\n          if (endRow > startRow) {\n              while (endRow > startRow && /^\\s*$/.test(session.getLine(endRow)))\n                  endRow--;\n          }\n\n          if (endRow > startRow) {\n              var endColumn = session.getLine(endRow).length;\n              return new Range(startRow, startColumn, endRow, endColumn);\n          }\n      } else if (this.getFoldWidget(session, foldStyle, row)===\"end\"){\n        var endRow = row;\n        var endColumn = session.getLine(endRow).length;\n        while (--row>=0){\n          if (this.isHeading(session,row)){\n            break;\n          }\n        }\n        var line = session.getLine(row);\n        var startColumn = line.length;\n        return new Range(row, startColumn, endRow, endColumn);\n      }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/haskell_cabal\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/haskell_cabal_highlight_rules\",\"ace/mode/folding/haskell_cabal\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar CabalHighlightRules = acequire(\"./haskell_cabal_highlight_rules\").CabalHighlightRules;\nvar FoldMode = acequire(\"./folding/haskell_cabal\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = CabalHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"--\";\n    this.blockComment = null;\n    this.$id = \"ace/mode/haskell_cabal\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","CabalHighlightRules","this","$rules","token","regex","inherits","BaseFoldMode","FoldMode","Range","isHeading","session","row","getTokens","type","lastIndexOf","getFoldWidget","foldStyle","test","getLine","maxRow","getLength","getFoldWidgetRange","startColumn","length","startRow","endRow","endColumn","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","$id"],"sourceRoot":""}