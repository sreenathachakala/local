{"version":3,"file":"3805.a5c93d4cbb8241c569b7.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./node_modules/brace/mode/rust.js"],"sourcesContent":["ace.define(\"ace/mode/rust_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar stringEscape = /\\\\(?:[nrt0'\"\\\\]|x[\\da-fA-F]{2}|u\\{[\\da-fA-F]{6}\\})/.source;\nvar RustHighlightRules = function() {\n\n    this.$rules = { start:\n       [ { token: 'variable.other.source.rust',\n           regex: '\\'[a-zA-Z_][a-zA-Z0-9_]*(?![\\\\\\'])' },\n         { token: 'string.quoted.single.source.rust',\n           regex: \"'(?:[^'\\\\\\\\]|\" + stringEscape + \")'\" },\n         {\n            stateName: \"bracketedComment\",\n            onMatch : function(value, currentState, stack){\n                stack.unshift(this.next, value.length - 1, currentState);\n                return \"string.quoted.raw.source.rust\";\n            },\n            regex : /r#*\"/,\n            next  : [\n                {\n                    onMatch : function(value, currentState, stack) {\n                        var token = \"string.quoted.raw.source.rust\";\n                        if (value.length >= stack[1]) {\n                            if (value.length > stack[1])\n                                token = \"invalid\";\n                            stack.shift();\n                            stack.shift();\n                            this.next = stack.shift();\n                        } else {\n                            this.next = \"\";\n                        }\n                        return token;\n                    },\n                    regex : /\"#*/,\n                    next  : \"start\"\n                }, {\n                    defaultToken : \"string.quoted.raw.source.rust\"\n                }\n            ]\n         },\n         { token: 'string.quoted.double.source.rust',\n           regex: '\"',\n           push: \n            [ { token: 'string.quoted.double.source.rust',\n                regex: '\"',\n                next: 'pop' },\n              { token: 'constant.character.escape.source.rust',\n                regex: stringEscape },\n              { defaultToken: 'string.quoted.double.source.rust' } ] },\n         { token: [ 'keyword.source.rust', 'text', 'entity.name.function.source.rust' ],\n           regex: '\\\\b(fn)(\\\\s+)([a-zA-Z_][a-zA-Z0-9_]*)' },\n         { token: 'support.constant', regex: '\\\\b[a-zA-Z_][\\\\w\\\\d]*::' },\n         { token: 'keyword.source.rust',\n           regex: '\\\\b(?:abstract|alignof|as|box|break|continue|const|crate|do|else|enum|extern|for|final|if|impl|in|let|loop|macro|match|mod|move|mut|offsetof|override|priv|proc|pub|pure|ref|return|self|sizeof|static|struct|super|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\\\\b' },\n         { token: 'storage.type.source.rust',\n           regex: '\\\\b(?:Self|isize|usize|char|bool|u8|u16|u32|u64|u128|f16|f32|f64|i8|i16|i32|i64|i128|str|option|either|c_float|c_double|c_void|FILE|fpos_t|DIR|dirent|c_char|c_schar|c_uchar|c_short|c_ushort|c_int|c_uint|c_long|c_ulong|size_t|ptrdiff_t|clock_t|time_t|c_longlong|c_ulonglong|intptr_t|uintptr_t|off_t|dev_t|ino_t|pid_t|mode_t|ssize_t)\\\\b' },\n         { token: 'variable.language.source.rust', regex: '\\\\bself\\\\b' },\n         \n         { token: 'comment.line.doc.source.rust',\n           regex: '//!.*$' },\n         { token: 'comment.line.double-dash.source.rust',\n           regex: '//.*$' },\n         { token: 'comment.start.block.source.rust',\n           regex: '/\\\\*',\n           stateName: 'comment',\n           push: \n            [ { token: 'comment.start.block.source.rust',\n                regex: '/\\\\*',\n                push: 'comment' },\n              { token: 'comment.end.block.source.rust',\n                regex: '\\\\*/',\n                next: 'pop' },\n              { defaultToken: 'comment.block.source.rust' } ] },\n         \n         { token: 'keyword.operator',\n           regex: /\\$|[-=]>|[-+%^=!&|<>]=?|[*/](?![*/])=?/ },\n         { token : \"punctuation.operator\", regex : /[?:,;.]/ },\n         { token : \"paren.lparen\", regex : /[\\[({]/ },\n         { token : \"paren.rparen\", regex : /[\\])}]/ },\n         { token: 'constant.language.source.rust',\n           regex: '\\\\b(?:true|false|Some|None|Ok|Err)\\\\b' },\n         { token: 'support.constant.source.rust',\n           regex: '\\\\b(?:EXIT_FAILURE|EXIT_SUCCESS|RAND_MAX|EOF|SEEK_SET|SEEK_CUR|SEEK_END|_IOFBF|_IONBF|_IOLBF|BUFSIZ|FOPEN_MAX|FILENAME_MAX|L_tmpnam|TMP_MAX|O_RDONLY|O_WRONLY|O_RDWR|O_APPEND|O_CREAT|O_EXCL|O_TRUNC|S_IFIFO|S_IFCHR|S_IFBLK|S_IFDIR|S_IFREG|S_IFMT|S_IEXEC|S_IWRITE|S_IREAD|S_IRWXU|S_IXUSR|S_IWUSR|S_IRUSR|F_OK|R_OK|W_OK|X_OK|STDIN_FILENO|STDOUT_FILENO|STDERR_FILENO)\\\\b' },\n         { token: 'meta.preprocessor.source.rust',\n           regex: '\\\\b\\\\w\\\\(\\\\w\\\\)*!|#\\\\[[\\\\w=\\\\(\\\\)_]+\\\\]\\\\b' },\n         { token: 'constant.numeric.source.rust',\n           regex: /\\b(?:0x[a-fA-F0-9_]+|0o[0-7_]+|0b[01_]+|[0-9][0-9_]*(?!\\.))(?:[iu](?:size|8|16|32|64|128))?\\b/ },\n         { token: 'constant.numeric.source.rust',\n           regex: /\\b(?:[0-9][0-9_]*)(?:\\.[0-9][0-9_]*)?(?:[Ee][+-][0-9][0-9_]*)?(?:f32|f64)?\\b/ } ] };\n    \n    this.normalizeRules();\n};\n\nRustHighlightRules.metaData = { fileTypes: [ 'rs', 'rc' ],\n      foldingStartMarker: '^.*\\\\bfn\\\\s*(\\\\w+\\\\s*)?\\\\([^\\\\)]*\\\\)(\\\\s*\\\\{[^\\\\}]*)?\\\\s*$',\n      foldingStopMarker: '^\\\\s*\\\\}',\n      name: 'Rust',\n      scopeName: 'source.rust' };\n\n\noop.inherits(RustHighlightRules, TextHighlightRules);\n\nexports.RustHighlightRules = RustHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/rust\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/rust_highlight_rules\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar RustHighlightRules = acequire(\"./rust_highlight_rules\").RustHighlightRules;\nvar FoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = RustHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\", nestable: true};\n    this.$quotes = { '\"': '\"' };\n    this.$id = \"ace/mode/rust\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","stringEscape","source","RustHighlightRules","this","$rules","start","token","regex","stateName","onMatch","value","currentState","stack","unshift","next","length","shift","defaultToken","push","normalizeRules","metaData","fileTypes","foldingStartMarker","foldingStopMarker","name","scopeName","inherits","Range","BaseFoldMode","FoldMode","commentRegex","RegExp","replace","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","match","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","nestable","$quotes","$id"],"sourceRoot":""}