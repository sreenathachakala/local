{"version":3,"file":"4141.0b5bcce723f55f55937f.chunk.js","mappings":"uNAOMA,EAAS,CACbC,KAAM,SACNC,WAAY,CACVC,EAAG,CACDF,KAAM,SACNG,qBAAsB,CACpBH,KAAM,SACNC,WAAY,CACVG,EAAG,CAAEC,MAAO,CAAC,CAAEL,KAAM,SAAUM,QAAS,MAAQ,CAAEN,KAAM,YACxDO,EAAG,CACDP,KAAM,QACNQ,MAAO,CACLR,KAAM,gBASdS,EAAW,KAA+BV,GAC1CW,EAAO,WAAO,EAEL,SAASC,IAChB,MAAoB,WAA0B,CAClDT,EAAG,CACDU,OAAQ,CACNR,EAAG,IACHG,EAAG,CAAC,OAGRM,QAAS,CAAEC,WAAW,EAAMC,WAAW,KAPlCC,EAAK,KAAEC,EAAQ,KAShB,EAAsB,YAAiC,WAAM,OAAAR,EAASO,EAAT,IAA5DE,EAAM,KAAEC,EAAS,KAClBC,EAAW,eAAkB,SAACC,GAClCF,EAAUV,EAASY,IACnBJ,EAASI,EACX,GAAG,IACH,OACE,gBAAC,IAAW,CAACC,SAAS,MACpB,gBAAC,IAAK,CAACC,QAAQ,eAAeC,GAAI,GAChC,gBAACC,EAAA,EAAU,CACTP,OAAQ,GACRQ,eAAa,EACbN,SAAUV,EACVX,OAAQA,EACRiB,MAAO,QAGX,gBAAC,IAAK,CAACO,QAAQ,eAAeC,GAAI,GAChC,gBAACC,EAAA,EAAU,CACTP,OAAQA,EACRQ,eAAa,EACbN,SAAUA,EACVrB,OAAQA,EACRiB,MAAOA,KAKjB,CC9De,SAASW,IACtB,OAAO,gBAACC,EAAA,GAAM,CAACC,IAAK,gBAAClB,EAAc,OACrC,C","sources":["webpack://quilt-navigator/./app/containers/StoryBook/JsonEditor.tsx","webpack://quilt-navigator/./app/containers/StoryBook/StoryBook.tsx"],"sourcesContent":["import * as React from 'react'\nimport * as M from '@material-ui/core'\n\nimport JsonEditor from 'components/JsonEditor'\nimport { JsonValue, ValidationErrors } from 'components/JsonEditor/constants'\nimport * as jsonSchema from 'utils/json-schema'\n\nconst schema = {\n  type: 'object',\n  properties: {\n    c: {\n      type: 'object',\n      additionalProperties: {\n        type: 'object',\n        properties: {\n          a: { anyOf: [{ type: 'number', minimum: 1024 }, { type: 'string' }] },\n          b: {\n            type: 'array',\n            items: {\n              type: 'number',\n            },\n          },\n        },\n      },\n    },\n  },\n}\n\nconst validate = jsonSchema.makeSchemaValidator(schema)\nconst noop = () => {}\n\nexport default function JsonEditorBook() {\n  const [value, setValue] = React.useState<JsonValue>({\n    c: {\n      foobar: {\n        a: 123,\n        b: [345],\n      },\n    },\n    objectA: { propertyA: true, propertyB: false },\n  })\n  const [errors, setErrors] = React.useState<ValidationErrors>(() => validate(value))\n  const onChange = React.useCallback((json) => {\n    setErrors(validate(json))\n    setValue(json)\n  }, [])\n  return (\n    <M.Container maxWidth=\"lg\">\n      <M.Box bgcolor=\"common.white\" py={2}>\n        <JsonEditor\n          errors={[]}\n          multiColumned\n          onChange={noop}\n          schema={schema}\n          value={null}\n        />\n      </M.Box>\n      <M.Box bgcolor=\"common.white\" py={2}>\n        <JsonEditor\n          errors={errors}\n          multiColumned\n          onChange={onChange}\n          schema={schema}\n          value={value}\n        />\n      </M.Box>\n    </M.Container>\n  )\n}\n","import * as React from 'react'\n\nimport Layout from 'components/Layout'\n\nimport JsonEditorBook from './JsonEditor'\n\nexport default function StoryBook() {\n  return <Layout pre={<JsonEditorBook />} />\n}\n"],"names":["schema","type","properties","c","additionalProperties","a","anyOf","minimum","b","items","validate","noop","JsonEditorBook","foobar","objectA","propertyA","propertyB","value","setValue","errors","setErrors","onChange","json","maxWidth","bgcolor","py","JsonEditor","multiColumned","StoryBook","Layout","pre"],"sourceRoot":""}