{"version":3,"file":"9884.9e818821b6dd63a4ae5d.chunk.js","mappings":"iGAAAA,IAAIC,OAAO,gCAAgC,CAAC,UAAU,UAAU,SAAS,cAAc,kCAAkC,SAASC,EAAUC,EAASC,GACrJ,aAEA,IAAIC,EAAMH,EAAS,cACfI,EAAqBJ,EAAS,0BAA0BI,mBAExDC,EAAqB,WAErBC,KAAKC,OAAS,CACV,MAAU,CAAC,CACHC,MAAO,kCACPC,MAAO,wCACP,KAAQ,WACT,CACCD,MAAO,8BACPC,MAAO,CACH,WACA,mBACA,WACA,oBAEL,CACCD,MAAO,8CACPC,MAAO,CACH,mBACA,oCACA,oBACA,mBACA,oCACA,WAEJ,KAAQ,SACT,CACCD,MAAO,gCACPC,MAAO,CACH,mBACA,aAEL,CACCD,MAAO,uBACPC,MAAO,CACH,mBACA,OACA,YAEL,CACCD,MAAO,wBACPC,MAAO,CACH,mBACA,SACA,YAEL,CACCD,MAAO,mCACPC,MAAO,CAAC,WAAY,WAAY,UAAW,aAC5C,CACCD,MAAO,YACPC,MAAO,YACR,CACCD,MAAO,SACPC,MAAO,QACR,CACCD,MAAO,QACPC,MAAO,WACR,CACCC,aAAc,YACdC,iBAAiB,IAIjC,EAEAR,EAAIS,SAASP,EAAoBD,GAEjCH,EAAQI,mBAAqBA,CAC7B,IAEAP,IAAIC,OAAO,wBAAwB,CAAC,UAAU,UAAU,SAAS,cAAc,6BAA6B,cAAc,SAASC,EAAUC,EAASC,GACtJ,aAEA,IAAIC,EAAMH,EAAS,iBACfa,EAAeb,EAAS,eAAec,SACvCC,EAAQf,EAAS,eAAee,MAEhCD,EAAWb,EAAQa,SAAW,SAASE,EAAQC,GAClDX,KAAKY,WAAaF,EAClBV,KAAKW,KAAOA,EACZX,KAAKa,mBAAqBC,OAAO,KAAOJ,EAAOK,KAAK,KAAO,IAAKf,KAAKW,KACtE,EACAd,EAAIS,SAASE,EAAUD,GAEvB,WACIP,KAAKgB,mBAAqB,SAASC,EAASC,EAAWC,GAKnD,IAJA,IAAIC,EAAOH,EAAQI,QAAQF,GACvBG,EAAQ,CAACH,IAAKA,EAAKI,OAAQH,EAAKI,QAEhCC,EAAUzB,KAAKY,WACVc,EAAI,EAAGA,GAAKD,EAAQD,OAAQE,IAAK,CACtC,IAAIC,EAAKb,OAAO,KAAOW,EAAQG,MAAM,EAAGF,GAAGX,KAAK,KAAO,IAAKf,KAAKW,MACjE,GAAIgB,EAAGE,KAAKT,GACR,KACR,CAEA,IAAK,IAAIU,EAAIb,EAAQc,cAAeZ,EAAMW,IACtCV,EAAOH,EAAQI,QAAQF,IACnBQ,EAAGE,KAAKT,MAGhB,GAAID,GAAOG,EAAMH,IAAM,EAEvB,OAAQV,EAAMuB,WAAWV,EAAO,CAACH,IAAKA,EAAM,EAAGI,OAAQH,EAAKI,QAChE,CAEH,EAAES,KAAKzB,EAAS0B,UAEjB,IAEA1C,IAAIC,OAAO,gBAAgB,CAAC,UAAU,UAAU,SAAS,cAAc,gBAAgB,gCAAgC,0BAA0B,SAASC,EAAUC,EAASC,GAC7K,aAEA,IAAIC,EAAMH,EAAS,cACfyC,EAAWzC,EAAS,UAAU0C,KAC9BC,EAAiB3C,EAAS,0BAA0BK,mBACpDS,EAAWd,EAAS,kBAAkBc,SAEtC4B,EAAO,WACPpC,KAAKqC,eAAiBA,EACtBrC,KAAKsC,aAAe,IAAI9B,EAAS,CAAC,OAAQ,QAAS,SAAU,aAAc,IAC/E,EACAX,EAAIS,SAAS8B,EAAMD,GAEnB,WAEInC,KAAKuC,IAAM,eACd,EAAEN,KAAKG,EAAKF,WAEbvC,EAAQyC,KAAOA,CAEf,G","sources":["webpack://quilt-navigator/./node_modules/brace/mode/diff.js"],"sourcesContent":["ace.define(\"ace/mode/diff_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DiffHighlightRules = function() {\n\n    this.$rules = {\n        \"start\" : [{\n                regex: \"^(?:\\\\*{15}|={67}|-{3}|\\\\+{3})$\",\n                token: \"punctuation.definition.separator.diff\",\n                \"name\": \"keyword\"\n            }, { //diff.range.unified\n                regex: \"^(@@)(\\\\s*.+?\\\\s*)(@@)(.*)$\",\n                token: [\n                    \"constant\",\n                    \"constant.numeric\",\n                    \"constant\",\n                    \"comment.doc.tag\"\n                ]\n            }, { //diff.range.normal\n                regex: \"^(\\\\d+)([,\\\\d]+)(a|d|c)(\\\\d+)([,\\\\d]+)(.*)$\",\n                token: [\n                    \"constant.numeric\",\n                    \"punctuation.definition.range.diff\",\n                    \"constant.function\",\n                    \"constant.numeric\",\n                    \"punctuation.definition.range.diff\",\n                    \"invalid\"\n                ],\n                \"name\": \"meta.\"\n            }, {\n                regex: \"^(\\\\-{3}|\\\\+{3}|\\\\*{3})( .+)$\",\n                token: [\n                    \"constant.numeric\",\n                    \"meta.tag\"\n                ]\n            }, { // added\n                regex: \"^([!+>])(.*?)(\\\\s*)$\",\n                token: [\n                    \"support.constant\",\n                    \"text\",\n                    \"invalid\"\n                ]\n            }, { // removed\n                regex: \"^([<\\\\-])(.*?)(\\\\s*)$\",\n                token: [\n                    \"support.function\",\n                    \"string\",\n                    \"invalid\"\n                ]\n            }, {\n                regex: \"^(diff)(\\\\s+--\\\\w+)?(.+?)( .+)?$\",\n                token: [\"variable\", \"variable\", \"keyword\", \"variable\"]\n            }, {\n                regex: \"^Index.+$\",\n                token: \"variable\"\n            }, {\n                regex: \"^\\\\s+$\",\n                token: \"text\"\n            }, {\n                regex: \"\\\\s*$\",\n                token: \"invalid\"\n            }, {\n                defaultToken: \"invisible\",\n                caseInsensitive: true\n            }\n        ]\n    };\n};\n\noop.inherits(DiffHighlightRules, TextHighlightRules);\n\nexports.DiffHighlightRules = DiffHighlightRules;\n});\n\nace.define(\"ace/mode/folding/diff\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function(levels, flag) {\n\tthis.regExpList = levels;\n\tthis.flag = flag;\n\tthis.foldingStartMarker = RegExp(\"^(\" + levels.join(\"|\") + \")\", this.flag);\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var start = {row: row, column: line.length};\n\n        var regList = this.regExpList;\n        for (var i = 1; i <= regList.length; i++) {\n            var re = RegExp(\"^(\" + regList.slice(0, i).join(\"|\") + \")\", this.flag);\n            if (re.test(line))\n                break;\n        }\n\n        for (var l = session.getLength(); ++row < l; ) {\n            line = session.getLine(row);\n            if (re.test(line))\n                break;\n        }\n        if (row == start.row + 1)\n            return;\n        return  Range.fromPoints(start, {row: row - 1, column: line.length});\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/diff\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/diff_highlight_rules\",\"ace/mode/folding/diff\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar HighlightRules = acequire(\"./diff_highlight_rules\").DiffHighlightRules;\nvar FoldMode = acequire(\"./folding/diff\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = HighlightRules;\n    this.foldingRules = new FoldMode([\"diff\", \"index\", \"\\\\+{3}\", \"@@|\\\\*{5}\"], \"i\");\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.$id = \"ace/mode/diff\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n\n});\n"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","DiffHighlightRules","this","$rules","regex","token","defaultToken","caseInsensitive","inherits","BaseFoldMode","FoldMode","Range","levels","flag","regExpList","foldingStartMarker","RegExp","join","getFoldWidgetRange","session","foldStyle","row","line","getLine","start","column","length","regList","i","re","slice","test","l","getLength","fromPoints","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$id"],"sourceRoot":""}