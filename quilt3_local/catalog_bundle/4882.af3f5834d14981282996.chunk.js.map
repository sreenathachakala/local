{"version":3,"file":"4882.af3f5834d14981282996.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./node_modules/brace/mode/lean.js"],"sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DocCommentHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment.doc.tag\",\n            regex : \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n        }, \n        DocCommentHighlightRules.getTagRule(),\n        {\n            defaultToken : \"comment.doc\",\n            caseInsensitive: true\n        }]\n    };\n};\n\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\nDocCommentHighlightRules.getTagRule = function(start) {\n    return {\n        token : \"comment.doc.tag.storage.type\",\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n}\n\nDocCommentHighlightRules.getStartRule = function(start) {\n    return {\n        token : \"comment.doc\", // doc comment\n        regex : \"\\\\/\\\\*(?=\\\\*)\",\n        next  : start\n    };\n};\n\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token : \"comment.doc\", // closing comment\n        regex : \"\\\\*\\\\/\",\n        next  : start\n    };\n};\n\n\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/lean_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar leanHighlightRules = function() {\n\n    var keywordControls = (\n        [ \"add_rewrite\", \"alias\", \"as\", \"assume\", \"attribute\",\n          \"begin\", \"by\", \"calc\", \"calc_refl\", \"calc_subst\", \"calc_trans\", \"check\",\n          \"classes\", \"coercions\", \"conjecture\", \"constants\", \"context\",\n          \"corollary\", \"else\", \"end\", \"environment\", \"eval\", \"example\",\n          \"exists\", \"exit\", \"export\", \"exposing\", \"extends\", \"fields\", \"find_decl\",\n          \"forall\", \"from\", \"fun\", \"have\", \"help\", \"hiding\", \"if\",\n          \"import\", \"in\", \"infix\", \"infixl\", \"infixr\", \"instances\",\n          \"let\", \"local\", \"match\", \"namespace\", \"notation\", \"obtain\", \"obtains\",\n          \"omit\", \"opaque\", \"open\", \"options\", \"parameter\", \"parameters\", \"postfix\",\n          \"precedence\", \"prefix\", \"premise\", \"premises\", \"print\", \"private\", \"proof\",\n          \"protected\", \"qed\", \"raw\", \"renaming\", \"section\", \"set_option\",\n          \"show\", \"tactic_hint\", \"take\", \"then\", \"universe\",\n          \"universes\", \"using\", \"variable\", \"variables\", \"with\"].join(\"|\")\n    );\n\n    var nameProviders = (\n        [\"inductive\", \"structure\", \"record\", \"theorem\", \"axiom\",\n         \"axioms\", \"lemma\", \"hypothesis\", \"definition\", \"constant\"].join(\"|\")\n    );\n\n    var storageType = (\n        [\"Prop\", \"Type\", \"Type'\", \"Type₊\", \"Type₁\", \"Type₂\", \"Type₃\"].join(\"|\")\n    );\n\n    var storageModifiers = (\n        \"\\\\[(\" +\n            [\"abbreviations\", \"all-transparent\", \"begin-end-hints\", \"class\", \"classes\", \"coercion\",\n             \"coercions\", \"declarations\", \"decls\", \"instance\", \"irreducible\",\n             \"multiple-instances\", \"notation\", \"notations\", \"parsing-only\", \"persistent\",\n             \"reduce-hints\", \"reducible\", \"tactic-hints\", \"visible\", \"wf\", \"whnf\"\n            ].join(\"|\") +\n            \")\\\\]\"\n    );\n\n    var keywordOperators = (\n        [].join(\"|\")\n    );\n\n    var keywordMapper = this.$keywords = this.createKeywordMapper({\n        \"keyword.control\" : keywordControls,\n        \"storage.type\" : storageType,\n        \"keyword.operator\" : keywordOperators,\n        \"variable.language\": \"sorry\"\n    }, \"identifier\");\n\n    var identifierRe = \"[A-Za-z_\\u03b1-\\u03ba\\u03bc-\\u03fb\\u1f00-\\u1ffe\\u2100-\\u214f][A-Za-z0-9_'\\u03b1-\\u03ba\\u03bc-\\u03fb\\u1f00-\\u1ffe\\u2070-\\u2079\\u207f-\\u2089\\u2090-\\u209c\\u2100-\\u214f]*\";\n    var operatorRe = new RegExp([\"#\", \"@\", \"->\", \"∼\", \"↔\", \"/\", \"==\", \"=\", \":=\", \"<->\",\n                                 \"/\\\\\", \"\\\\/\", \"∧\", \"∨\", \"≠\", \"<\", \">\", \"≤\", \"≥\", \"¬\",\n                                 \"<=\", \">=\", \"⁻¹\", \"⬝\", \"▸\", \"\\\\+\", \"\\\\*\", \"-\", \"/\",\n                                 \"λ\", \"→\", \"∃\", \"∀\", \":=\"].join(\"|\"));\n\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\", // single line comment \"--\"\n                regex : \"--.*$\"\n            },\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token : \"comment\", // multi line comment \"/-\"\n                regex : \"\\\\/-\",\n                next : \"comment\"\n            }, {\n                stateName: \"qqstring\",\n                token : \"string.start\", regex : '\"', next : [\n                    {token : \"string.end\", regex : '\"', next : \"start\"},\n                    {token : \"constant.language.escape\", regex : /\\\\[n\"\\\\]/},\n                    {defaultToken: \"string\"}\n                ]\n            }, {\n                token : \"keyword.control\", regex : nameProviders, next : [\n                    {token : \"variable.language\", regex : identifierRe, next : \"start\"} ]\n            }, {\n                token : \"constant.numeric\", // hex\n                regex : \"0[xX][0-9a-fA-F]+(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"\n            }, {\n                token : \"storage.modifier\",\n                regex : storageModifiers\n            }, {\n                token : keywordMapper,\n                regex : identifierRe\n            }, {\n                token : \"operator\",\n                regex : operatorRe\n            }, {\n              token : \"punctuation.operator\",\n              regex : \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"comment\" : [ {token: \"comment\", regex: \"-/\", next: \"start\"},\n                      {defaultToken: \"comment\"} ]\n    };\n\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\n    this.normalizeRules();\n};\n\noop.inherits(leanHighlightRules, TextHighlightRules);\n\nexports.leanHighlightRules = leanHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/lean\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/lean_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar leanHighlightRules = acequire(\"./lean_highlight_rules\").leanHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar Range = acequire(\"../range\").Range;\n\nvar Mode = function() {\n    this.HighlightRules = leanHighlightRules;\n\n    this.$outdent = new MatchingBraceOutdent();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"--\";\n    this.blockComment = {start: \"/-\", end: \"-/\"};\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        } else if (state == \"doc-start\") {\n            if (endState == \"start\") {\n                return \"\";\n            }\n            var match = line.match(/^\\s*(\\/?)\\*/);\n            if (match) {\n                if (match[1]) {\n                    indent += \" \";\n                }\n                indent += \"- \";\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/lean\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","this","$rules","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","start","getStartRule","next","getEndRule","leanHighlightRules","keywordControls","join","nameProviders","storageType","storageModifiers","keywordOperators","keywordMapper","$keywords","createKeywordMapper","identifierRe","operatorRe","RegExp","stateName","embedRules","normalizeRules","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","match","getLine","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","TextMode","Mode","HighlightRules","$outdent","lineCommentStart","blockComment","end","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","endState","type","$id"],"sourceRoot":""}