{"version":3,"file":"9695.644d78f7015337d6e661.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./node_modules/brace/mode/scheme.js"],"sourcesContent":["ace.define(\"ace/mode/scheme_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar SchemeHighlightRules = function() {\n    var keywordControl = \"case|do|let|loop|if|else|when\";\n    var keywordOperator = \"eq?|eqv?|equal?|and|or|not|null?\";\n    var constantLanguage = \"#t|#f\";\n    var supportFunctions = \"cons|car|cdr|cond|lambda|lambda*|syntax-rules|format|set!|quote|eval|append|list|list?|member?|load\";\n\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword.control\": keywordControl,\n        \"keyword.operator\": keywordOperator,\n        \"constant.language\": constantLanguage,\n        \"support.function\": supportFunctions\n    }, \"identifier\", true);\n\n    this.$rules = \n        {\n    \"start\": [\n        {\n            token : \"comment\",\n            regex : \";.*$\"\n        },\n        {\n            \"token\": [\"storage.type.function-type.scheme\", \"text\", \"entity.name.function.scheme\"],\n            \"regex\": \"(?:\\\\b(?:(define|define-syntax|define-macro))\\\\b)(\\\\s+)((?:\\\\w|\\\\-|\\\\!|\\\\?)*)\"\n        },\n        {\n            \"token\": \"punctuation.definition.constant.character.scheme\",\n            \"regex\": \"#:\\\\S+\"\n        },\n        {\n            \"token\": [\"punctuation.definition.variable.scheme\", \"variable.other.global.scheme\", \"punctuation.definition.variable.scheme\"],\n            \"regex\": \"(\\\\*)(\\\\S*)(\\\\*)\"\n        },\n        {\n            \"token\" : \"constant.numeric\", // hex\n            \"regex\" : \"#[xXoObB][0-9a-fA-F]+\"\n        }, \n        {\n            \"token\" : \"constant.numeric\", // float\n            \"regex\" : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\"\n        },\n        {\n                \"token\" : keywordMapper,\n                \"regex\" : \"[a-zA-Z_#][a-zA-Z0-9_\\\\-\\\\?\\\\!\\\\*]*\"\n        },\n        {\n            \"token\" : \"string\",\n            \"regex\" : '\"(?=.)',\n            \"next\"  : \"qqstring\"\n        }\n    ],\n    \"qqstring\": [\n        {\n            \"token\": \"constant.character.escape.scheme\",\n            \"regex\": \"\\\\\\\\.\"\n        },\n        {\n            \"token\" : \"string\",\n            \"regex\" : '[^\"\\\\\\\\]+',\n            \"merge\" : true\n        }, {\n            \"token\" : \"string\",\n            \"regex\" : \"\\\\\\\\$\",\n            \"next\"  : \"qqstring\",\n            \"merge\" : true\n        }, {\n            \"token\" : \"string\",\n            \"regex\" : '\"|$',\n            \"next\"  : \"start\",\n            \"merge\" : true\n        }\n    ]\n};\n\n};\n\noop.inherits(SchemeHighlightRules, TextHighlightRules);\n\nexports.SchemeHighlightRules = SchemeHighlightRules;\n});\n\nace.define(\"ace/mode/matching_parens_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingParensOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\)/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\))/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        var match = line.match(/^(\\s+)/);\n        if (match) {\n            return match[1];\n        }\n\n        return \"\";\n    };\n\n}).call(MatchingParensOutdent.prototype);\n\nexports.MatchingParensOutdent = MatchingParensOutdent;\n});\n\nace.define(\"ace/mode/scheme\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/scheme_highlight_rules\",\"ace/mode/matching_parens_outdent\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar SchemeHighlightRules = acequire(\"./scheme_highlight_rules\").SchemeHighlightRules;\nvar MatchingParensOutdent = acequire(\"./matching_parens_outdent\").MatchingParensOutdent;\n\nvar Mode = function() {\n    this.HighlightRules = SchemeHighlightRules;\n\tthis.$outdent = new MatchingParensOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n       \n    this.lineCommentStart = \";\";\n    this.minorIndentFunctions = [\"define\", \"lambda\", \"define-macro\", \"define-syntax\", \"syntax-rules\", \"define-record-type\", \"define-structure\"];\n\n    this.$toIndent = function(str) {\n        return str.split('').map(function(ch) {\n            if (/\\s/.exec(ch)) {\n                return ch;\n            } else {\n                return ' ';\n            }\n        }).join('');\n    };\n\n    this.$calculateIndent = function(line, tab) {\n        var baseIndent = this.$getIndent(line);\n        var delta = 0;\n        var isParen, ch;\n        for (var i = line.length - 1; i >= 0; i--) {\n            ch = line[i];\n            if (ch === '(') {\n                delta--;\n                isParen = true;\n            } else if (ch === '(' || ch === '[' || ch === '{') {\n                delta--;\n                isParen = false;\n            } else if (ch === ')' || ch === ']' || ch === '}') {\n                delta++;\n            }\n            if (delta < 0) {\n                break;\n            }\n        }\n        if (delta < 0 && isParen) {\n            i += 1;\n            var iBefore = i;\n            var fn = '';\n            while (true) {\n                ch = line[i];\n                if (ch === ' ' || ch === '\\t') {\n                    if(this.minorIndentFunctions.indexOf(fn) !== -1) {\n                        return this.$toIndent(line.substring(0, iBefore - 1) + tab);\n                    } else {\n                        return this.$toIndent(line.substring(0, i + 1));\n                    }\n                } else if (ch === undefined) {\n                    return this.$toIndent(line.substring(0, iBefore - 1) + tab);\n                }\n                fn += line[i];\n                i++;\n            }\n        } else if(delta < 0 && !isParen) {\n            return this.$toIndent(line.substring(0, i+1));\n        } else if(delta > 0) {\n            baseIndent = baseIndent.substring(0, baseIndent.length - tab.length);\n            return baseIndent;\n        } else {\n            return baseIndent;\n        }\n    };\n\n    this.getNextLineIndent = function(state, line, tab) {\n        return this.$calculateIndent(line, tab);\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    \n    this.$id = \"ace/mode/scheme\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","SchemeHighlightRules","keywordMapper","this","createKeywordMapper","$rules","token","regex","inherits","Range","MatchingParensOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","match","getLine","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","TextMode","Mode","HighlightRules","$outdent","$behaviour","$defaultBehaviour","lineCommentStart","minorIndentFunctions","$toIndent","str","split","map","ch","exec","join","$calculateIndent","tab","isParen","baseIndent","delta","i","substring","iBefore","fn","indexOf","undefined","getNextLineIndent","state","$id"],"sourceRoot":""}