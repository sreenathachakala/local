{"version":3,"file":"6545.edcf89b1234806601de4.chunk.js","mappings":"6OASA,SAASA,EAAQ,G,IAAEC,EAAM,SAAEC,EAAK,QAAEC,EAAI,OAAEC,EAAW,cAAEC,EAAK,QAAEC,EAAQ,WAAEC,EAAS,YAE7E,OADa,MAAS,SAAa,CAAEC,QAAS,CAACP,GAASQ,KAAM,UAAWP,MAAK,EAAEG,MAAK,IACzEK,KAAK,CACfC,EAAG,WAAM,OACP,gBAAC,KAAsB,K,kBACLV,E,SAAmBC,E,IAF9B,EAKTU,IAAK,KAAwBN,GAC7BO,GAAI,SAAC,G,IAAEC,EAAK,QAAEC,EAAI,OAChB,OAAAD,EACE,gBAAC,MAAkB,WAAK,CAAEC,KAAI,EAAEZ,KAAI,EAAEI,UAAS,EAAEH,YAAW,KAE5D,gBAAC,KAA0B,KAH7B,GAMN,CAEe,SAASY,EAAO,G,IAEjBf,EAAM,sBAERgB,EAAC,WAEHC,EAAS,OAAiB,KAC5B,GAAkC,OAAYD,EAAEE,QAA9C,IAAAC,EAAGlB,OAAK,IAAG,KAAE,EAAEmB,EAAC,IAAKC,GAAM,UAA7B,WACAnB,EAAOkB,GAAKE,SAASF,EAAG,IACxBhB,EAASiB,EAAOjB,OAASkB,SAASD,EAAOjB,MAAO,UAAQmB,EACxDpB,EAAc,eAClB,SAACqB,GACC,OAAAP,EAAKQ,aAAazB,EAAQ,CAAEmB,EAAGlB,EAAOmB,EAAY,IAATI,EAAaA,OAAOD,EAAWnB,MAAK,GAA7E,GACF,CAACa,EAAMjB,EAAQC,EAAOG,IAElBC,EAAWY,EAAKQ,aAAazB,EAAQ,CAAEmB,EAAGlB,EAAOG,OAAQA,GAAS,GAAK,IACvEE,EAAY,SAAa,MAC/B,OACE,gBAAC,IAAK,CAACoB,GAAI,CAAEC,GAAI,EAAGC,GAAI,GAAKC,GAAI,CAAEF,IAAK,EAAGC,GAAI,IAC7C,gBAAC,IAAK,CAACE,SAAS,WAAWC,KAAM,GAAIC,IAAK1B,IAC1C,gBAACP,GAAO,WAAK,CAAEC,OAAM,EAAEC,MAAK,EAAEC,KAAI,EAAEC,YAAW,EAAEC,MAAK,EAAEC,SAAQ,EAAEC,UAAS,KAGjF,C","sources":["webpack://quilt-navigator/./app/embed/Search.js"],"sourcesContent":["import * as React from 'react'\nimport * as M from '@material-ui/core'\n\nimport * as SearchResults from 'components/SearchResults'\nimport * as Data from 'utils/Data'\nimport * as NamedRoutes from 'utils/NamedRoutes'\nimport parseSearch from 'utils/parseSearch'\nimport useSearch from 'utils/search'\n\nfunction Results({ bucket, query, page, makePageUrl, retry, retryUrl, scrollRef }) {\n  const data = Data.use(useSearch(), { buckets: [bucket], mode: 'objects', query, retry })\n  return data.case({\n    _: () => (\n      <SearchResults.Progress>\n        Searching s3://{bucket} for &quot;{query}&quot;\n      </SearchResults.Progress>\n    ),\n    Err: SearchResults.handleErr(retryUrl),\n    Ok: ({ total, hits }) =>\n      total ? (\n        <SearchResults.Hits {...{ hits, page, scrollRef, makePageUrl }} />\n      ) : (\n        <SearchResults.NothingFound />\n      ),\n  })\n}\n\nexport default function Search({\n  match: {\n    params: { bucket },\n  },\n  location: l,\n}) {\n  const { urls } = NamedRoutes.use()\n  const { q: query = '', p, ...params } = parseSearch(l.search)\n  const page = p && parseInt(p, 10)\n  const retry = (params.retry && parseInt(params.retry, 10)) || undefined\n  const makePageUrl = React.useCallback(\n    (newP) =>\n      urls.bucketSearch(bucket, { q: query, p: newP !== 1 ? newP : undefined, retry }),\n    [urls, bucket, query, retry],\n  )\n  const retryUrl = urls.bucketSearch(bucket, { q: query, retry: (retry || 0) + 1 })\n  const scrollRef = React.useRef(null)\n  return (\n    <M.Box pb={{ xs: 0, sm: 5 }} mx={{ xs: -2, sm: 0 }}>\n      <M.Box position=\"relative\" top={-80} ref={scrollRef} />\n      <Results {...{ bucket, query, page, makePageUrl, retry, retryUrl, scrollRef }} />\n    </M.Box>\n  )\n}\n"],"names":["Results","bucket","query","page","makePageUrl","retry","retryUrl","scrollRef","buckets","mode","case","_","Err","Ok","total","hits","Search","l","urls","search","q","p","params","parseInt","undefined","newP","bucketSearch","pb","xs","sm","mx","position","top","ref"],"sourceRoot":""}