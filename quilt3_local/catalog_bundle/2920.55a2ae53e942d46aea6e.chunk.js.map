{"version":3,"file":"2920.55a2ae53e942d46aea6e.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./app/containers/Admin/Form.tsx","webpack://quilt-navigator/./app/containers/Admin/Sync.tsx","webpack://quilt-navigator/./app/utils/MetaTitle.tsx","webpack://quilt-navigator/./app/containers/Admin/Table.js"],"sourcesContent":["import * as React from 'react'\nimport type * as RF from 'react-final-form'\nimport * as M from '@material-ui/core'\n\nexport interface FieldProps {\n  errors: Record<string, React.ReactNode>\n  input: RF.FieldInputProps<string>\n  meta: RF.FieldMetaState<string>\n}\n\n// TODO: re-use components/Form/TextField\nexport function Field({\n  input,\n  meta,\n  errors,\n  helperText,\n  InputLabelProps,\n  ...rest\n}: FieldProps & M.TextFieldProps) {\n  const error = meta.submitFailed && (meta.error || meta.submitError)\n  const props = {\n    error: !!error,\n    helperText: error ? errors[error] || error : helperText,\n    disabled: meta.submitting || meta.submitSucceeded,\n    InputLabelProps: { shrink: true, ...InputLabelProps },\n    ...input,\n    ...rest,\n  }\n  return <M.TextField {...props} />\n}\n\nconst useCheckboxStyles = M.makeStyles({\n  root: {\n    marginBottom: -9,\n    marginTop: -9,\n  },\n})\n\ninterface CheckboxProps {\n  errors?: Record<string, React.ReactNode>\n  input?: RF.FieldInputProps<boolean>\n  meta: RF.FieldMetaState<string | Symbol>\n  label?: string\n  FormControlLabelProps?: M.FormControlLabelProps\n}\n\n// Re-use components/Form/Checkbox\nexport function Checkbox({\n  input = {} as RF.FieldInputProps<boolean>,\n  meta,\n  errors = undefined, // eslint-disable-line @typescript-eslint/no-unused-vars\n  label = undefined,\n  FormControlLabelProps = {} as M.FormControlLabelProps,\n  ...rest\n}: CheckboxProps & M.CheckboxProps) {\n  const classes = useCheckboxStyles()\n  return (\n    <M.FormControlLabel\n      {...FormControlLabelProps}\n      control={\n        <M.Checkbox\n          classes={classes}\n          disabled={meta.submitting || meta.submitSucceeded}\n          {...input}\n          {...rest}\n        />\n      }\n      label={label}\n    />\n  )\n}\n\nconst useFormErrorStyles = M.makeStyles((t) => ({\n  root: {\n    marginTop: t.spacing(3),\n\n    '& a': {\n      textDecoration: 'underline',\n    },\n  },\n}))\n\ninterface FormErrorProps {\n  errors: Record<string, React.ReactNode>\n  error?: string\n}\n\nexport function FormError({\n  error,\n  errors,\n  ...rest\n}: FormErrorProps & M.TypographyProps) {\n  const classes = useFormErrorStyles()\n  if (!error) return null\n  return (\n    <M.Typography color=\"error\" classes={classes} {...rest}>\n      {errors[error] || error}\n    </M.Typography>\n  )\n}\n","import * as FF from 'final-form'\nimport * as R from 'ramda'\nimport * as React from 'react'\nimport * as RF from 'react-final-form'\nimport * as M from '@material-ui/core'\n\nimport MetaTitle from 'utils/MetaTitle'\nimport * as NamedRoutes from 'utils/NamedRoutes'\nimport StyledLink from 'utils/StyledLink'\nimport * as IPC from 'utils/electron/ipc-provider'\nimport * as s3paths from 'utils/s3paths'\nimport * as validators from 'utils/validators'\n\nimport * as Form from './Form'\nimport * as Table from './Table'\n\ntype LocalFolderInputProps = M.TextFieldProps & Form.FieldProps\n\nexport function LocalFolderInput({ input, ...props }: LocalFolderInputProps) {\n  const ipc = IPC.use()\n  const { onChange } = input\n\n  const handleClick = React.useCallback(async () => {\n    const newLocalPath = await ipc.invoke(IPC.EVENTS.LOCALPATH_REQUEST)\n    if (!newLocalPath) return\n    onChange(newLocalPath)\n  }, [ipc, onChange])\n\n  return <Form.Field onClick={handleClick} size=\"small\" input={input} {...props} />\n}\n\ninterface DataRow {\n  id?: string\n  local: string\n  s3: string\n}\n\nfunction useSyncFolders(): [null | DataRow[], () => void] {\n  const ipc = IPC.use()\n  const [key, setKey] = React.useState(1)\n  const inc = React.useCallback(() => setKey(R.inc), [setKey])\n  const [folders, setFolders] = React.useState<null | DataRow[]>(null)\n  React.useEffect(() => {\n    async function fetchData() {\n      const config = await ipc.invoke(IPC.EVENTS.SYNC_FOLDERS_LIST)\n      setFolders(config.folders)\n    }\n\n    fetchData()\n  }, [ipc, key])\n  return [folders, inc]\n}\n\ninterface ConfirmDeletionDialogProps {\n  onCancel: () => void\n  onSubmit: (v: DataRow) => void\n  value: DataRow | null\n}\n\nfunction ConfirmDeletionDialog({\n  onCancel,\n  onSubmit,\n  value,\n}: ConfirmDeletionDialogProps) {\n  const handleSubmit = React.useCallback(() => {\n    if (value) onSubmit(value)\n  }, [onSubmit, value])\n  return (\n    <M.Dialog open={!!value}>\n      <M.DialogTitle>Remove local ⇄ s3 folder pair</M.DialogTitle>\n      <M.DialogContent>\n        Confirm deletion of {value?.local}⇄{value?.s3} sync pair\n      </M.DialogContent>\n      <M.DialogActions>\n        <M.Button onClick={onCancel} color=\"primary\">\n          Cancel\n        </M.Button>\n        <M.Button color=\"primary\" onClick={handleSubmit} variant=\"contained\">\n          Remove\n        </M.Button>\n      </M.DialogActions>\n    </M.Dialog>\n  )\n}\n\ninterface ManageFolderDialogProps {\n  onCancel: () => void\n  onSubmit: (v: DataRow) => void\n  value: Partial<DataRow> | null\n}\n\nfunction ManageFolderDialog({ onCancel, onSubmit, value }: ManageFolderDialogProps) {\n  return (\n    <M.Dialog open={!!value}>\n      <RF.Form onSubmit={onSubmit} initialValues={value}>\n        {({ handleSubmit, submitting, submitFailed, hasValidationErrors }) => (\n          <>\n            <M.DialogTitle>Add local ⇄ s3 folder pair</M.DialogTitle>\n            <M.DialogContent>\n              <RF.Field\n                component={LocalFolderInput}\n                name=\"local\"\n                label=\"Local folder\"\n                placeholder=\"Folder on local file system\"\n                validate={validators.required as FF.FieldValidator<any>}\n                errors={{\n                  required: 'Path to local directory is required',\n                }}\n                fullWidth\n                margin=\"normal\"\n              />\n              <RF.Field\n                component={Form.Field}\n                name=\"s3\"\n                label=\"S3 bucket + Package name\"\n                placeholder=\"s3://bucket/namespace/package\"\n                validate={\n                  validators.composeAnd(\n                    validators.required,\n                    validators.s3Url,\n                  ) as FF.FieldValidator<any>\n                }\n                errors={{\n                  required: 'S3 URL is required',\n                  s3Url: 'Enter valid S3 URL to package',\n                }}\n                fullWidth\n                margin=\"normal\"\n              />\n            </M.DialogContent>\n            <M.DialogActions>\n              <M.Button onClick={onCancel} color=\"primary\" disabled={submitting}>\n                Cancel\n              </M.Button>\n              <M.Button\n                color=\"primary\"\n                disabled={submitting || (submitFailed && hasValidationErrors)}\n                onClick={handleSubmit}\n                variant=\"contained\"\n              >\n                {value ? 'Save' : 'Add'}\n              </M.Button>\n            </M.DialogActions>\n          </>\n        )}\n      </RF.Form>\n    </M.Dialog>\n  )\n}\nconst useTableRowStyles = M.makeStyles({\n  action: {\n    opacity: 0.3,\n    'tr:hover &': {\n      opacity: 1,\n    },\n  },\n})\n\ninterface TableRowProps {\n  onEdit: (v: DataRow) => void\n  onRemove: (v: DataRow) => void\n  row: DataRow\n}\n\nfunction TableRow({ onEdit, onRemove, row }: TableRowProps) {\n  const classes = useTableRowStyles()\n  const { urls } = NamedRoutes.use()\n  const handle = s3paths.parseS3Url(row.s3)\n  const handleRemove = React.useCallback(() => onRemove(row), [onRemove, row])\n  const handleEdit = React.useCallback(() => onEdit(row), [onEdit, row])\n  return (\n    <M.TableRow hover>\n      <M.TableCell>{row.local}</M.TableCell>\n      <M.TableCell>\n        <StyledLink to={urls.bucketPackageDetail(handle.bucket, handle.key)}>\n          {row.s3}\n        </StyledLink>\n      </M.TableCell>\n      <M.TableCell align=\"right\">\n        <M.Tooltip title=\"Remove\">\n          <M.IconButton\n            className={classes.action}\n            aria-label=\"Remove\"\n            onClick={handleRemove}\n          >\n            <M.Icon>delete</M.Icon>\n          </M.IconButton>\n        </M.Tooltip>\n        <M.Tooltip title=\"Edit\">\n          <M.IconButton className={classes.action} aria-label=\"Edit\" onClick={handleEdit}>\n            <M.Icon>edit</M.Icon>\n          </M.IconButton>\n        </M.Tooltip>\n      </M.TableCell>\n    </M.TableRow>\n  )\n}\n\nconst useStyles = M.makeStyles((t) => ({\n  root: {\n    padding: t.spacing(2, 0, 0),\n  },\n}))\n\nexport default function Sync() {\n  const classes = useStyles()\n  const ipc = IPC.use()\n\n  const [selected, setSelected] = React.useState<Partial<DataRow> | null>(null)\n  const [removing, setRemoving] = React.useState<DataRow | null>(null)\n\n  const [folders, inc] = useSyncFolders()\n\n  const toolbarActions = React.useMemo(\n    () =>\n      folders\n        ? [\n            {\n              title: 'Add local ⇄ s3 folder pair',\n              icon: <M.Icon>add</M.Icon>,\n              fn: () => {\n                setSelected({})\n              },\n            },\n          ]\n        : [],\n    [folders],\n  )\n\n  const handleRemove = React.useCallback(\n    async (row: DataRow) => {\n      await ipc.invoke(IPC.EVENTS.SYNC_FOLDERS_REMOVE, row)\n\n      setRemoving(null)\n      inc()\n    },\n    [inc, ipc],\n  )\n\n  const handleEdit = React.useCallback(\n    async (row: DataRow) => {\n      await ipc.invoke(\n        row.id ? IPC.EVENTS.SYNC_FOLDERS_EDIT : IPC.EVENTS.SYNC_FOLDERS_ADD,\n        row,\n      )\n\n      setSelected(null)\n      inc()\n    },\n    [inc, ipc],\n  )\n\n  return (\n    <div className={classes.root}>\n      <MetaTitle>{['Sync Folders', 'Admin']}</MetaTitle>\n\n      <ManageFolderDialog\n        onCancel={() => setSelected(null)}\n        onSubmit={handleEdit}\n        value={selected}\n      />\n\n      <ConfirmDeletionDialog\n        onCancel={() => setRemoving(null)}\n        onSubmit={handleRemove}\n        value={removing}\n      />\n\n      <M.Paper>\n        <Table.Toolbar heading=\"Sync folders\" actions={toolbarActions} />\n        {folders ? (\n          <M.Table size=\"small\">\n            <M.TableHead>\n              <M.TableRow>\n                <M.TableCell>Local folder</M.TableCell>\n                <M.TableCell>S3 folder</M.TableCell>\n                <M.TableCell align=\"right\">Actions</M.TableCell>\n              </M.TableRow>\n            </M.TableHead>\n            <M.TableBody>\n              {folders.map((row) => (\n                <TableRow\n                  key={row.id}\n                  onEdit={setSelected}\n                  onRemove={setRemoving}\n                  row={row}\n                />\n              ))}\n            </M.TableBody>\n          </M.Table>\n        ) : (\n          <Table.Progress />\n        )}\n      </M.Paper>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst BASE = 'Quilt is a versioned data hub for AWS'\n\nconst DIVIDER = ' • '\n\ninterface MetaTitleProps {\n  children?: string | string[]\n  base?: string\n}\n\nfunction getTitleSegments(base: string, children?: string | string[]) {\n  if (!children) return [base]\n\n  if (Array.isArray(children)) return [...children, base]\n\n  return [children, base]\n}\n\nexport function getTitle(base: string, children?: string | string[]) {\n  return getTitleSegments(base, children).join(DIVIDER)\n}\n\nexport default function MetaTitle({ children, base = BASE }: MetaTitleProps) {\n  return (\n    <Helmet>\n      <title>{getTitle(base, children)}</title>\n    </Helmet>\n  )\n}\n","import cx from 'classnames'\nimport * as R from 'ramda'\nimport * as React from 'react'\nimport * as M from '@material-ui/core'\nimport { lighten } from '@material-ui/core/styles/colorManipulator'\n\nimport useMemoEq from 'utils/useMemoEq'\n\nconst changeDirection = (d) => (d === 'asc' ? 'desc' : 'asc')\n\nexport function useOrdering({ rows, ...opts }) {\n  const [column, setColumn] = React.useState(opts.column)\n  const [direction, setDirection] = React.useState(opts.direction || 'asc')\n\n  const sortBy = column.sortBy || column.getValue\n  const sort = React.useMemo(\n    () => R.pipe(R.sortBy(sortBy), direction === 'asc' ? R.identity : R.reverse),\n    [sortBy, direction],\n  )\n\n  const ordered = useMemoEq([sort, rows], () => sort(rows))\n\n  const change = React.useCallback(\n    (newCol) => {\n      if (column !== newCol) {\n        setColumn(newCol)\n        setDirection('asc')\n      } else {\n        setDirection(changeDirection)\n      }\n    },\n    [column, setColumn, setDirection],\n  )\n\n  return { column, direction, change, ordered }\n}\n\nexport const renderAction = (a) =>\n  !a ? null : (\n    <M.Tooltip title={a.title} key={a.title}>\n      <M.IconButton\n        aria-label={a.title}\n        onClick={a.fn}\n        href={a.href}\n        component={a.href ? 'a' : undefined}\n        target={a.href ? '_blank' : undefined}\n      >\n        {a.icon}\n      </M.IconButton>\n    </M.Tooltip>\n  )\n\nconst useToolbarStyles = M.makeStyles((t) => ({\n  root: {\n    paddingRight: t.spacing(1),\n  },\n  highlight:\n    t.palette.type === 'light'\n      ? {\n          color: t.palette.secondary.main,\n          backgroundColor: lighten(t.palette.secondary.light, 0.85),\n        }\n      : {\n          color: t.palette.text.primary,\n          backgroundColor: t.palette.secondary.dark,\n        },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: t.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n}))\n\nexport function Toolbar({ heading, selected = 0, actions = [], selectedActions = [] }) {\n  const classes = useToolbarStyles()\n  return (\n    <M.Toolbar className={cx(classes.root, { [classes.highlight]: selected > 0 })}>\n      <div className={classes.title}>\n        {selected > 0 ? (\n          <M.Typography color=\"inherit\" variant=\"subtitle1\">\n            {selected} selected\n          </M.Typography>\n        ) : (\n          <M.Typography variant=\"h6\">{heading}</M.Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {(selected > 0 ? selectedActions : actions).map(renderAction)}\n      </div>\n    </M.Toolbar>\n  )\n}\n\nexport function Head({\n  columns,\n  selection: sel = undefined,\n  ordering: ord,\n  withInlineActions = false,\n}) {\n  return (\n    <M.TableHead>\n      <M.TableRow>\n        {!!sel && (\n          <M.TableCell padding=\"checkbox\" onClick={sel.toggleAll}>\n            <M.Checkbox\n              indeterminate={sel.selected.size > 0 && sel.selected.size < sel.all.size}\n              checked={sel.selected.equals(sel.all)}\n            />\n          </M.TableCell>\n        )}\n        {columns.map((col) => (\n          <M.TableCell\n            key={col.id}\n            sortDirection={ord.column === col ? ord.direction : false}\n            align={col.align}\n          >\n            {col.sortable === false ? (\n              col.label\n            ) : (\n              <M.Tooltip\n                title={col.hint || 'Sort'}\n                placement=\"bottom-start\"\n                enterDelay={300}\n              >\n                <M.TableSortLabel\n                  active={ord.column === col}\n                  direction={ord.direction}\n                  onClick={() => ord.change(col)}\n                >\n                  {col.label}\n                </M.TableSortLabel>\n              </M.Tooltip>\n            )}\n          </M.TableCell>\n        ))}\n        {withInlineActions && <M.TableCell align=\"right\">Actions</M.TableCell>}\n      </M.TableRow>\n    </M.TableHead>\n  )\n}\n\nconst useWrapperStyles = M.makeStyles({\n  root: {\n    overflowX: 'auto',\n  },\n})\n\nexport function Wrapper({ className = undefined, ...props }) {\n  const classes = useWrapperStyles()\n  return <div className={cx(classes.root, className)} {...props} />\n}\n\nconst useInlineActionsStyles = M.makeStyles((t) => ({\n  root: {\n    opacity: 0.3,\n    paddingRight: t.spacing(1),\n    textAlign: 'right',\n    transition: 'opacity 100ms',\n    whiteSpace: 'nowrap',\n\n    'tr:hover &': {\n      opacity: 1,\n    },\n  },\n}))\n\nexport function InlineActions({ actions = [], children = undefined, ...props }) {\n  const classes = useInlineActionsStyles()\n  return (\n    <div className={classes.root} {...props}>\n      {actions.map(renderAction)}\n      {children}\n    </div>\n  )\n}\n\nconst useProgressStyles = M.makeStyles((t) => ({\n  root: {\n    marginBottom: t.spacing(2),\n    marginLeft: t.spacing(3),\n  },\n}))\n\nexport function Progress(props) {\n  const classes = useProgressStyles()\n  return <M.CircularProgress classes={classes} {...props} />\n}\n\nconst usePaginationStyles = M.makeStyles((t) => ({\n  toolbar: {\n    paddingRight: [t.spacing(1), '!important'],\n  },\n}))\n\nexport function Pagination({ pagination, ...rest }) {\n  const classes = usePaginationStyles()\n  return (\n    <M.TablePagination\n      classes={classes}\n      component=\"div\"\n      count={pagination.total}\n      rowsPerPage={pagination.perPage}\n      page={pagination.page - 1}\n      onChangePage={(e, page) => pagination.goToPage(page + 1)}\n      onChangeRowsPerPage={(e) => pagination.setPerPage(e.target.value)}\n      {...rest}\n    />\n  )\n}\n"],"names":["Field","input","meta","errors","helperText","InputLabelProps","rest","error","submitFailed","submitError","props","disabled","submitting","submitSucceeded","shrink","useCheckboxStyles","root","marginBottom","marginTop","Checkbox","label","undefined","FormControlLabelProps","classes","control","useFormErrorStyles","t","spacing","textDecoration","FormError","color","LocalFolderInput","ipc","onChange","handleClick","invoke","newLocalPath","onClick","size","ConfirmDeletionDialog","onCancel","onSubmit","value","handleSubmit","open","local","s3","variant","ManageFolderDialog","initialValues","hasValidationErrors","component","name","placeholder","validate","required","fullWidth","margin","s3Url","useTableRowStyles","action","opacity","TableRow","onEdit","onRemove","row","urls","handle","handleRemove","handleEdit","hover","to","bucketPackageDetail","bucket","key","align","title","className","useStyles","padding","Sync","selected","setSelected","removing","setRemoving","setKey","inc","folders","setFolders","config","fetchData","useSyncFolders","toolbarActions","icon","fn","id","heading","actions","map","getTitle","base","children","Array","isArray","getTitleSegments","join","MetaTitle","changeDirection","d","useOrdering","rows","opts","column","setColumn","direction","setDirection","sortBy","getValue","sort","ordered","change","newCol","renderAction","a","href","target","useToolbarStyles","paddingRight","highlight","palette","type","secondary","main","backgroundColor","light","text","primary","dark","spacer","flex","Toolbar","selectedActions","Head","columns","selection","sel","ord","withInlineActions","toggleAll","indeterminate","all","checked","equals","col","sortDirection","sortable","hint","placement","enterDelay","active","useWrapperStyles","overflowX","Wrapper","useInlineActionsStyles","textAlign","transition","whiteSpace","InlineActions","useProgressStyles","marginLeft","Progress","usePaginationStyles","toolbar","Pagination","pagination","count","total","rowsPerPage","perPage","page","onChangePage","e","goToPage","onChangeRowsPerPage","setPerPage"],"sourceRoot":""}