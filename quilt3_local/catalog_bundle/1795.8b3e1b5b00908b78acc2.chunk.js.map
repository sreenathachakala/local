{"version":3,"file":"1795.8b3e1b5b00908b78acc2.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./node_modules/brace/mode/red.js"],"sourcesContent":["ace.define(\"ace/mode/red_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar RedHighlightRules = function() {\n\n    var compoundKeywords = \"\";\n\n    this.$rules = {\n        \"start\" : [\n            {token : \"keyword.operator\",\n                regex: /\\s([\\-+%/=<>*]|(?:\\*\\*\\|\\/\\/|==|>>>?|<>|<<|=>|<=|=\\?))(\\s|(?=:))/},\n            {token : \"string.email\", regex : /\\w[-\\w._]*\\@\\w[-\\w._]*/},\n            {token : \"value.time\", regex : /\\b\\d+:\\d+(:\\d+)?/},\n            {token : \"string.url\", regex : /\\w[-\\w_]*\\:(\\/\\/)?\\w[-\\w._]*(:\\d+)?/},\n            {token : \"value.date\", regex : /(\\b\\d{1,4}[-/]\\d{1,2}[-/]\\d{1,2}|\\d{1,2}[-/]\\d{1,2}[-/]\\d{1,4})\\b/},\n            {token : \"value.tuple\", regex : /\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(\\.\\d{1,3}){0,9}/},\n            {token : \"value.pair\", regex: /[+-]?\\d+x[-+]?\\d+/},\n            {token : \"value.binary\", regex : /\\b2#{([01]{8})+}/},\n            {token : \"value.binary\", regex : /\\b64#{([\\w/=+])+}/},\n            {token : \"value.binary\", regex : /(16)?#{([\\dabcdefABCDEF][\\dabcdefABCDEF])*}/},\n            {token : \"value.issue\", regex : /#\\w[-\\w'*.]*/},\n            {token : \"value.numeric\", regex: /[+-]?\\d['\\d]*(?:\\.\\d+)?e[-+]?\\d{1,3}\\%?(?!\\w)/},\n            {token : \"invalid.illegal\", regex: /[+-]?\\d['\\d]*(?:\\.\\d+)?\\%?[a-zA-Z]/},\n            {token : \"value.numeric\", regex: /[+-]?\\d['\\d]*(?:\\.\\d+)?\\%?(?![a-zA-Z])/},\n            {token : \"value.character\", regex : /#\"(\\^[-@/_~^\"HKLM\\[]|.)\"/},\n            {token : \"string.file\", regex : /%[-\\w\\.\\/]+/},\n            {token : \"string.tag\", regex : /</, next : \"tag\"},\n            {token : \"string\", regex : /\"/, next  : \"string\"},\n            {token : \"string.other\", regex : \"{\", next  : \"string.other\"},\n            {token : \"comment\", regex : \"comment [[{]\", next : \"comment\"},\n            {token : \"comment\",  regex : /;.+$/},\n            {token : \"paren.map-start\", regex : \"#\\\\(\"},\n            {token : \"paren.block-start\", regex : \"[\\\\[]\"},\n            {token : \"paren.block-end\", regex : \"[\\\\]]\"},\n            {token : \"paren.parens-start\", regex : \"[(]\"},\n            {token : \"paren.parens-end\", regex : \"\\\\)\"},\n            {token : \"keyword\", regex : \"/local|/external\"},\n            {token : \"keyword.preprocessor\", regex : \"#(if|either|\" +\n                \"switch|case|include|do|macrolocal|reset|process|trace)\"},\n            {token : \"constant.datatype!\", regex :\n                \"(?:datatype|unset|none|logic|block|paren|string|\" +\n                \"file|url|char|integer|float|word|set-word|lit-word|\" +\n                \"get-word|refinement|issue|native|action|op|function|\" +\n                \"path|lit-path|set-path|get-path|routine|bitset|point|\" +\n                \"object|typeset|error|vector|hash|pair|percent|tuple|\" +\n                \"map|binary|time|tag|email|handle|date|image|event|\" +\n                \"series|any-type|number|any-object|scalar|\" +\n                \"any-string|any-word|any-function|any-block|any-list|\" +\n                \"any-path|immediate|all-word|internal|external|default)!(?![-!?\\\\w~])\"},\n            {token : \"keyword.function\", regex :\n                \"\\\\b(?:collect|quote|on-parse-event|math|last|source|expand|\" +\n                \"show|context|object|input|quit|dir|make-dir|cause-error|\" +\n                \"error\\\\?|none\\\\?|block\\\\?|any-list\\\\?|word\\\\?|char\\\\?|\" +\n                \"any-string\\\\?|series\\\\?|binary\\\\?|attempt|url\\\\?|\" +\n                \"string\\\\?|suffix\\\\?|file\\\\?|object\\\\?|body-of|first|\" +\n                \"second|third|mod|clean-path|dir\\\\?|to-red-file|\" +\n                \"normalize-dir|list-dir|pad|empty\\\\?|dirize|offset\\\\?|\" +\n                \"what-dir|expand-directives|load|split-path|change-dir|\" +\n                \"to-file|path-thru|save|load-thru|View|float\\\\?|to-float|\" +\n                \"charset|\\\\?|probe|set-word\\\\?|q|words-of|replace|repend|\" +\n                \"react|function\\\\?|spec-of|unset\\\\?|halt|op\\\\?|\" +\n                \"any-function\\\\?|to-paren|tag\\\\?|routine|class-of|\" +\n                \"size-text|draw|handle\\\\?|link-tabs-to-parent|\" +\n                \"link-sub-to-parent|on-face-deep-change*|\" +\n                \"update-font-faces|do-actor|do-safe|do-events|pair\\\\?|\" +\n                \"foreach-face|hex-to-rgb|issue\\\\?|alter|path\\\\?|\" +\n                \"typeset\\\\?|datatype\\\\?|set-flag|layout|extract|image\\\\?|\" +\n                \"get-word\\\\?|to-logic|to-set-word|to-block|center-face|\" +\n                \"dump-face|request-font|request-file|request-dir|rejoin|\" +\n                \"ellipsize-at|any-block\\\\?|any-object\\\\?|map\\\\?|keys-of|\" +\n                \"a-an|also|parse-func-spec|help-string|what|routine\\\\?|\" +\n                \"action\\\\?|native\\\\?|refinement\\\\?|common-substr|\" +\n                \"red-complete-file|red-complete-path|unview|comment|\\\\?\\\\?|\" +\n                \"fourth|fifth|values-of|bitset\\\\?|email\\\\?|get-path\\\\?|\" +\n                \"hash\\\\?|integer\\\\?|lit-path\\\\?|lit-word\\\\?|logic\\\\?|\" +\n                \"paren\\\\?|percent\\\\?|set-path\\\\?|time\\\\?|tuple\\\\?|date\\\\?|\" +\n                \"vector\\\\?|any-path\\\\?|any-word\\\\?|number\\\\?|immediate\\\\?|\" +\n                \"scalar\\\\?|all-word\\\\?|to-bitset|to-binary|to-char|to-email|\" +\n                \"to-get-path|to-get-word|to-hash|to-integer|to-issue|\" +\n                \"to-lit-path|to-lit-word|to-map|to-none|to-pair|to-path|\" +\n                \"to-percent|to-refinement|to-set-path|to-string|to-tag|\" +\n                \"to-time|to-typeset|to-tuple|to-unset|to-url|to-word|\" +\n                \"to-image|to-date|parse-trace|modulo|eval-set-path|\" +\n                \"extract-boot-args|flip-exe-flag|split|do-file|\" +\n                \"exists-thru\\\\?|read-thru|do-thru|cos|sin|tan|acos|asin|\" +\n                \"atan|atan2|sqrt|clear-reactions|dump-reactions|react\\\\?|\" +\n                \"within\\\\?|overlap\\\\?|distance\\\\?|face\\\\?|metrics\\\\?|\" +\n                \"get-scroller|insert-event-func|remove-event-func|\" +\n                \"set-focus|help|fetch-help|about|ls|ll|pwd|cd|\" +\n                \"red-complete-input|matrix)(?![-!?\\\\w~])\"},\n            {token : \"keyword.action\", regex :\n                \"\\\\b(?:to|remove|copy|insert|change|clear|move|poke|put|\" +\n                \"random|reverse|sort|swap|take|trim|add|subtract|\" +\n                \"divide|multiply|make|reflect|form|mold|modify|\" +\n                \"absolute|negate|power|remainder|round|even\\\\?|odd\\\\?|\" +\n                \"and~|complement|or~|xor~|append|at|back|find|skip|\" +\n                \"tail|head|head\\\\?|index\\\\?|length\\\\?|next|pick|\" +\n                \"select|tail\\\\?|delete|read|write)(?![-_!?\\\\w~])\"\n            },\n            {token : \"keyword.native\", regex :\n                \"\\\\b(?:not|any|set|uppercase|lowercase|checksum|\" +\n                \"try|catch|browse|throw|all|as|\" +\n                \"remove-each|func|function|does|has|do|reduce|\" +\n                \"compose|get|print|prin|equal\\\\?|not-equal\\\\?|\" +\n                \"strict-equal\\\\?|lesser\\\\?|greater\\\\?|lesser-or-equal\\\\?|\" +\n                \"greater-or-equal\\\\?|same\\\\?|type\\\\?|stats|bind|in|parse|\" +\n                \"union|unique|intersect|difference|exclude|\" +\n                \"complement\\\\?|dehex|negative\\\\?|positive\\\\?|max|min|\" +\n                \"shift|to-hex|sine|cosine|tangent|arcsine|arccosine|\" +\n                \"arctangent|arctangent2|NaN\\\\?|zero\\\\?|log-2|log-10|log-e|\" +\n                \"exp|square-root|construct|value\\\\?|as-pair|\" +\n                \"extend|debase|enbase|to-local-file|\" +\n                \"wait|unset|new-line|new-line\\\\?|context\\\\?|set-env|\" +\n                \"get-env|list-env|now|sign\\\\?|call|size\\\\?)(?![-!?\\\\w~])\"\n            },\n            {token : \"keyword\", regex :\n                \"\\\\b(?:Red(?=\\\\s+\\\\[)|object|context|make|self|keep)(?![-!?\\\\w~])\"\n            },\n            {token: \"variable.language\", regex : \"this\"},\n            {token: \"keyword.control\", regex :\n                \"(?:while|if|return|case|unless|either|until|loop|repeat|\" +\n                \"forever|foreach|forall|switch|break|continue|exit)(?![-!?\\\\w~])\"},\n            {token: \"constant.language\", regex :\n                \"\\\\b(?:true|false|on|off|yes|none|no)(?![-!?\\\\w~])\"},\n            {token: \"constant.numeric\", regex : /\\bpi(?![^-_])/},\n            {token: \"constant.character\", regex : \"\\\\b(space|tab|newline|cr|lf)(?![-!?\\\\w~])\"},\n            {token: \"keyword.operator\", regex : \"\\s(or|and|xor|is)\\s\"},\n            {token : \"variable.get-path\", regex : /:\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*/},\n            {token : \"variable.set-path\", regex : /\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*:/},\n            {token : \"variable.lit-path\", regex : /'\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*/},\n            {token : \"variable.path\", regex : /\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*/},\n            {token : \"variable.refinement\", regex : /\\/\\w[-\\w'*.?!]*/},\n            {token : \"keyword.view.style\", regex :\n                \"\\\\b(?:window|base|button|text|field|area|check|\" +\n                \"radio|progress|slider|camera|text-list|\" +\n                \"drop-list|drop-down|panel|group-box|\" +\n                \"tab-panel|h1|h2|h3|h4|h5|box|image|init)(?![-!?\\\\w~])\"},\n            {token : \"keyword.view.event\", regex :\n                \"\\\\b(?:detect|on-detect|time|on-time|drawing|on-drawing|\" +\n                \"scroll|on-scroll|down|on-down|up|on-up|mid-down|\" +\n                \"on-mid-down|mid-up|on-mid-up|alt-down|on-alt-down|\" +\n                \"alt-up|on-alt-up|aux-down|on-aux-down|aux-up|\" +\n                \"on-aux-up|wheel|on-wheel|drag-start|on-drag-start|\" +\n                \"drag|on-drag|drop|on-drop|click|on-click|dbl-click|\" +\n                \"on-dbl-click|over|on-over|key|on-key|key-down|\" +\n                \"on-key-down|key-up|on-key-up|ime|on-ime|focus|\" +\n                \"on-focus|unfocus|on-unfocus|select|on-select|\" +\n                \"change|on-change|enter|on-enter|menu|on-menu|close|\" +\n                \"on-close|move|on-move|resize|on-resize|moving|\" +\n                \"on-moving|resizing|on-resizing|zoom|on-zoom|pan|\" +\n                \"on-pan|rotate|on-rotate|two-tap|on-two-tap|\" +\n                \"press-tap|on-press-tap|create|on-create|created|on-created)(?![-!?\\\\w~])\"},\n            {token : \"keyword.view.option\", regex :\n                \"\\\\b(?:all-over|center|color|default|disabled|down|\" +\n                \"flags|focus|font|font-color|font-name|\" +\n                \"font-size|hidden|hint|left|loose|name|\" +\n                \"no-border|now|rate|react|select|size|space)(?![-!?\\\\w~])\"},\n            {token : \"constant.other.colour\", regex : \"\\\\b(?:Red|white|transparent|\" +\n                \"black|gray|aqua|beige|blue|brick|brown|coal|coffee|\" +\n                \"crimson|cyan|forest|gold|green|ivory|khaki|leaf|linen|\" +\n                \"magenta|maroon|mint|navy|oldrab|olive|orange|papaya|\" +\n                \"pewter|pink|purple|reblue|rebolor|sienna|silver|sky|\" +\n                \"snow|tanned|teal|violet|water|wheat|yello|yellow|glass)(?![-!?\\\\w~])\"},\n            {token : \"variable.get-word\", regex : /\\:\\w[-\\w'*.?!]*/},\n            {token : \"variable.set-word\", regex : /\\w[-\\w'*.?!]*\\:/},\n            {token : \"variable.lit-word\", regex : /'\\w[-\\w'*.?!]*/},\n            {token : \"variable.word\", regex : /\\b\\w+[-\\w'*.!?]*/},\n            {caseInsensitive: true}\n        ],\n        \"string\" : [\n            {token : \"string\", regex : /\"/, next : \"start\"},\n            {defaultToken : \"string\"}\n        ],\n        \"string.other\" : [\n            {token : \"string.other\", regex : /}/, next : \"start\"},\n            {defaultToken : \"string.other\"}\n        ],\n        \"tag\" : [\n            {token : \"string.tag\", regex : />/, next : \"start\"},\n            {defaultToken : \"string.tag\"}\n        ],\n        \"comment\" : [\n            {token : \"comment\", regex : /}/, next : \"start\"},\n            {defaultToken : \"comment\"}\n        ]\n    };\n};\noop.inherits(RedHighlightRules, TextHighlightRules);\n\nexports.RedHighlightRules = RedHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n\n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n\n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n\n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/red\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/red_highlight_rules\",\"ace/mode/folding/cstyle\",\"ace/mode/matching_brace_outdent\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar RedHighlightRules = acequire(\"./red_highlight_rules\").RedHighlightRules;\nvar RedFoldMode = acequire(\"./folding/cstyle\").FoldMode;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar Range = acequire(\"../range\").Range;\n\nvar Mode = function() {\n    this.HighlightRules = RedHighlightRules;\n    this.foldingRules = new RedFoldMode();\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \";\";\n\tthis.blockCommentStart = \"comment {\";\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\[\\(]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        } else if (state == \"doc-start\") {\n            if (endState == \"start\") {\n                return \"\";\n            }\n            var match = line.match(/^\\s*(\\/?)\\*/);\n            if (match) {\n                if (match[1]) {\n                    indent += \" \";\n                }\n                indent += \"* \";\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/red\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","RedHighlightRules","this","$rules","token","regex","next","caseInsensitive","defaultToken","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","match","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","MatchingBraceOutdent","checkOutdent","input","autoOutdent","doc","column","openBracePos","findMatchingBracket","$getIndent","TextMode","Mode","RedFoldMode","HighlightRules","foldingRules","$outdent","$behaviour","$defaultBehaviour","lineCommentStart","blockCommentStart","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","endState","type","$id"],"sourceRoot":""}