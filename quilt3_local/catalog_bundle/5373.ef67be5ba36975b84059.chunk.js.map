{"version":3,"file":"5373.ef67be5ba36975b84059.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./node_modules/brace/mode/asciidoc.js"],"sourcesContent":["ace.define(\"ace/mode/asciidoc_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar AsciidocHighlightRules = function() {\n    var identifierRe = \"[a-zA-Z\\u00a1-\\uffff]+\\\\b\";\n\n    this.$rules = {\n        \"start\": [\n            {token: \"empty\",   regex: /$/},\n            {token: \"literal\", regex: /^\\.{4,}\\s*$/,  next: \"listingBlock\"},\n            {token: \"literal\", regex: /^-{4,}\\s*$/,   next: \"literalBlock\"},\n            {token: \"string\",  regex: /^\\+{4,}\\s*$/,  next: \"passthroughBlock\"},\n            {token: \"keyword\", regex: /^={4,}\\s*$/},\n            {token: \"text\",    regex: /^\\s*$/},\n            {token: \"empty\", regex: \"\", next: \"dissallowDelimitedBlock\"}\n        ],\n\n        \"dissallowDelimitedBlock\": [\n            {include: \"paragraphEnd\"},\n            {token: \"comment\", regex: '^//.+$'},\n            {token: \"keyword\", regex: \"^(?:NOTE|TIP|IMPORTANT|WARNING|CAUTION):\"},\n\n            {include: \"listStart\"},\n            {token: \"literal\", regex: /^\\s+.+$/, next: \"indentedBlock\"},\n            {token: \"empty\",   regex: \"\", next: \"text\"}\n        ],\n\n        \"paragraphEnd\": [\n            {token: \"doc.comment\", regex: /^\\/{4,}\\s*$/,    next: \"commentBlock\"},\n            {token: \"tableBlock\",  regex: /^\\s*[|!]=+\\s*$/, next: \"tableBlock\"},\n            {token: \"keyword\",     regex: /^(?:--|''')\\s*$/, next: \"start\"},\n            {token: \"option\",      regex: /^\\[.*\\]\\s*$/,     next: \"start\"},\n            {token: \"pageBreak\",   regex: /^>{3,}$/,         next: \"start\"},\n            {token: \"literal\",     regex: /^\\.{4,}\\s*$/,     next: \"listingBlock\"},\n            {token: \"titleUnderline\",    regex: /^(?:={2,}|-{2,}|~{2,}|\\^{2,}|\\+{2,})\\s*$/, next: \"start\"},\n            {token: \"singleLineTitle\",   regex: /^={1,5}\\s+\\S.*$/, next: \"start\"},\n\n            {token: \"otherBlock\",    regex: /^(?:\\*{2,}|_{2,})\\s*$/, next: \"start\"},\n            {token: \"optionalTitle\", regex: /^\\.[^.\\s].+$/,  next: \"start\"}\n        ],\n\n        \"listStart\": [\n            {token: \"keyword\",  regex: /^\\s*(?:\\d+\\.|[a-zA-Z]\\.|[ixvmIXVM]+\\)|\\*{1,5}|-|\\.{1,5})\\s/, next: \"listText\"},\n            {token: \"meta.tag\", regex: /^.+(?::{2,4}|;;)(?: |$)/, next: \"listText\"},\n            {token: \"support.function.list.callout\", regex: /^(?:<\\d+>|\\d+>|>) /, next: \"text\"},\n            {token: \"keyword\",  regex: /^\\+\\s*$/, next: \"start\"}\n        ],\n\n        \"text\": [\n            {token: [\"link\", \"variable.language\"], regex: /((?:https?:\\/\\/|ftp:\\/\\/|file:\\/\\/|mailto:|callto:)[^\\s\\[]+)(\\[.*?\\])/},\n            {token: \"link\", regex: /(?:https?:\\/\\/|ftp:\\/\\/|file:\\/\\/|mailto:|callto:)[^\\s\\[]+/},\n            {token: \"link\", regex: /\\b[\\w\\.\\/\\-]+@[\\w\\.\\/\\-]+\\b/},\n            {include: \"macros\"},\n            {include: \"paragraphEnd\"},\n            {token: \"literal\", regex:/\\+{3,}/, next:\"smallPassthrough\"},\n            {token: \"escape\", regex: /\\((?:C|TM|R)\\)|\\.{3}|->|<-|=>|<=|&#(?:\\d+|x[a-fA-F\\d]+);|(?: |^)--(?=\\s+\\S)/},\n            {token: \"escape\", regex: /\\\\[_*'`+#]|\\\\{2}[_*'`+#]{2}/},\n            {token: \"keyword\", regex: /\\s\\+$/},\n            {token: \"text\", regex: identifierRe},\n            {token: [\"keyword\", \"string\", \"keyword\"],\n                regex: /(<<[\\w\\d\\-$]+,)(.*?)(>>|$)/},\n            {token: \"keyword\", regex: /<<[\\w\\d\\-$]+,?|>>/},\n            {token: \"constant.character\", regex: /\\({2,3}.*?\\){2,3}/},\n            {token: \"keyword\", regex: /\\[\\[.+?\\]\\]/},\n            {token: \"support\", regex: /^\\[{3}[\\w\\d =\\-]+\\]{3}/},\n\n            {include: \"quotes\"},\n            {token: \"empty\", regex: /^\\s*$/, next: \"start\"}\n        ],\n\n        \"listText\": [\n            {include: \"listStart\"},\n            {include: \"text\"}\n        ],\n\n        \"indentedBlock\": [\n            {token: \"literal\", regex: /^[\\s\\w].+$/, next: \"indentedBlock\"},\n            {token: \"literal\", regex: \"\", next: \"start\"}\n        ],\n\n        \"listingBlock\": [\n            {token: \"literal\", regex: /^\\.{4,}\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"constant.numeric\", regex: '<\\\\d+>'},\n            {token: \"literal\", regex: '[^<]+'},\n            {token: \"literal\", regex: '<'}\n        ],\n        \"literalBlock\": [\n            {token: \"literal\", regex: /^-{4,}\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"constant.numeric\", regex: '<\\\\d+>'},\n            {token: \"literal\", regex: '[^<]+'},\n            {token: \"literal\", regex: '<'}\n        ],\n        \"passthroughBlock\": [\n            {token: \"literal\", regex: /^\\+{4,}\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"literal\", regex: identifierRe + \"|\\\\d+\"},\n            {include: \"macros\"},\n            {token: \"literal\", regex: \".\"}\n        ],\n\n        \"smallPassthrough\": [\n            {token: \"literal\", regex: /[+]{3,}/, next: \"dissallowDelimitedBlock\"},\n            {token: \"literal\", regex: /^\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"literal\", regex: identifierRe + \"|\\\\d+\"},\n            {include: \"macros\"}\n        ],\n\n        \"commentBlock\": [\n            {token: \"doc.comment\", regex: /^\\/{4,}\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"doc.comment\", regex: '^.*$'}\n        ],\n        \"tableBlock\": [\n            {token: \"tableBlock\", regex: /^\\s*\\|={3,}\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"tableBlock\", regex: /^\\s*!={3,}\\s*$/, next: \"innerTableBlock\"},\n            {token: \"tableBlock\", regex: /\\|/},\n            {include: \"text\", noEscape: true}\n        ],\n        \"innerTableBlock\": [\n            {token: \"tableBlock\", regex: /^\\s*!={3,}\\s*$/, next: \"tableBlock\"},\n            {token: \"tableBlock\", regex: /^\\s*|={3,}\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"tableBlock\", regex: /!/}\n        ],\n        \"macros\": [\n            {token: \"macro\", regex: /{[\\w\\-$]+}/},\n            {token: [\"text\", \"string\", \"text\", \"constant.character\", \"text\"], regex: /({)([\\w\\-$]+)(:)?(.+)?(})/},\n            {token: [\"text\", \"markup.list.macro\", \"keyword\", \"string\"], regex: /(\\w+)(footnote(?:ref)?::?)([^\\s\\[]+)?(\\[.*?\\])?/},\n            {token: [\"markup.list.macro\", \"keyword\", \"string\"], regex: /([a-zA-Z\\-][\\w\\.\\/\\-]*::?)([^\\s\\[]+)(\\[.*?\\])?/},\n            {token: [\"markup.list.macro\", \"keyword\"], regex: /([a-zA-Z\\-][\\w\\.\\/\\-]+::?)(\\[.*?\\])/},\n            {token: \"keyword\",     regex: /^:.+?:(?= |$)/}\n        ],\n\n        \"quotes\": [\n            {token: \"string.italic\", regex: /__[^_\\s].*?__/},\n            {token: \"string.italic\", regex: quoteRule(\"_\")},\n            \n            {token: \"keyword.bold\", regex: /\\*\\*[^*\\s].*?\\*\\*/},\n            {token: \"keyword.bold\", regex: quoteRule(\"\\\\*\")},\n            \n            {token: \"literal\", regex: quoteRule(\"\\\\+\")},\n            {token: \"literal\", regex: /\\+\\+[^+\\s].*?\\+\\+/},\n            {token: \"literal\", regex: /\\$\\$.+?\\$\\$/},\n            {token: \"literal\", regex: quoteRule(\"`\")},\n\n            {token: \"keyword\", regex: quoteRule(\"^\")},\n            {token: \"keyword\", regex: quoteRule(\"~\")},\n            {token: \"keyword\", regex: /##?/},\n            {token: \"keyword\", regex: /(?:\\B|^)``|\\b''/}\n        ]\n\n    };\n\n    function quoteRule(ch) {\n        var prefix = /\\w/.test(ch) ? \"\\\\b\" : \"(?:\\\\B|^)\";\n        return prefix + ch + \"[^\" + ch + \"].*?\" + ch + \"(?![\\\\w*])\";\n    }\n\n    var tokenMap = {\n        macro: \"constant.character\",\n        tableBlock: \"doc.comment\",\n        titleUnderline: \"markup.heading\",\n        singleLineTitle: \"markup.heading\",\n        pageBreak: \"string\",\n        option: \"string.regexp\",\n        otherBlock: \"markup.list\",\n        literal: \"support.function\",\n        optionalTitle: \"constant.numeric\",\n        escape: \"constant.language.escape\",\n        link: \"markup.underline.list\"\n    };\n\n    for (var state in this.$rules) {\n        var stateRules = this.$rules[state];\n        for (var i = stateRules.length; i--; ) {\n            var rule = stateRules[i];\n            if (rule.include || typeof rule == \"string\") {\n                var args = [i, 1].concat(this.$rules[rule.include || rule]);\n                if (rule.noEscape) {\n                    args = args.filter(function(x) {\n                        return !x.next;\n                    });\n                }\n                stateRules.splice.apply(stateRules, args);\n            } else if (rule.token in tokenMap) {\n                rule.token = tokenMap[rule.token];\n            }\n        }\n    }\n};\noop.inherits(AsciidocHighlightRules, TextHighlightRules);\n\nexports.AsciidocHighlightRules = AsciidocHighlightRules;\n});\n\nace.define(\"ace/mode/folding/asciidoc\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    this.foldingStartMarker = /^(?:\\|={10,}|[\\.\\/=\\-~^+]{4,}\\s*$|={1,5} )/;\n    this.singleLineHeadingRe = /^={1,5}(?=\\s+\\S)/;\n\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (!this.foldingStartMarker.test(line))\n            return \"\";\n\n        if (line[0] == \"=\") {\n            if (this.singleLineHeadingRe.test(line))\n                return \"start\";\n            if (session.getLine(row - 1).length != session.getLine(row).length)\n                return \"\";\n            return \"start\";\n        }\n        if (session.bgTokenizer.getState(row) == \"dissallowDelimitedBlock\")\n            return \"end\";\n        return \"start\";\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n        if (!line.match(this.foldingStartMarker))\n            return;\n\n        var token;\n        function getTokenType(row) {\n            token = session.getTokens(row)[0];\n            return token && token.type;\n        }\n\n        var levels = [\"=\",\"-\",\"~\",\"^\",\"+\"];\n        var heading = \"markup.heading\";\n        var singleLineHeadingRe = this.singleLineHeadingRe;\n        function getLevel() {\n            var match = token.value.match(singleLineHeadingRe);\n            if (match)\n                return match[0].length;\n            var level = levels.indexOf(token.value[0]) + 1;\n            if (level == 1) {\n                if (session.getLine(row - 1).length != session.getLine(row).length)\n                    return Infinity;\n            }\n            return level;\n        }\n\n        if (getTokenType(row) == heading) {\n            var startHeadingLevel = getLevel();\n            while (++row < maxRow) {\n                if (getTokenType(row) != heading)\n                    continue;\n                var level = getLevel();\n                if (level <= startHeadingLevel)\n                    break;\n            }\n\n            var isSingleLineHeading = token && token.value.match(this.singleLineHeadingRe);\n            endRow = isSingleLineHeading ? row - 1 : row - 2;\n\n            if (endRow > startRow) {\n                while (endRow > startRow && (!getTokenType(endRow) || token.value[0] == \"[\"))\n                    endRow--;\n            }\n\n            if (endRow > startRow) {\n                var endColumn = session.getLine(endRow).length;\n                return new Range(startRow, startColumn, endRow, endColumn);\n            }\n        } else {\n            var state = session.bgTokenizer.getState(row);\n            if (state == \"dissallowDelimitedBlock\") {\n                while (row -- > 0) {\n                    if (session.bgTokenizer.getState(row).lastIndexOf(\"Block\") == -1)\n                        break;\n                }\n                endRow = row + 1;\n                if (endRow < startRow) {\n                    var endColumn = session.getLine(row).length;\n                    return new Range(endRow, 5, startRow, startColumn - 5);\n                }\n            } else {\n                while (++row < maxRow) {\n                    if (session.bgTokenizer.getState(row) == \"dissallowDelimitedBlock\")\n                        break;\n                }\n                endRow = row;\n                if (endRow > startRow) {\n                    var endColumn = session.getLine(row).length;\n                    return new Range(startRow, 5, endRow, endColumn - 5);\n                }\n            }\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/asciidoc\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/asciidoc_highlight_rules\",\"ace/mode/folding/asciidoc\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar AsciidocHighlightRules = acequire(\"./asciidoc_highlight_rules\").AsciidocHighlightRules;\nvar AsciidocFoldMode = acequire(\"./folding/asciidoc\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = AsciidocHighlightRules;\n    \n    this.foldingRules = new AsciidocFoldMode();    \n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.type = \"text\";\n    this.getNextLineIndent = function(state, line, tab) {\n        if (state == \"listblock\") {\n            var match = /^((?:.+)?)([-+*][ ]+)/.exec(line);\n            if (match) {\n                return new Array(match[1].length + 1).join(\" \") + match[2];\n            } else {\n                return \"\";\n            }\n        } else {\n            return this.$getIndent(line);\n        }\n    };\n    this.$id = \"ace/mode/asciidoc\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","AsciidocHighlightRules","identifierRe","quoteRule","ch","test","this","$rules","token","regex","next","include","noEscape","tokenMap","macro","tableBlock","titleUnderline","singleLineTitle","pageBreak","option","otherBlock","literal","optionalTitle","escape","link","state","stateRules","i","length","rule","args","concat","filter","x","splice","apply","inherits","BaseFoldMode","FoldMode","Range","foldingStartMarker","singleLineHeadingRe","getFoldWidget","session","foldStyle","row","line","getLine","bgTokenizer","getState","getFoldWidgetRange","startColumn","maxRow","getLength","startRow","endRow","match","levels","heading","getTokenType","startHeadingLevel","getLevel","value","endColumn","lastIndexOf","getTokens","type","level","indexOf","Infinity","call","prototype","TextMode","Mode","AsciidocFoldMode","HighlightRules","foldingRules","getNextLineIndent","tab","exec","Array","join","$getIndent","$id"],"sourceRoot":""}