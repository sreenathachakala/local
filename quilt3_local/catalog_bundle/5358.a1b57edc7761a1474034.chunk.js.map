{"version":3,"file":"5358.a1b57edc7761a1474034.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./app/containers/Auth/StrenghtenPasswordField.tsx"],"sourcesContent":["import cx from 'classnames'\nimport * as React from 'react'\nimport * as RF from 'react-final-form'\nimport zxcvbn from 'zxcvbn'\nimport * as M from '@material-ui/core'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\n\nimport * as Layout from './Layout'\n\nconst useStyles = M.makeStyles((t) => ({\n  root: {\n    backgroundColor: t.palette.divider,\n    height: t.spacing(0.5),\n    position: 'relative',\n    transition: '.3s ease background-color',\n    '&:after': {\n      bottom: 0,\n      content: '\"\"',\n      left: 0,\n      position: 'absolute',\n      top: 0,\n      transition: '.3s ease background-color, .3s ease width',\n    },\n    '&$tooGuessable': {\n      backgroundColor: fade(t.palette.error.dark, 0.3),\n    },\n    '&$tooGuessable:after': {\n      backgroundColor: t.palette.error.dark,\n      width: '10%',\n    },\n    '&$veryGuessable': {\n      backgroundColor: fade(t.palette.error.main, 0.3),\n    },\n    '&$veryGuessable:after': {\n      backgroundColor: t.palette.error.main,\n      width: '33%',\n    },\n    '&$somewhatGuessable': {\n      backgroundColor: fade(t.palette.warning.dark, 0.3),\n    },\n    '&$somewhatGuessable:after': {\n      backgroundColor: t.palette.warning.dark,\n      width: '55%',\n    },\n    '&$safelyUnguessable': {\n      backgroundColor: fade(t.palette.success.light, 0.3),\n    },\n    '&$safelyUnguessable:after': {\n      backgroundColor: t.palette.success.light,\n      width: '78%',\n    },\n    '&$veryUnguessable': {\n      backgroundColor: fade(t.palette.success.dark, 0.3),\n    },\n    '&$veryUnguessable:after': {\n      backgroundColor: t.palette.success.dark,\n      width: '100%',\n    },\n  },\n  tooGuessable: {},\n  veryGuessable: {},\n  somewhatGuessable: {},\n  safelyUnguessable: {},\n  veryUnguessable: {},\n}))\n\ntype PasswordStrength = zxcvbn.ZXCVBNResult | null\n\nexport function useStrength(\n  value: string,\n  { email, username }: Record<string, string>,\n): PasswordStrength {\n  return React.useMemo(() => {\n    if (!value) return null\n\n    const inputs = ['quilt', 'quiltdata', 'quiltdata.io']\n    if (email) inputs.push(email)\n    if (username) inputs.push(username)\n\n    const result = zxcvbn(value, inputs)\n\n    if (value.includes('quilt')) {\n      result.feedback.suggestions.push('Avoid using website name in password')\n    }\n    if (value.includes(email)) {\n      result.feedback.suggestions.push('Avoid re-using email in password')\n    }\n    if (value.includes(username)) {\n      result.feedback.suggestions.push('Avoid re-using username in password')\n    }\n\n    return result\n  }, [email, username, value])\n}\n\ninterface IndicatorProps {\n  strength: PasswordStrength\n}\n\ntype ScoreState =\n  | 'tooGuessable'\n  | 'veryGuessable'\n  | 'somewhatGuessable'\n  | 'safelyUnguessable'\n  | 'veryUnguessable'\n\nconst ScoreMap: ScoreState[] = [\n  'tooGuessable',\n  'veryGuessable',\n  'somewhatGuessable',\n  'safelyUnguessable',\n  'veryUnguessable',\n]\n\nexport function Indicator({ strength }: IndicatorProps) {\n  const classes = useStyles()\n  const stateClassName = strength ? classes[ScoreMap[strength.score]] : ''\n  return <div className={cx(classes.root, stateClassName)} />\n}\n\nconst useWeakPasswordIconStyles = M.makeStyles((t) => ({\n  icon: {\n    color: t.palette.warning.dark,\n  },\n}))\n\nfunction WeakPasswordIcon() {\n  const classes = useWeakPasswordIconStyles()\n  return (\n    <M.Tooltip title=\"Password is too weak\">\n      <M.Icon className={classes.icon} fontSize=\"small\" color=\"inherit\">\n        error_outline\n      </M.Icon>\n    </M.Tooltip>\n  )\n}\n\ninterface PasswordFieldProps {\n  errors: Record<string, React.ReactNode>\n  input: RF.FieldInputProps<string>\n  meta: RF.FieldMetaState<string>\n  email: string\n  username: string\n}\n\nexport default function PasswordField({\n  input,\n  email,\n  username,\n  ...rest\n}: PasswordFieldProps) {\n  const { value } = input\n  const strength = useStrength(value, { email, username })\n  const isWeak = Number(strength?.score) <= 2\n  const helperText = strength?.feedback.suggestions.length\n    ? `Hint: ${strength?.feedback.suggestions.join(' ')}`\n    : ''\n  return (\n    <>\n      {/* @ts-expect-error */}\n      <Layout.Field\n        InputProps={{\n          endAdornment: isWeak && (\n            <M.InputAdornment position=\"end\">\n              <WeakPasswordIcon />\n            </M.InputAdornment>\n          ),\n        }}\n        helperText={helperText}\n        type=\"password\"\n        floatingLabelText=\"Password\"\n        {...input}\n        {...rest}\n      />\n      <Indicator strength={strength} />\n    </>\n  )\n}\n"],"names":["useStyles","t","root","backgroundColor","palette","divider","height","spacing","position","transition","bottom","content","left","top","error","dark","width","main","warning","success","light","tooGuessable","veryGuessable","somewhatGuessable","safelyUnguessable","veryUnguessable","useStrength","value","email","username","inputs","push","result","includes","feedback","suggestions","ScoreMap","Indicator","strength","classes","stateClassName","score","className","useWeakPasswordIconStyles","icon","color","WeakPasswordIcon","title","fontSize","PasswordField","input","rest","isWeak","Number","helperText","length","join","InputProps","endAdornment","type","floatingLabelText"],"sourceRoot":""}