{"version":3,"file":"3374.a16681842ead94be36a3.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./app/containers/Admin/Form.tsx","webpack://quilt-navigator/./app/containers/Admin/Settings/ThemeEditor.tsx","webpack://quilt-navigator/./app/containers/Admin/Settings/Settings.tsx","webpack://quilt-navigator/./app/utils/MetaTitle.tsx"],"sourcesContent":["import * as React from 'react'\nimport type * as RF from 'react-final-form'\nimport * as M from '@material-ui/core'\n\nexport interface FieldProps {\n  errors: Record<string, React.ReactNode>\n  input: RF.FieldInputProps<string>\n  meta: RF.FieldMetaState<string>\n}\n\n// TODO: re-use components/Form/TextField\nexport function Field({\n  input,\n  meta,\n  errors,\n  helperText,\n  InputLabelProps,\n  ...rest\n}: FieldProps & M.TextFieldProps) {\n  const error = meta.submitFailed && (meta.error || meta.submitError)\n  const props = {\n    error: !!error,\n    helperText: error ? errors[error] || error : helperText,\n    disabled: meta.submitting || meta.submitSucceeded,\n    InputLabelProps: { shrink: true, ...InputLabelProps },\n    ...input,\n    ...rest,\n  }\n  return <M.TextField {...props} />\n}\n\nconst useCheckboxStyles = M.makeStyles({\n  root: {\n    marginBottom: -9,\n    marginTop: -9,\n  },\n})\n\ninterface CheckboxProps {\n  errors?: Record<string, React.ReactNode>\n  input?: RF.FieldInputProps<boolean>\n  meta: RF.FieldMetaState<string | Symbol>\n  label?: string\n  FormControlLabelProps?: M.FormControlLabelProps\n}\n\n// Re-use components/Form/Checkbox\nexport function Checkbox({\n  input = {} as RF.FieldInputProps<boolean>,\n  meta,\n  errors = undefined, // eslint-disable-line @typescript-eslint/no-unused-vars\n  label = undefined,\n  FormControlLabelProps = {} as M.FormControlLabelProps,\n  ...rest\n}: CheckboxProps & M.CheckboxProps) {\n  const classes = useCheckboxStyles()\n  return (\n    <M.FormControlLabel\n      {...FormControlLabelProps}\n      control={\n        <M.Checkbox\n          classes={classes}\n          disabled={meta.submitting || meta.submitSucceeded}\n          {...input}\n          {...rest}\n        />\n      }\n      label={label}\n    />\n  )\n}\n\nconst useFormErrorStyles = M.makeStyles((t) => ({\n  root: {\n    marginTop: t.spacing(3),\n\n    '& a': {\n      textDecoration: 'underline',\n    },\n  },\n}))\n\ninterface FormErrorProps {\n  errors: Record<string, React.ReactNode>\n  error?: string\n}\n\nexport function FormError({\n  error,\n  errors,\n  ...rest\n}: FormErrorProps & M.TypographyProps) {\n  const classes = useFormErrorStyles()\n  if (!error) return null\n  return (\n    <M.Typography color=\"error\" classes={classes} {...rest}>\n      {errors[error] || error}\n    </M.Typography>\n  )\n}\n","import cx from 'classnames'\nimport * as FF from 'final-form'\nimport * as FP from 'fp-ts'\nimport * as R from 'ramda'\nimport * as React from 'react'\nimport { useDropzone, FileWithPath } from 'react-dropzone'\nimport * as RF from 'react-final-form'\nimport * as M from '@material-ui/core'\n\nimport SubmitSpinner from 'containers/Bucket/PackageDialog/SubmitSpinner'\nimport * as Notifications from 'containers/Notifications'\nimport Logo from 'components/Logo'\nimport * as CatalogSettings from 'utils/CatalogSettings'\nimport * as validators from 'utils/validators'\n\nimport * as Form from '../Form'\n\nconst useInputColorStyles = M.makeStyles((t) => ({\n  root: {\n    alignItems: 'flex-start',\n    display: 'flex',\n    padding: '2px',\n  },\n  input: {\n    flexGrow: 1,\n    textAlign: 'center',\n    marginLeft: t.spacing(2),\n  },\n  picker: {\n    height: '40px',\n    width: '50px',\n  },\n  pickerBlank: {\n    opacity: 0.3,\n    '&:hover': {\n      opacity: 1,\n    },\n  },\n}))\n\ntype InputColorProps = Partial<M.TextFieldProps> & {\n  input: {\n    value: string\n    onChange: (value: string) => void\n  }\n  errors: Record<string, React.ReactNode>\n  meta: RF.FieldMetaState<string>\n}\n\nfunction InputColor({\n  errors,\n  meta,\n  input: { value, onChange },\n  ...props\n}: InputColorProps) {\n  const error = meta.submitFailed && (meta.error || meta.submitError)\n  const classes = useInputColorStyles()\n  const handleChange = React.useCallback(\n    (event) => onChange(event.target.value),\n    [onChange],\n  )\n  const isValidHex = React.useMemo(\n    () => value && value.length === 7 && !validators.hexColor(value),\n    [value],\n  )\n  return (\n    <div className={classes.root}>\n      <input\n        className={cx(classes.picker, { [classes.pickerBlank]: !value })}\n        onChange={handleChange}\n        type=\"color\"\n        value={isValidHex ? value : props.placeholder}\n      />\n      <M.TextField\n        className={classes.input}\n        error={!!error}\n        helperText={error ? errors[error] || error : null}\n        onChange={handleChange}\n        size=\"small\"\n        value={value}\n        variant=\"outlined\"\n        {...props}\n      />\n    </div>\n  )\n}\n\nconst useInputFileStyles = M.makeStyles((t) => ({\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    outline: `2px dashed ${t.palette.primary.light}`,\n    padding: '2px',\n  },\n  note: {\n    flexGrow: 1,\n    textAlign: 'center',\n  },\n  placeholder: {\n    alignItems: 'center',\n    border: `1px solid ${t.palette.action.disabled}`,\n    display: 'flex',\n    height: '50px',\n    justifyContent: 'center',\n    width: '50px',\n  },\n  preview: {\n    height: '50px',\n    width: '50px',\n  },\n}))\n\ninterface InputFileProps {\n  input: {\n    value: FileWithPath | string\n    onChange: (value: FileWithPath) => void\n  }\n}\n\nfunction InputFile({ input: { value, onChange } }: InputFileProps) {\n  const classes = useInputFileStyles()\n  const onDrop = React.useCallback(\n    (files: FileWithPath[]) => {\n      onChange(files[0])\n    },\n    [onChange],\n  )\n  const { getInputProps, getRootProps } = useDropzone({\n    maxFiles: 1,\n    onDrop,\n  })\n  const previewUrl = React.useMemo(() => {\n    if (!value || typeof value === 'string') return null\n    return URL.createObjectURL(value)\n  }, [value])\n  return (\n    <div className={classes.root} {...getRootProps()}>\n      <input {...getInputProps()} />\n      {!!value && typeof value === 'string' && (\n        <Logo src={value} height=\"50px\" width=\"50px\" />\n      )}\n      {!!previewUrl && <img className={classes.preview} src={previewUrl} />}\n      {!value && (\n        <div className={classes.placeholder}>\n          <M.Icon>hide_image</M.Icon>\n        </div>\n      )}\n      <p className={classes.note}>Drop logo here</p>\n    </div>\n  )\n}\n\nconst useThemePreviewStyles = M.makeStyles((t) => ({\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    margin: t.spacing(1, 0, 0),\n  },\n  inner: {\n    ...t.typography.body2,\n    minWidth: '100px',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  logoWrapper: {\n    padding: t.spacing(1),\n    backgroundColor: ({ backgroundColor }: { backgroundColor?: string }) =>\n      backgroundColor || '#282b50',\n    alignItems: 'center',\n    display: 'flex',\n    height: '46px',\n    justifyContent: 'center',\n  },\n  logo: {\n    color: '#fff',\n    maxHeight: '100%',\n    maxWidth: '100%',\n  },\n}))\n\ninterface ThemePreviewProps {}\n\nfunction ThemePreview({}: ThemePreviewProps) {\n  const settings = CatalogSettings.use()\n  const classes = useThemePreviewStyles({\n    backgroundColor: settings?.theme?.palette?.primary?.main,\n  })\n  return (\n    <div className={classes.root}>\n      <div className={cx(classes.inner, classes.logoWrapper)}>\n        {settings?.logo?.url ? (\n          <Logo\n            height=\"46px\"\n            width=\"46px\"\n            className={classes.logo}\n            src={settings?.logo?.url}\n          />\n        ) : (\n          <M.Icon className={classes.logo}>hide_image</M.Icon>\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst useThemeEditorStyles = M.makeStyles((t) => ({\n  actions: {\n    alignItems: 'center',\n    display: 'flex',\n    marginTop: t.spacing(1),\n  },\n  progress: {\n    marginLeft: t.spacing(1),\n  },\n  notConfigured: {\n    ...t.typography.body1,\n    marginRight: t.spacing(2),\n  },\n}))\n\nexport default function ThemeEditor() {\n  const settings = CatalogSettings.use()\n  const writeSettings = CatalogSettings.useWriteSettings()\n  const uploadFile = CatalogSettings.useUploadFile()\n\n  const { push } = Notifications.use()\n\n  const classes = useThemeEditorStyles({\n    backgroundColor: settings?.theme?.palette?.primary?.main,\n  })\n\n  const [editing, setEditing] = React.useState(false)\n  const [formKey, setFormKey] = React.useState(1)\n  const [removing, setRemoving] = React.useState(false)\n\n  const edit = React.useCallback(() => {\n    if (removing) return\n    setEditing(true)\n  }, [removing])\n\n  const cancel = React.useCallback(() => {\n    setEditing(false)\n  }, [])\n\n  const handleExited = React.useCallback(() => {\n    // reset the form\n    setFormKey(R.inc)\n  }, [])\n\n  const remove = React.useCallback(async () => {\n    if (editing || removing || (!settings?.theme && !settings?.logo)) return\n    // XXX: implement custom MUI Dialog-based confirm?\n    // eslint-disable-next-line no-restricted-globals, no-alert\n    if (!window.confirm('You are about to remove custom theme')) return\n    setRemoving(true)\n    try {\n      await writeSettings(FP.function.pipe(settings, R.dissoc('theme'), R.dissoc('logo')))\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error saving settings:')\n      // eslint-disable-next-line no-console\n      console.error(e)\n      push(\"Couldn't save settings, see console for details\")\n    } finally {\n      setRemoving(false)\n    }\n  }, [editing, removing, settings, writeSettings, push])\n\n  const onSubmit = React.useCallback(\n    async (values: { logoUrl: string; primaryColor: string }) => {\n      try {\n        let logoUrl = values?.logoUrl\n        // TODO: check is instance of File explicitly\n        if (logoUrl && typeof logoUrl !== 'string') {\n          logoUrl = await uploadFile(logoUrl)\n        }\n        const updatedSettings = settings || {}\n        if (logoUrl) {\n          updatedSettings.logo = {\n            url: logoUrl,\n          }\n        }\n        if (values.primaryColor) {\n          updatedSettings.theme = {\n            palette: {\n              primary: {\n                main: values.primaryColor,\n              },\n            },\n          }\n        } else {\n          delete updatedSettings.theme\n        }\n        await writeSettings(updatedSettings)\n        setEditing(false)\n        return undefined\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Error saving settings:')\n        // eslint-disable-next-line no-console\n        console.error(e)\n        return { [FF.FORM_ERROR]: \"Couldn't save settings, see console for details\" }\n      }\n    },\n    [settings, writeSettings, uploadFile],\n  )\n\n  // FIXME: remove when file upload would be ready\n  const useThirdPartyDomainForLogo = true\n\n  return (\n    <>\n      {settings?.theme || settings?.logo ? (\n        <>\n          <ThemePreview />\n\n          <div className={classes.actions}>\n            <M.Button\n              variant=\"outlined\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={edit}\n              disabled={removing}\n            >\n              Edit\n            </M.Button>\n            <M.Box pl={1} />\n            <M.Button color=\"primary\" size=\"small\" onClick={remove} disabled={removing}>\n              Remove\n            </M.Button>\n            {removing && <M.CircularProgress size={24} className={classes.progress} />}\n          </div>\n        </>\n      ) : (\n        <>\n          <div className={classes.notConfigured}>Not configured</div>\n          <div className={classes.actions}>\n            <M.Button variant=\"outlined\" color=\"primary\" size=\"small\" onClick={edit}>\n              Configure theme\n            </M.Button>\n          </div>\n        </>\n      )}\n      <M.Dialog open={editing} onExited={handleExited} fullWidth>\n        <RF.Form onSubmit={onSubmit} key={formKey}>\n          {({\n            handleSubmit,\n            submitting,\n            submitFailed,\n            submitError,\n            error,\n            hasValidationErrors,\n          }) => (\n            <>\n              <M.DialogTitle>Configure theme</M.DialogTitle>\n              <M.DialogContent>\n                <form onSubmit={handleSubmit}>\n                  {useThirdPartyDomainForLogo ? (\n                    <RF.Field\n                      component={Form.Field}\n                      initialValue={settings?.logo?.url || ''}\n                      name=\"logoUrl\"\n                      label=\"Logo URL\"\n                      placeholder=\"e.g. https://example.com/path.jpg\"\n                      validate={validators.url as FF.FieldValidator<string>}\n                      errors={{\n                        url: 'Image should be valid url',\n                      }}\n                      disabled={submitting}\n                      fullWidth\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  ) : (\n                    <RF.Field\n                      component={InputFile}\n                      initialValue={settings?.logo?.url || ''}\n                      name=\"logoUrl\"\n                      label=\"Logo URL\"\n                      placeholder=\"e.g. https://example.com/path.jpg\"\n                      validate={\n                        validators.composeOr(\n                          validators.file,\n                          validators.url,\n                        ) as FF.FieldValidator<string>\n                      }\n                      errors={{\n                        url: 'Image should be valid url',\n                        file: 'Image should be file',\n                      }}\n                      disabled={submitting}\n                      fullWidth\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  )}\n                  <M.Box pt={2} />\n                  <RF.Field\n                    // @ts-expect-error\n                    component={InputColor}\n                    initialValue={settings?.theme?.palette?.primary?.main || ''}\n                    name=\"primaryColor\"\n                    label=\"Background color\"\n                    placeholder=\"#282b50\"\n                    validate={validators.hexColor as FF.FieldValidator<string>}\n                    errors={{\n                      hex: 'Enter 6-digit hex color, ex. #282b50',\n                    }}\n                    disabled={submitting}\n                    fullWidth\n                    InputLabelProps={{ shrink: true }}\n                  />\n                  <input type=\"submit\" style={{ display: 'none' }} />\n                </form>\n              </M.DialogContent>\n              <M.DialogActions>\n                {submitting ? (\n                  <SubmitSpinner />\n                ) : (\n                  (!!error || !!submitError) && (\n                    <M.Box flexGrow={1} display=\"flex\" alignItems=\"center\" pl={2}>\n                      <M.Icon color=\"error\">error_outline</M.Icon>\n                      <M.Box pl={1} />\n                      <M.Typography variant=\"body2\" color=\"error\">\n                        {error || submitError}\n                      </M.Typography>\n                    </M.Box>\n                  )\n                )}\n\n                <M.Button onClick={cancel} disabled={submitting}>\n                  Cancel\n                </M.Button>\n                <M.Button\n                  type=\"submit\"\n                  onClick={handleSubmit}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={submitting || (submitFailed && hasValidationErrors)}\n                >\n                  Save\n                </M.Button>\n              </M.DialogActions>\n            </>\n          )}\n        </RF.Form>\n      </M.Dialog>\n    </>\n  )\n}\n","import * as FF from 'final-form'\nimport * as R from 'ramda'\nimport * as React from 'react'\nimport * as RF from 'react-final-form'\nimport * as M from '@material-ui/core'\n\nimport SubmitSpinner from 'containers/Bucket/PackageDialog/SubmitSpinner'\nimport * as Notifications from 'containers/Notifications'\nimport * as CatalogSettings from 'utils/CatalogSettings'\nimport MetaTitle from 'utils/MetaTitle'\nimport * as validators from 'utils/validators'\n\nimport * as Form from '../Form'\nimport ThemeEditor from './ThemeEditor'\n\nfunction useBeta(): [boolean, (b: boolean) => Promise<void>] {\n  const settings = CatalogSettings.use()\n  const writeSettings = CatalogSettings.useWriteSettings()\n  const onChange = React.useCallback(\n    (beta: boolean) =>\n      writeSettings({\n        ...settings,\n        beta,\n      }),\n    [settings, writeSettings],\n  )\n  return [settings?.beta || false, onChange]\n}\n\nfunction BetaSwitch() {\n  const [beta, setBeta] = useBeta()\n  const [value, setValue] = React.useState(beta)\n  const [disabled, setDisabled] = React.useState(false)\n  const handleChange = React.useCallback(\n    async (event, checked) => {\n      setDisabled(true)\n      setValue(checked)\n      await setBeta(checked)\n      setDisabled(false)\n    },\n    [setBeta],\n  )\n  return <M.Switch checked={value} onChange={handleChange} disabled={disabled} />\n}\n\nconst useNavLinkEditorStyles = M.makeStyles((t) => ({\n  actions: {\n    alignItems: 'center',\n    display: 'flex',\n    marginTop: t.spacing(1),\n  },\n  field: {\n    display: 'flex',\n  },\n  fieldName: {\n    ...t.typography.body2,\n    flexShrink: 0,\n    fontWeight: t.typography.fontWeightMedium,\n    width: 50,\n  },\n  fieldValue: {\n    ...t.typography.body2,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  progress: {\n    marginLeft: t.spacing(1),\n  },\n  notConfigured: {\n    ...t.typography.body1,\n    marginRight: t.spacing(2),\n  },\n}))\n\nfunction NavLinkEditor() {\n  const settings = CatalogSettings.use()\n  const writeSettings = CatalogSettings.useWriteSettings()\n\n  const { push } = Notifications.use()\n\n  const classes = useNavLinkEditorStyles()\n\n  const [editing, setEditing] = React.useState(false)\n  const [formKey, setFormKey] = React.useState(1)\n  const [removing, setRemoving] = React.useState(false)\n\n  const edit = React.useCallback(() => {\n    if (removing) return\n    setEditing(true)\n  }, [removing])\n\n  const cancel = React.useCallback(() => {\n    setEditing(false)\n  }, [])\n\n  const handleExited = React.useCallback(() => {\n    // reset the form\n    setFormKey(R.inc)\n  }, [])\n\n  const remove = React.useCallback(async () => {\n    if (editing || removing || !settings?.customNavLink) return\n    // XXX: implement custom MUI Dialog-based confirm?\n    // eslint-disable-next-line no-restricted-globals, no-alert\n    if (!window.confirm('You are about to remove custom link')) return\n    setRemoving(true)\n    try {\n      await writeSettings(R.dissoc('customNavLink', settings))\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error saving settings:')\n      // eslint-disable-next-line no-console\n      console.error(e)\n      push(\"Couldn't save settings, see console for details\")\n    } finally {\n      setRemoving(false)\n    }\n  }, [editing, removing, settings, writeSettings, push])\n\n  const onSubmit = React.useCallback(\n    async (values: { url: string; label: string }) => {\n      try {\n        await writeSettings({\n          ...settings,\n          customNavLink: { url: values.url, label: values.label },\n        })\n        setEditing(false)\n        return undefined\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Error saving settings:')\n        // eslint-disable-next-line no-console\n        console.error(e)\n        return { [FF.FORM_ERROR]: \"Couldn't save settings, see console for details\" }\n      }\n    },\n    [settings, writeSettings],\n  )\n\n  return (\n    <>\n      {settings?.customNavLink ? (\n        <>\n          <div className={classes.field}>\n            <div className={classes.fieldName}>URL:</div>\n            <div className={classes.fieldValue}>{settings.customNavLink.url}</div>\n          </div>\n          <div className={classes.field}>\n            <div className={classes.fieldName}>Label:</div>\n            <div className={classes.fieldValue}>{settings.customNavLink.label}</div>\n          </div>\n          <div className={classes.actions}>\n            <M.Button\n              variant=\"outlined\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={edit}\n              disabled={removing}\n            >\n              Edit\n            </M.Button>\n            <M.Box pl={1} />\n            <M.Button color=\"primary\" size=\"small\" onClick={remove} disabled={removing}>\n              Remove\n            </M.Button>\n            {removing && <M.CircularProgress size={24} className={classes.progress} />}\n          </div>\n        </>\n      ) : (\n        <>\n          <div className={classes.notConfigured}>Not configured</div>\n          <div className={classes.actions}>\n            <M.Button variant=\"outlined\" color=\"primary\" size=\"small\" onClick={edit}>\n              Configure link\n            </M.Button>\n          </div>\n        </>\n      )}\n      <M.Dialog open={editing} onExited={handleExited} fullWidth>\n        <RF.Form onSubmit={onSubmit} key={formKey}>\n          {({\n            handleSubmit,\n            submitting,\n            submitFailed,\n            submitError,\n            error,\n            hasValidationErrors,\n          }) => (\n            <>\n              <M.DialogTitle>Configure custom link</M.DialogTitle>\n              <M.DialogContent>\n                <form onSubmit={handleSubmit}>\n                  <RF.Field\n                    component={Form.Field}\n                    initialValue={settings?.customNavLink?.url || ''}\n                    name=\"url\"\n                    label=\"URL\"\n                    placeholder=\"e.g. https://example.com/path\"\n                    validate={validators.required as FF.FieldValidator<string>}\n                    errors={{\n                      required: 'Enter URL to link to',\n                    }}\n                    disabled={submitting}\n                    fullWidth\n                    InputLabelProps={{ shrink: true }}\n                  />\n                  <M.Box pt={2} />\n                  <RF.Field\n                    component={Form.Field}\n                    initialValue={settings?.customNavLink?.label || ''}\n                    name=\"label\"\n                    label=\"Label\"\n                    placeholder=\"Enter link label\"\n                    validate={validators.required as FF.FieldValidator<string>}\n                    errors={{\n                      required: 'Enter link label',\n                    }}\n                    disabled={submitting}\n                    fullWidth\n                    InputLabelProps={{ shrink: true }}\n                  />\n                  <input type=\"submit\" style={{ display: 'none' }} />\n                </form>\n              </M.DialogContent>\n              <M.DialogActions>\n                {submitting ? (\n                  <SubmitSpinner />\n                ) : (\n                  (!!error || !!submitError) && (\n                    <M.Box flexGrow={1} display=\"flex\" alignItems=\"center\" pl={2}>\n                      <M.Icon color=\"error\">error_outline</M.Icon>\n                      <M.Box pl={1} />\n                      <M.Typography variant=\"body2\" color=\"error\">\n                        {error || submitError}\n                      </M.Typography>\n                    </M.Box>\n                  )\n                )}\n\n                <M.Button onClick={cancel} disabled={submitting}>\n                  Cancel\n                </M.Button>\n                <M.Button\n                  type=\"submit\"\n                  onClick={handleSubmit}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={submitting || (submitFailed && hasValidationErrors)}\n                >\n                  Save\n                </M.Button>\n              </M.DialogActions>\n            </>\n          )}\n        </RF.Form>\n      </M.Dialog>\n    </>\n  )\n}\n\nconst useStyles = M.makeStyles((t) => ({\n  root: {\n    padding: t.spacing(2, 0, 0),\n  },\n  sectionHeading: {\n    marginBottom: t.spacing(1),\n  },\n  group: {\n    padding: t.spacing(2),\n  },\n  title: {\n    margin: t.spacing(0, 0, 2),\n    padding: t.spacing(0, 2),\n  },\n}))\n\nexport default function Settings() {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <MetaTitle>{['Settings', 'Admin']}</MetaTitle>\n      <M.Typography variant=\"h4\" className={classes.title}>\n        Catalog Customization\n      </M.Typography>\n      <M.Grid container spacing={2}>\n        <M.Grid item xs={6}>\n          <M.Paper className={classes.group}>\n            <M.Typography variant=\"h5\" className={classes.sectionHeading}>\n              Navbar link\n            </M.Typography>\n            <React.Suspense fallback={<M.CircularProgress />}>\n              <NavLinkEditor />\n            </React.Suspense>\n          </M.Paper>\n        </M.Grid>\n        <M.Grid item xs={6}>\n          <M.Paper className={classes.group}>\n            <M.Typography variant=\"h5\" className={classes.sectionHeading}>\n              Theme (logo and color)\n            </M.Typography>\n            <React.Suspense fallback={<M.CircularProgress />}>\n              <ThemeEditor />\n            </React.Suspense>\n          </M.Paper>\n        </M.Grid>\n        <M.Grid item xs={6}>\n          <M.Paper className={classes.group}>\n            <M.Typography variant=\"h5\" className={classes.sectionHeading}>\n              Enable beta features\n            </M.Typography>\n            <BetaSwitch />\n          </M.Paper>\n        </M.Grid>\n      </M.Grid>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst BASE = 'Quilt is a versioned data hub for AWS'\n\nconst DIVIDER = ' • '\n\ninterface MetaTitleProps {\n  children?: string | string[]\n  base?: string\n}\n\nfunction getTitleSegments(base: string, children?: string | string[]) {\n  if (!children) return [base]\n\n  if (Array.isArray(children)) return [...children, base]\n\n  return [children, base]\n}\n\nexport function getTitle(base: string, children?: string | string[]) {\n  return getTitleSegments(base, children).join(DIVIDER)\n}\n\nexport default function MetaTitle({ children, base = BASE }: MetaTitleProps) {\n  return (\n    <Helmet>\n      <title>{getTitle(base, children)}</title>\n    </Helmet>\n  )\n}\n"],"names":["Field","input","meta","errors","helperText","InputLabelProps","rest","error","submitFailed","submitError","props","disabled","submitting","submitSucceeded","shrink","useCheckboxStyles","root","marginBottom","marginTop","Checkbox","label","undefined","FormControlLabelProps","classes","control","useFormErrorStyles","t","spacing","textDecoration","FormError","color","useInputColorStyles","alignItems","display","padding","flexGrow","textAlign","marginLeft","picker","height","width","pickerBlank","opacity","InputColor","value","onChange","handleChange","event","target","isValidHex","length","validators","className","type","placeholder","size","variant","outline","palette","primary","light","note","border","action","justifyContent","preview","useThemePreviewStyles","margin","inner","typography","body2","minWidth","overflow","textOverflow","whiteSpace","logoWrapper","backgroundColor","logo","maxHeight","maxWidth","ThemePreview","settings","CatalogSettings","theme","main","url","Logo","src","useThemeEditorStyles","actions","progress","notConfigured","body1","marginRight","ThemeEditor","writeSettings","uploadFile","push","Notifications","editing","setEditing","formKey","setFormKey","removing","setRemoving","edit","cancel","handleExited","remove","window","confirm","console","warn","onSubmit","values","logoUrl","updatedSettings","primaryColor","onClick","pl","open","onExited","fullWidth","key","handleSubmit","hasValidationErrors","component","Form","initialValue","name","validate","pt","hex","style","SubmitSpinner","BetaSwitch","beta","setBeta","setValue","setDisabled","checked","useNavLinkEditorStyles","field","fieldName","flexShrink","fontWeight","fontWeightMedium","fieldValue","NavLinkEditor","customNavLink","required","useStyles","sectionHeading","group","title","Settings","MetaTitle","container","item","xs","fallback","getTitle","base","children","Array","isArray","getTitleSegments","join"],"sourceRoot":""}