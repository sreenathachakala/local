{"version":3,"file":"2641.f47d1c49bcb27566949b.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./app/components/Sparkline/Sparkline.tsx","webpack://quilt-navigator/./app/containers/Bucket/FileProperties.tsx","webpack://quilt-navigator/./app/utils/voila.ts","webpack://quilt-navigator/./app/containers/Bucket/viewModes.ts","webpack://quilt-navigator/./app/utils/format.tsx","webpack://quilt-navigator/./app/containers/Bucket/File.js","webpack://quilt-navigator/./app/containers/Bucket/renderPreview.js","webpack://quilt-navigator/./app/utils/SVG.js"],"sourcesContent":["import * as R from 'ramda'\nimport * as React from 'react'\nimport * as M from '@material-ui/core'\n\nimport * as SVG from 'utils/SVG'\n\ninterface SparklineProps extends M.BoxProps {\n  data: number[]\n  onCursor?: (idx: number | null) => void\n  width?: number\n  height?: number\n  stroke?: $TSFixMe // SVG.Paint\n  fill?: $TSFixMe // SVG.Paint\n  contourThickness?: number\n  contourStroke?: $TSFixMe // SVG.Paint\n  extendL?: boolean\n  extendR?: boolean\n  cursorLineThickness?: number\n  cursorLineExtendUp?: boolean\n  cursorLineExtendDown?: boolean\n  cursorLineStroke?: $TSFixMe // SVG.Paint\n  cursorCircleThickness?: number\n  cursorCircleR?: number\n  cursorCircleFill?: $TSFixMe // SVG.Paint\n  cursorCircleStroke?: $TSFixMe // SVG.Paint\n  padding?: number\n  px?: number\n  py?: number\n  pt?: number\n  pb?: number\n  pl?: number\n  pr?: number\n  boxProps?: M.BoxProps\n}\n\nexport default function Sparkline({\n  data, // PT.arrayOf(PT.number).isRequired,\n  onCursor,\n  width = 200,\n  height = 20,\n  stroke = SVG.Paint.Color('currentColor'),\n  fill = SVG.Paint.None(),\n  contourThickness = 1,\n  contourStroke = stroke,\n  extendL = false,\n  extendR = false,\n  cursorLineThickness = contourThickness,\n  cursorLineExtendUp = true,\n  cursorLineExtendDown = true,\n  cursorLineStroke = stroke,\n  cursorCircleThickness = cursorLineThickness,\n  cursorCircleR = cursorCircleThickness,\n  cursorCircleFill = SVG.Paint.None(),\n  cursorCircleStroke = stroke,\n  padding = 3,\n  px = padding,\n  py = padding,\n  pt = py,\n  pb = py,\n  pl = px,\n  pr = px,\n  boxProps,\n  ...props\n}: SparklineProps) {\n  const [cursor, showCursor] = React.useState<number | null>(null)\n  const hideCursor = React.useCallback(() => showCursor(null), [showCursor])\n\n  const handleMove = React.useCallback(\n    (e: React.MouseEvent) => {\n      const rect = e.currentTarget.getBoundingClientRect()\n      const pos = (e.clientX - rect.x - pl) / (rect.width - pl - pr)\n      const step = 1 / (data.length - 1)\n      const idx = R.clamp(0, data.length - 1, Math.round(pos / step))\n      showCursor(idx)\n      if (onCursor) onCursor(idx)\n    },\n    [showCursor, onCursor, data, pl, pr],\n  )\n\n  const handleLeave = React.useCallback(() => {\n    hideCursor()\n    if (onCursor) onCursor(null)\n  }, [hideCursor, onCursor])\n\n  const contourShape = React.useMemo(() => {\n    const max = Math.max(...data) || 1\n\n    const vfactor = (height - pt - pb) / max\n    const hfactor = (width - pl - pr) / (data.length - 1)\n\n    const dataPoints = data.map((d, i) => ({\n      x: pl + i * hfactor,\n      y: pt + (max - d) * vfactor,\n    }))\n    return [\n      ...(extendL ? [{ ...dataPoints[0], x: 0 }] : []),\n      ...dataPoints,\n      ...(extendR ? [{ ...dataPoints[data.length - 1], x: width }] : []),\n    ]\n  }, [data, width, height, pt, pb, pl, pr, extendR, extendL])\n\n  const contourStrokePaint = SVG.usePaint(contourStroke)\n  const cursorLineStrokePaint = SVG.usePaint(cursorLineStroke)\n  const cursorCircleFillPaint = SVG.usePaint(cursorCircleFill)\n  const cursorCircleStrokePaint = SVG.usePaint(cursorCircleStroke)\n  const fillPaint = SVG.usePaint(fill)\n\n  const fillShape: null | typeof contourShape = React.useMemo(\n    () =>\n      SVG.Paint.case(\n        {\n          None: () => null,\n          _: () => [\n            ...contourShape,\n            { ...contourShape[contourShape.length - 1], y: height },\n            { ...contourShape[0], y: height },\n            contourShape[0],\n          ],\n        },\n        fill,\n      ),\n    [fill, contourShape, height],\n  )\n\n  const cursorPos = cursor === null ? null : contourShape[cursor + (extendL ? 1 : 0)]\n\n  return (\n    <M.Box\n      component=\"svg\"\n      // @ts-expect-error\n      viewBox={`0 0 ${width} ${height}`}\n      onMouseLeave={handleLeave}\n      onMouseMove={handleMove}\n      {...props}\n      {...boxProps}\n    >\n      <defs>\n        {contourStrokePaint.def}\n        {cursorLineStrokePaint.def}\n        {cursorCircleFillPaint.def}\n        {cursorCircleStrokePaint.def}\n        {fillPaint.def}\n      </defs>\n      <g>\n        {fillShape && (\n          <polyline\n            points={SVG.pointsToSVG(fillShape)}\n            fill={fillPaint.ref}\n            pointerEvents=\"auto\"\n            stroke=\"none\"\n            strokeWidth=\"0\"\n          />\n        )}\n        <polyline\n          points={SVG.pointsToSVG(contourShape)}\n          stroke={contourStrokePaint.ref}\n          strokeWidth={contourThickness}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"miter\"\n          fill=\"none\"\n        />\n        {!!cursorPos && !!onCursor && (\n          <g>\n            {(cursorLineExtendUp || cursorLineExtendDown) && (\n              <line\n                x1={cursorPos.x}\n                y1={cursorLineExtendUp ? 0 : cursorPos.y}\n                x2={cursorPos.x}\n                y2={cursorLineExtendDown ? height : cursorPos.y}\n                stroke={cursorLineStrokePaint.ref}\n                strokeWidth={cursorLineThickness}\n              />\n            )}\n            <circle\n              cx={cursorPos.x}\n              cy={cursorPos.y}\n              r={cursorCircleR}\n              stroke={cursorCircleStrokePaint.ref}\n              strokeWidth={cursorCircleThickness}\n              fill={cursorCircleFillPaint.ref}\n            />\n          </g>\n        )}\n      </g>\n    </M.Box>\n  )\n}\n","import cx from 'classnames'\nimport * as dateFns from 'date-fns'\nimport * as React from 'react'\nimport * as M from '@material-ui/core'\n\nimport Skeleton from 'components/Skeleton'\nimport { readableBytes } from 'utils/string'\n\nimport * as requests from './requests'\n\ninterface FilePropertyProps extends M.TypographyProps {\n  children: React.ReactNode\n  className: string\n}\n\nconst useFilePropertyStyles = M.makeStyles((t) => ({\n  root: {\n    alignItems: 'center',\n    display: 'inline-flex',\n  },\n  icon: {\n    color: t.palette.text.hint,\n    fontSize: 16,\n    marginRight: '2px',\n  },\n}))\n\nfunction FileProperty({ className, children, ...props }: FilePropertyProps) {\n  const classes = useFilePropertyStyles()\n  return (\n    <M.Typography\n      className={cx(classes.root, className)}\n      component=\"span\"\n      variant=\"body2\"\n      {...props}\n    >\n      {children}\n    </M.Typography>\n  )\n}\n\nfunction FilePropertiesSkeleton({ className }: { className: string }) {\n  const classes = useFilePropertiesStyles()\n  return (\n    <div className={cx(classes.root, className)}>\n      <Skeleton animate className={classes.property} width=\"80px\" height=\"14px\" />\n      <Skeleton animate className={classes.property} width=\"80px\" height=\"14px\" />\n    </div>\n  )\n}\n\ninterface FilePropertiesProps {\n  data: $TSFixMe\n  className: string\n}\n\nconst useFilePropertiesStyles = M.makeStyles((t) => ({\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  property: {\n    marginLeft: t.spacing(1),\n  },\n}))\n\ninterface FilePropertiesBareProps {\n  className?: string\n  lastModified?: Date\n  size?: number\n}\n\nexport function FileProperties({\n  className,\n  lastModified,\n  size,\n}: FilePropertiesBareProps) {\n  const classes = useFilePropertiesStyles()\n\n  const today = React.useMemo(() => new Date(), [])\n  const formattedDate = React.useMemo(\n    () =>\n      lastModified\n        ? dateFns.format(\n            lastModified,\n            today.getFullYear() === lastModified.getFullYear() ? 'd MMM' : 'd MMM yyyy',\n          )\n        : null,\n    [lastModified, today],\n  )\n  const formattedSize = React.useMemo(() => readableBytes(size), [size])\n\n  return (\n    <div className={cx(classes.root, className)}>\n      {formattedDate && (\n        <FileProperty title={lastModified?.toLocaleString()} className={classes.property}>\n          {formattedDate}\n        </FileProperty>\n      )}\n      <FileProperty className={classes.property}>{formattedSize}</FileProperty>\n    </div>\n  )\n}\n\nexport default function Wrapper({ className, data }: FilePropertiesProps) {\n  const classes = useFilePropertiesStyles()\n  return (\n    <div className={cx(classes.root, className)}>\n      {data.case({\n        Ok: requests.ObjectExistence.case({\n          Exists: ({ lastModified, size }: { lastModified?: Date; size?: number }) => (\n            <FileProperties {...{ className, lastModified, size }} />\n          ),\n          _: () => null,\n        }),\n        Err: (e: Error) => (\n          <M.Icon title={`Fetching object info failed: ${e.message}`} color=\"error\">\n            warning_outline\n          </M.Icon>\n        ),\n        _: () => <FilePropertiesSkeleton className={className} />,\n      })}\n    </div>\n  )\n}\n","import * as Config from 'utils/Config'\nimport * as Cache from 'utils/ResourceCache'\n\nconst VOILA_PING_URL = (registryUrl: string) => `${registryUrl}/voila/`\n\nconst VoilaResource = Cache.createResource({\n  name: 'Voila',\n  persist: true,\n  fetch: (registryUrl: string) =>\n    fetch(VOILA_PING_URL(registryUrl))\n      .then((resp) => resp.ok)\n      .catch(() => false)\n      .then((r) => {\n        if (!r) {\n          // eslint-disable-next-line no-console\n          console.debug('Voila is not supported by current stack')\n          // TODO: add link to documentation\n        }\n        return r\n      }),\n})\n\nexport function useVoila(): boolean {\n  const { registryUrl } = Config.use()\n  return Cache.useData(VoilaResource, registryUrl, { suspend: true })\n}\n\nexport { useVoila as use }\n","import { extname } from 'path'\nimport * as React from 'react'\n\n// NOTE: module imported selectively because Preview's deps break unit-tests\nimport { PreviewData } from 'components/Preview/types'\nimport type { ValueBase as SelectOption } from 'components/SelectDropdown'\nimport AsyncResult from 'utils/AsyncResult'\nimport { useVoila } from 'utils/voila'\nimport { PackageHandle } from 'utils/packageHandle'\nimport { JsonRecord } from 'utils/types'\n\nconst MODES = {\n  igv: 'IGV',\n  json: 'JSON',\n  jupyter: 'Jupyter',\n  vega: 'Vega',\n  voila: 'Voila',\n}\n\nexport type ViewMode = keyof typeof MODES\n\nconst isIgvTracks = (json: JsonRecord) => Array.isArray(json?.tracks)\n\nconst isVegaSchema = (schema: string) => {\n  if (!schema) return false\n  return !!schema.match(/https:\\/\\/vega\\.github\\.io\\/schema\\/([\\w-]+)\\/([\\w.-]+)\\.json/)\n}\n\nexport function viewModeToSelectOption(m: ViewMode): SelectOption\nexport function viewModeToSelectOption(m: null): null\nexport function viewModeToSelectOption(m: ViewMode | null): SelectOption | null {\n  return (\n    m && {\n      toString: () => MODES[m],\n      valueOf: () => m,\n    }\n  )\n}\n\nexport function useViewModes(\n  path: string,\n  modeInput: string | null | undefined,\n  // XXX: consider using a plain boolean here since the contents of this object are unused\n  packageHandle?: PackageHandle,\n) {\n  const voilaAvailable = useVoila()\n  const [previewResult, setPreviewResult] = React.useState(null)\n\n  const handlePreviewResult = React.useCallback(\n    (result) => {\n      if (!previewResult && AsyncResult.Ok.is(result)) {\n        setPreviewResult(AsyncResult.Ok.unbox(result))\n      }\n    },\n    [previewResult, setPreviewResult],\n  )\n\n  const modes: ViewMode[] = React.useMemo(() => {\n    // TODO: add MODES here\n    switch (extname(path)) {\n      case '.ipynb':\n        return !!packageHandle && voilaAvailable\n          ? ['jupyter', 'json', 'voila']\n          : ['jupyter', 'json']\n      case '.json':\n        return PreviewData.case(\n          {\n            Vega: (json: any) =>\n              isVegaSchema(json.spec?.$schema) ? ['vega', 'json'] : [],\n            Json: (json: any) => {\n              if (isVegaSchema(json.rendered?.$schema)) return ['vega', 'json']\n              if (isIgvTracks(json.rendered)) return ['json', 'igv']\n              return []\n            },\n            _: () => [],\n            __: () => [],\n          },\n          previewResult,\n        )\n      default:\n        return []\n    }\n  }, [path, packageHandle, previewResult, voilaAvailable])\n\n  const mode = (\n    modes.includes(modeInput as any) ? modeInput : modes[0] || null\n  ) as ViewMode | null\n\n  return { modes, mode, handlePreviewResult }\n}\n","import * as React from 'react'\n\nconst MINUTE = 1000 * 60\nconst HOUR = MINUTE * 60\nconst DAY = HOUR * 24\nconst MONTH = DAY * 30\nconst YEAR = DAY * 365\n\nconst intl = new Intl.RelativeTimeFormat('en', { numeric: 'auto' })\n\nexport function relativify(date: Date, baseDate?: Date) {\n  const delta = date.valueOf() - (baseDate?.valueOf() || Date.now())\n\n  const years = delta / YEAR\n  if (Math.abs(years) >= 1) return intl.format(Math.round(years), 'year')\n\n  const months = delta / MONTH\n  if (Math.abs(months) >= 1) return intl.format(Math.round(months), 'month')\n\n  const days = delta / DAY\n  if (Math.abs(days) >= 1) return intl.format(Math.round(days), 'day')\n\n  const hours = delta / HOUR\n  if (Math.abs(hours) >= 1) return intl.format(Math.round(hours), 'hour')\n\n  const minutes = delta / MINUTE\n  if (Math.abs(minutes) >= 1) return intl.format(Math.round(minutes), 'minute')\n\n  return intl.format(Math.round(delta / 1000), 'second')\n}\n\ninterface RelativeProps {\n  value: Date\n}\n\nexport function Relative({ value }: RelativeProps) {\n  const [t, setT] = React.useState(new Date())\n\n  React.useEffect(() => {\n    const timerId = window.setInterval(() => setT(new Date()), 1000)\n    return () => clearInterval(timerId)\n  }, [value])\n\n  // return a Fragment to overcome a typing limitation:\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20544\n  return React.useMemo(() => <>{relativify(value, t)}</>, [value, t])\n}\n\ninterface Rules {\n  zero?: string | ((v: number) => string)\n  one?: string | ((v: number) => string)\n  // NOTE: we don't need it yet and, maybe, never\n  // two?: (v: number) => string\n  // few?: (v: number) => string\n  // many?: (v: number) => string\n  other: string | ((v: number) => string)\n}\n\nfunction numberToRule(value: number) {\n  switch (value) {\n    case 0:\n      return 'zero'\n    case 1:\n      return 'one'\n    // NOTE: we don't need it yet and, maybe, never\n    // 2,3,4,22,23... return 'few'\n    // 5,6,...11,12... return 'many'\n    default:\n      return 'other'\n  }\n}\n\nexport function pluralify(value: number, rules: Rules) {\n  const intlFunc = rules[numberToRule(value)]\n  if (intlFunc) return typeof intlFunc === 'function' ? intlFunc(value) : intlFunc\n  return typeof rules.other === 'function' ? rules.other(value) : rules.other\n}\n\ninterface PluralProps extends Rules {\n  value: number\n}\n\nexport function Plural({ value, zero, one, other }: PluralProps) {\n  // return a Fragment to overcome a typing limitation:\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20544\n  return React.useMemo(\n    () => <>{pluralify(value, { zero, one, other })}</>,\n    [value, zero, one, other],\n  )\n}\n","import { basename } from 'path'\n\nimport * as dateFns from 'date-fns'\nimport dedent from 'dedent'\nimport * as R from 'ramda'\nimport * as React from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport * as M from '@material-ui/core'\n\nimport { Crumb, copyWithoutSpaces, render as renderCrumbs } from 'components/BreadCrumbs'\nimport * as FileEditor from 'components/FileEditor'\nimport Message from 'components/Message'\nimport * as Preview from 'components/Preview'\nimport Sparkline from 'components/Sparkline'\nimport * as Bookmarks from 'containers/Bookmarks'\nimport * as Notifications from 'containers/Notifications'\nimport * as AWS from 'utils/AWS'\nimport AsyncResult from 'utils/AsyncResult'\nimport * as BucketPreferences from 'utils/BucketPreferences'\nimport * as Config from 'utils/Config'\nimport { useData } from 'utils/Data'\nimport MetaTitle from 'utils/MetaTitle'\nimport * as NamedRoutes from 'utils/NamedRoutes'\nimport * as SVG from 'utils/SVG'\nimport { linkStyle } from 'utils/StyledLink'\nimport copyToClipboard from 'utils/clipboard'\nimport * as Format from 'utils/format'\nimport parseSearch from 'utils/parseSearch'\nimport { getBreadCrumbs, up, decode, handleToHttpsUri } from 'utils/s3paths'\nimport { readableBytes, readableQuantity } from 'utils/string'\n\nimport Code from './Code'\nimport FileProperties from './FileProperties'\nimport * as FileView from './FileView'\nimport Section from './Section'\nimport renderPreview from './renderPreview'\nimport * as requests from './requests'\nimport { useViewModes, viewModeToSelectOption } from './viewModes'\n\nconst getCrumbs = ({ bucket, path, urls }) =>\n  R.chain(\n    ({ label, path: segPath }) => [\n      Crumb.Segment({ label, to: urls.bucketDir(bucket, segPath) }),\n      Crumb.Sep(<>&nbsp;/ </>),\n    ],\n    [{ label: bucket, path: '' }, ...getBreadCrumbs(up(path))],\n  )\n\nconst useVersionInfoStyles = M.makeStyles(({ typography }) => ({\n  version: {\n    ...linkStyle,\n    alignItems: 'center',\n    display: 'inline-flex',\n  },\n  mono: {\n    fontFamily: typography.monospace.fontFamily,\n  },\n  list: {\n    maxWidth: '100%',\n    width: 420,\n  },\n}))\n\nfunction VersionInfo({ bucket, path, version }) {\n  const s3 = AWS.S3.use()\n  const { urls } = NamedRoutes.use()\n  const cfg = Config.use()\n  const { push } = Notifications.use()\n\n  const containerRef = React.useRef()\n  const [anchor, setAnchor] = React.useState()\n  const [opened, setOpened] = React.useState(false)\n  const open = React.useCallback(() => setOpened(true), [])\n  const close = React.useCallback(() => setOpened(false), [])\n\n  const classes = useVersionInfoStyles()\n\n  const getHttpsUri = (v) => handleToHttpsUri({ bucket, key: path, version: v.id })\n  const getCliArgs = (v) => `--bucket ${bucket} --key \"${path}\" --version-id ${v.id}`\n\n  const copyHttpsUri = (v) => (e) => {\n    e.preventDefault()\n    copyToClipboard(getHttpsUri(v), { container: containerRef.current })\n    push('HTTPS URI copied to clipboard')\n  }\n\n  const copyCliArgs = (v) => (e) => {\n    e.preventDefault()\n    copyToClipboard(getCliArgs(v), { container: containerRef.current })\n    push('Object location copied to clipboard')\n  }\n\n  const data = useData(requests.objectVersions, { s3, bucket, path })\n\n  return (\n    <>\n      {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */}\n      <span className={classes.version} onClick={open} ref={setAnchor}>\n        {version ? (\n          <span className={classes.mono}>{version.substring(0, 12)}</span>\n        ) : (\n          'latest'\n        )}{' '}\n        <M.Icon>expand_more</M.Icon>\n      </span>\n      <M.Popover\n        open={opened && !!anchor}\n        anchorEl={anchor}\n        onClose={close}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n      >\n        {data.case({\n          Ok: (versions) => (\n            <M.List className={classes.list} ref={containerRef}>\n              {versions.map((v) => (\n                <M.ListItem\n                  key={v.id}\n                  button\n                  onClick={close}\n                  selected={version ? v.id === version : v.isLatest}\n                  component={Link}\n                  to={urls.bucketFile(bucket, path, { version: v.id })}\n                >\n                  <M.ListItemText\n                    primary={\n                      <span>\n                        <Format.Relative value={v.lastModified} />\n                        {v.isLatest && ' (latest)'}\n                        {' | '}\n                        {v.size != null ? readableBytes(v.size) : 'Delete Marker'}\n                      </span>\n                    }\n                    secondary={\n                      <span>\n                        {v.lastModified.toLocaleString()}\n                        <br />\n                        <span className={classes.mono}>{v.id}</span>\n                      </span>\n                    }\n                  />\n                  {!cfg.noDownload && (\n                    <M.ListItemSecondaryAction>\n                      {!v.deleteMarker &&\n                        !v.archived &&\n                        AWS.Signer.withDownloadUrl(\n                          { bucket, key: path, version: v.id },\n                          (url) => (\n                            <M.IconButton\n                              href={url}\n                              title=\"Download this version of the object\"\n                            >\n                              <M.Icon>arrow_downward</M.Icon>\n                            </M.IconButton>\n                          ),\n                        )}\n                      <M.Hidden xsDown>\n                        <M.IconButton\n                          title=\"Copy object version's canonical HTTPS URI to the clipboard\"\n                          href={getHttpsUri(v)}\n                          onClick={copyHttpsUri(v)}\n                        >\n                          <M.Icon>link</M.Icon>\n                        </M.IconButton>\n                        <M.IconButton\n                          title=\"Copy object location in CLI format (aws s3api) to the clipboard\"\n                          onClick={copyCliArgs(v)}\n                        >\n                          <M.Box\n                            fontSize={20}\n                            height={24}\n                            width={24}\n                            lineHeight={24 / 20}\n                            display=\"flex\"\n                            justifyContent=\"center\"\n                          >\n                            S3\n                          </M.Box>\n                        </M.IconButton>\n                      </M.Hidden>\n                    </M.ListItemSecondaryAction>\n                  )}\n                </M.ListItem>\n              ))}\n            </M.List>\n          ),\n          Err: () => (\n            <M.List>\n              <M.ListItem>\n                <M.ListItemIcon>\n                  <M.Icon>error</M.Icon>\n                </M.ListItemIcon>\n                <M.Typography variant=\"body1\">Error fetching versions</M.Typography>\n              </M.ListItem>\n            </M.List>\n          ),\n          _: () => (\n            <M.List>\n              <M.ListItem>\n                <M.ListItemIcon>\n                  <M.CircularProgress size={24} />\n                </M.ListItemIcon>\n                <M.Typography variant=\"body1\">Fetching versions</M.Typography>\n              </M.ListItem>\n            </M.List>\n          ),\n        })}\n      </M.Popover>\n    </>\n  )\n}\n\nfunction Meta({ bucket, path, version }) {\n  const s3 = AWS.S3.use()\n  const data = useData(requests.objectMeta, { s3, bucket, path, version })\n  return <FileView.ObjectMeta data={data.result} />\n}\n\nfunction Analytics({ analyticsBucket, bucket, path }) {\n  const [cursor, setCursor] = React.useState(null)\n  const s3 = AWS.S3.use()\n  const today = React.useMemo(() => new Date(), [])\n  const formatDate = (date) =>\n    dateFns.format(\n      date,\n      today.getFullYear() === date.getFullYear() ? 'd MMM' : 'd MMM yyyy',\n    )\n  const data = useData(requests.objectAccessCounts, {\n    s3,\n    analyticsBucket,\n    bucket,\n    path,\n    today,\n  })\n\n  const defaultExpanded = data.case({\n    Ok: ({ total }) => !!total,\n    _: () => false,\n  })\n\n  return (\n    <Section icon=\"bar_charts\" heading=\"Analytics\" defaultExpanded={defaultExpanded}>\n      {data.case({\n        Ok: ({ counts, total }) =>\n          total ? (\n            <M.Box\n              display=\"flex\"\n              width=\"100%\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n            >\n              <M.Box>\n                <M.Typography variant=\"h5\">Downloads</M.Typography>\n                <M.Typography variant=\"h4\" component=\"div\">\n                  {readableQuantity(cursor === null ? total : counts[cursor].value)}\n                </M.Typography>\n                <M.Typography variant=\"overline\" component=\"span\">\n                  {cursor === null\n                    ? `${counts.length} days`\n                    : formatDate(counts[cursor].date)}\n                </M.Typography>\n              </M.Box>\n              <M.Box width=\"calc(100% - 7rem)\">\n                <Sparkline\n                  data={R.pluck('value', counts)}\n                  onCursor={setCursor}\n                  width={1000}\n                  height={60}\n                  stroke={SVG.Paint.Server(\n                    <linearGradient x2=\"0\" y2=\"100%\" gradientUnits=\"userSpaceOnUse\">\n                      <stop offset=\"0\" stopColor={M.colors.blueGrey[800]} />\n                      <stop offset=\"100%\" stopColor={M.colors.blueGrey[100]} />\n                    </linearGradient>,\n                  )}\n                />\n              </M.Box>\n            </M.Box>\n          ) : (\n            <M.Typography>No analytics available</M.Typography>\n          ),\n        Err: () => <M.Typography>No analytics available</M.Typography>,\n        _: () => <M.CircularProgress />,\n      })}\n    </Section>\n  )\n}\n\nfunction CenteredProgress() {\n  return (\n    <M.Box textAlign=\"center\" width=\"100%\">\n      <M.CircularProgress />\n    </M.Box>\n  )\n}\n\nconst useStyles = M.makeStyles((t) => ({\n  actions: {\n    alignItems: 'center',\n    display: 'flex',\n    marginLeft: 'auto',\n  },\n  at: {\n    color: t.palette.text.secondary,\n  },\n  button: {\n    marginLeft: t.spacing(2),\n  },\n  crumbs: {\n    ...t.typography.body1,\n    maxWidth: '100%',\n    overflowWrap: 'break-word',\n  },\n  fileProperties: {\n    marginTop: '2px',\n  },\n  name: {\n    ...t.typography.body1,\n    maxWidth: 'calc(100% - 160px)',\n    overflowWrap: 'break-word',\n    [t.breakpoints.down('xs')]: {\n      maxWidth: 'calc(100% - 40px)',\n    },\n  },\n  topBar: {\n    alignItems: 'flex-end',\n    display: 'flex',\n    marginBottom: t.spacing(2),\n  },\n}))\n\nexport default function File({\n  match: {\n    params: { bucket, path: encodedPath },\n  },\n  location,\n}) {\n  const { version, mode } = parseSearch(location.search)\n  const classes = useStyles()\n  const { urls } = NamedRoutes.use()\n  const history = useHistory()\n  const { analyticsBucket, noDownload } = Config.use()\n  const s3 = AWS.S3.use()\n  const { preferences } = BucketPreferences.use()\n\n  const path = decode(encodedPath)\n\n  const code = React.useMemo(\n    () => [\n      {\n        label: 'Python',\n        hl: 'python',\n        contents: dedent`\n          import quilt3 as q3\n          b = q3.Bucket(\"s3://${bucket}\")\n          b.fetch(\"${path}\", \"./${basename(path)}\")\n        `,\n      },\n      {\n        label: 'CLI',\n        hl: 'bash',\n        contents: dedent`\n          aws s3 cp \"s3://${bucket}/${path}\" .\n        `,\n      },\n    ],\n    [bucket, path],\n  )\n\n  const [resetKey, setResetKey] = React.useState(0)\n  const objExistsData = useData(requests.getObjectExistence, {\n    s3,\n    bucket,\n    key: path,\n    resetKey,\n  })\n  const versionExistsData = useData(requests.getObjectExistence, {\n    s3,\n    bucket,\n    key: path,\n    version,\n    resetKey,\n  })\n\n  const objExists = objExistsData.case({\n    _: () => false,\n    Ok: requests.ObjectExistence.case({\n      Exists: () => true,\n      _: () => false,\n    }),\n  })\n\n  const { downloadable, fileVersionId } = versionExistsData.case({\n    _: () => ({\n      downloadable: false,\n    }),\n    Ok: requests.ObjectExistence.case({\n      _: () => ({\n        downloadable: false,\n      }),\n      Exists: ({ deleted, archived, version: versionId }) => ({\n        downloadable: !noDownload && !deleted && !archived,\n        fileVersionId: versionId,\n      }),\n    }),\n  })\n\n  const viewModes = useViewModes(path, mode)\n\n  const onViewModeChange = React.useCallback(\n    (m) => {\n      history.push(urls.bucketFile(bucket, encodedPath, { version, mode: m.valueOf() }))\n    },\n    [history, urls, bucket, encodedPath, version],\n  )\n\n  const handle = React.useMemo(\n    () => ({ bucket, key: path, version: fileVersionId }),\n    [bucket, path, fileVersionId],\n  )\n\n  const editorState = FileEditor.useState(handle)\n  const onSave = editorState.onSave\n  const handleEditorSave = React.useCallback(async () => {\n    await onSave()\n    setResetKey(R.inc)\n  }, [onSave])\n\n  const previewOptions = React.useMemo(\n    () => ({ context: Preview.CONTEXT.FILE, mode: viewModes.mode }),\n    [viewModes.mode],\n  )\n\n  const withPreview = (callback) =>\n    requests.ObjectExistence.case({\n      Exists: (h) => {\n        if (h.deleted) {\n          return callback(AsyncResult.Err(Preview.PreviewError.Deleted({ handle })))\n        }\n        if (h.archived) {\n          return callback(AsyncResult.Err(Preview.PreviewError.Archived({ handle })))\n        }\n        return Preview.load(handle, callback, previewOptions)\n      },\n      DoesNotExist: () =>\n        callback(AsyncResult.Err(Preview.PreviewError.InvalidVersion({ handle }))),\n    })\n  const bookmarks = Bookmarks.use()\n  const isBookmarked = React.useMemo(\n    () => bookmarks?.isBookmarked('main', handle),\n    [bookmarks, handle],\n  )\n\n  return (\n    <FileView.Root>\n      <MetaTitle>{[path || 'Files', bucket]}</MetaTitle>\n\n      <div className={classes.crumbs} onCopy={copyWithoutSpaces}>\n        {renderCrumbs(getCrumbs({ bucket, path, urls }))}\n      </div>\n      <div className={classes.topBar}>\n        <div className={classes.name}>\n          {basename(path)} <span className={classes.at}>@</span>\n          &nbsp;\n          {objExists ? ( // eslint-disable-line no-nested-ternary\n            <VersionInfo bucket={bucket} path={path} version={version} />\n          ) : version ? (\n            <M.Box component=\"span\" fontFamily=\"monospace.fontFamily\">\n              {version.substring(0, 12)}\n            </M.Box>\n          ) : (\n            'latest'\n          )}\n        </div>\n\n        <div className={classes.actions}>\n          <FileProperties className={classes.fileProperties} data={versionExistsData} />\n          {!!viewModes.modes.length && (\n            <FileView.ViewModeSelector\n              className={classes.button}\n              options={viewModes.modes.map(viewModeToSelectOption)}\n              value={viewModeToSelectOption(viewModes.mode)}\n              onChange={onViewModeChange}\n            />\n          )}\n          {!!editorState.type.brace && (\n            <FileEditor.Controls\n              disabled={editorState.saving}\n              editing={editorState.editing}\n              className={classes.button}\n              onSave={handleEditorSave}\n              onCancel={editorState.onCancel}\n              onEdit={editorState.onEdit}\n            />\n          )}\n          <FileView.AdaptiveButtonLayout\n            className={classes.button}\n            icon={isBookmarked ? 'turned_in' : 'turned_in_not'}\n            label={isBookmarked ? 'Remove from bookmarks' : 'Add to bookmarks'}\n            onClick={() => bookmarks?.toggle('main', handle)}\n          />\n          {downloadable && (\n            <FileView.DownloadButton className={classes.button} handle={handle} />\n          )}\n        </div>\n      </div>\n      {objExistsData.case({\n        _: () => <CenteredProgress />,\n        Err: (e) => {\n          if (e.code === 'Forbidden') {\n            return (\n              <Message headline=\"Access Denied\">\n                You don&apos;t have access to this object.\n              </Message>\n            )\n          }\n          // TODO: handle this more gracefully\n          throw e\n        },\n        Ok: requests.ObjectExistence.case({\n          Exists: () => (\n            <>\n              {preferences?.ui?.blocks?.code && <Code>{code}</Code>}\n              {!!analyticsBucket && !!preferences?.ui?.blocks?.analytics && (\n                <Analytics {...{ analyticsBucket, bucket, path }} />\n              )}\n              {preferences?.ui?.blocks?.meta && (\n                <Meta bucket={bucket} path={path} version={version} />\n              )}\n              {editorState.editing ? (\n                <Section icon=\"text_fields\" heading=\"Edit content\" defaultExpanded>\n                  <FileEditor.Editor\n                    disabled={editorState.saving}\n                    error={editorState.error}\n                    handle={handle}\n                    onChange={editorState.onChange}\n                    type={editorState.type}\n                  />\n                </Section>\n              ) : (\n                <Section icon=\"remove_red_eye\" heading=\"Preview\" defaultExpanded>\n                  {versionExistsData.case({\n                    _: () => <CenteredProgress />,\n                    Err: (e) => {\n                      throw e\n                    },\n                    Ok: withPreview(renderPreview(viewModes.handlePreviewResult)),\n                  })}\n                </Section>\n              )}\n            </>\n          ),\n          _: () =>\n            editorState.editing ? (\n              <Section icon=\"text_fields\" heading=\"Edit content\" defaultExpanded>\n                <FileEditor.Editor\n                  disabled={editorState.saving}\n                  error={editorState.error}\n                  type={editorState.type}\n                  empty\n                  handle={handle}\n                  onChange={editorState.onChange}\n                />\n              </Section>\n            ) : (\n              <>\n                <Message headline=\"No Such Object\">\n                  <FileEditor.AddFileButton onClick={editorState.onEdit} />\n                </Message>\n              </>\n            ),\n        }),\n      })}\n    </FileView.Root>\n  )\n}\n","import * as React from 'react'\nimport * as M from '@material-ui/core'\n\nimport * as Preview from 'components/Preview'\n\nconst Message = M.styled('div')({\n  textAlign: 'center',\n  width: '100%',\n})\n\nconst renderMessage = ({ heading, body, action }) => (\n  <Message>\n    {!!heading && (\n      <M.Typography variant=\"h6\" gutterBottom>\n        {heading}\n      </M.Typography>\n    )}\n    {!!body && (\n      <M.Typography variant=\"body1\" gutterBottom>\n        {body}\n      </M.Typography>\n    )}\n    {!!action && action}\n  </Message>\n)\n\nconst renderProgress = () => (\n  <Message>\n    <M.CircularProgress />\n  </Message>\n)\n\nexport default (onData) => Preview.display({ renderMessage, renderProgress, onData })\n","import * as R from 'ramda'\nimport * as React from 'react'\nimport * as uuid from 'uuid'\n\nimport tagged from 'utils/tagged'\nimport useMemoEq from 'utils/useMemoEq'\n\nexport const Paint = tagged(['Color', 'Server', 'None'])\n\nexport const pointsToSVG = (points) => points.map(({ x, y }) => `${x} ${y}`).join(' ')\n\nconst memoEq = (fn) => (input) => useMemoEq(input, fn)\n\nexport const usePaint = memoEq(\n  R.pipe(\n    (paint) => {\n      if (Paint.is(paint)) {\n        const id = uuid.v1()\n        return (fn) => fn(paint, id)\n      }\n      // assuming object if not array\n      const map = Array.isArray(paint) ? R.addIndex(R.map) : R.mapObjIndexed\n      const ids = map(() => uuid.v1(), paint)\n      return (fn) => map((p, k) => fn(p, ids[k]), paint)\n    },\n    (map) =>\n      map(\n        Paint.case({\n          Color: (value) => ({ ref: value, def: null }),\n          Server: (el, id) => ({\n            ref: `url(#${id})`,\n            def: React.cloneElement(el, { id, key: id }),\n          }),\n          None: () => ({ ref: 'none', def: null }),\n        }),\n      ),\n  ),\n)\n"],"names":["Sparkline","data","onCursor","width","height","stroke","SVG","fill","contourThickness","contourStroke","extendL","extendR","cursorLineThickness","cursorLineExtendUp","cursorLineExtendDown","cursorLineStroke","cursorCircleThickness","cursorCircleR","cursorCircleFill","cursorCircleStroke","padding","px","py","pt","pb","pl","pr","boxProps","props","cursor","showCursor","hideCursor","handleMove","e","rect","currentTarget","getBoundingClientRect","pos","clientX","x","step","length","idx","Math","round","handleLeave","contourShape","max","vfactor","hfactor","dataPoints","map","d","i","y","contourStrokePaint","cursorLineStrokePaint","cursorCircleFillPaint","cursorCircleStrokePaint","fillPaint","fillShape","None","_","cursorPos","component","viewBox","onMouseLeave","onMouseMove","def","points","ref","pointerEvents","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","cx","cy","r","useFilePropertyStyles","t","root","alignItems","display","icon","color","palette","text","hint","fontSize","marginRight","FileProperty","className","children","classes","variant","FilePropertiesSkeleton","useFilePropertiesStyles","animate","property","marginLeft","spacing","FileProperties","lastModified","size","today","Date","formattedDate","getFullYear","formattedSize","title","toLocaleString","Wrapper","case","Ok","Exists","Err","message","VoilaResource","name","persist","fetch","registryUrl","VOILA_PING_URL","then","resp","ok","catch","console","debug","MODES","igv","json","jupyter","vega","voila","isVegaSchema","schema","match","viewModeToSelectOption","m","toString","valueOf","useViewModes","path","modeInput","packageHandle","voilaAvailable","Config","suspend","previewResult","setPreviewResult","handlePreviewResult","result","AsyncResult","modes","extname","Vega","spec","$schema","Json","rendered","Array","isArray","tracks","isIgvTracks","__","mode","includes","HOUR","MINUTE","DAY","intl","Intl","RelativeTimeFormat","numeric","Relative","value","setT","timerId","window","setInterval","clearInterval","date","baseDate","delta","now","years","abs","format","months","days","hours","minutes","relativify","Plural","zero","one","other","rules","intlFunc","numberToRule","pluralify","useVersionInfoStyles","typography","version","mono","fontFamily","monospace","list","maxWidth","VersionInfo","bucket","s3","urls","cfg","push","containerRef","anchor","setAnchor","opened","setOpened","open","close","getHttpsUri","v","key","id","copyHttpsUri","preventDefault","container","current","copyCliArgs","getCliArgs","onClick","substring","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","versions","button","selected","isLatest","Link","to","bucketFile","primary","secondary","noDownload","deleteMarker","archived","url","href","xsDown","lineHeight","justifyContent","Meta","Analytics","analyticsBucket","setCursor","defaultExpanded","heading","counts","total","gradientUnits","offset","stopColor","CenteredProgress","textAlign","useStyles","actions","at","crumbs","body1","overflowWrap","fileProperties","marginTop","breakpoints","down","topBar","marginBottom","File","params","encodedPath","location","search","history","preferences","code","label","hl","contents","basename","resetKey","setResetKey","objExistsData","versionExistsData","objExists","downloadable","deleted","versionId","fileVersionId","viewModes","onViewModeChange","handle","editorState","onSave","handleEditorSave","previewOptions","context","bookmarks","isBookmarked","onCopy","segPath","bucketDir","up","getCrumbs","options","onChange","type","brace","disabled","saving","editing","onCancel","onEdit","toggle","headline","callback","ui","blocks","analytics","meta","error","h","DoesNotExist","empty","Message","renderMessage","body","action","gutterBottom","renderProgress","onData","fn","Paint","pointsToSVG","join","usePaint","paint","is","ids","p","k","Color","Server","el","input"],"sourceRoot":""}