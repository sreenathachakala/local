{"version":3,"file":"5578.0b3eb951971a3b864985.chunk.js","mappings":"yVAYMA,EAAsB,WAAM,uBAACC,EAAA,EAAW,CAACC,MAAM,kBAAnB,EAE5BC,EAAgB,KAAU,WAAM,4EAA2BH,GAC3DI,EAAU,KAAU,WAAM,sFAAqBJ,GAC/CK,EAAO,KAAU,WAAM,kEAAkBL,GACzCM,EAAW,KAAU,WAAM,kEAAsBN,GACjDO,EAAS,KAAU,WAAM,sFAAoBP,GAE7C,GAAgB,QACpB,WAAM,kBACJ,OACE,gBAAC,IAAK,CAACQ,GAAI,GACT,gBAAC,IAAY,CAACC,QAAQ,KAAKC,MAAM,SAASC,cAAY,uBAGtD,gBAAC,IAAY,CAACD,MAAM,UAAQ,+BALhC,CADI,GASN,sBAGIE,EAAe,KAAa,SAACC,GAAM,OACvCC,KAAM,CACJC,UAAWF,EAAEG,QAAQ,GACrBC,SAAU,KAH2B,IAOzC,SAASC,EAAOC,GACd,IAAMC,EAAUR,IAChB,OAAO,gBAAC,KAAK,SAACQ,QAASA,EAASC,UAAW,QAAaF,GAC1D,CAEA,IAAMG,EAAY,KAAa,SAACT,GAAM,OACpCU,OAAQ,CACNC,gBAAiBX,EAAEY,QAAQC,OAAOC,MAClCzB,MAAOW,EAAEY,QAAQG,gBAAgBf,EAAEY,QAAQC,OAAOC,QAHhB,IAWtC,SAASE,EAAY,G,IAAE,IAAAC,QAAAA,OAAO,IAAG,GAAK,EAAEC,EAAQ,WACtCC,EAAYC,EAAA,KAAY,QACxBC,EAASC,EAAA,KAAiB,KAC5Bf,EAAUE,IAChB,OACE,gBAACc,EAAA,GAAM,CACLC,IACE,gCACE,gBAAC,IAAQ,CAACC,SAAS,SAASC,UAAWnB,EAAQG,QAC7C,gBAAC,IAAM,CAACiB,MAAOV,EAASW,UAAQ,GAC9B,gBAACvB,EAAM,CAACwB,MAAM,kBAAkBF,MAAM,QAAQG,GAAIT,EAAKU,eACvD,gBAAC1B,EAAM,CAACwB,MAAM,UAAUF,MAAM,UAAUG,GAAIT,EAAKW,iBAChDb,GAAW,gBAACd,EAAM,CAACwB,MAAM,OAAOF,MAAM,OAAOG,GAAIT,EAAKY,cACvD,gBAAC5B,EAAM,CAACwB,MAAM,SAASF,MAAM,SAASG,GAAIT,EAAKa,gBAC/C,gBAAC7B,EAAM,CAACwB,MAAM,WAAWF,MAAM,WAAWG,GAAIT,EAAKc,oBAGvD,gBAAC,IAAW,CAACC,SAAS,MAAMlB,KAKtC,CAEe,SAASmB,EAAM,G,IAAEC,EAAQ,WAC9BnB,EAAYC,EAAA,KAAY,QACxBmB,EAAUjB,EAAA,KAAiB,MAE7BkB,EAAW,CACfC,MAAO,CAAEC,KAAMH,EAAMR,WAAYY,OAAO,GACxCC,QAAS,CAAEF,KAAMH,EAAMP,aAAcW,OAAO,GAC5CE,KAAM,CAAEH,KAAMH,EAAMN,UAAWU,OAAO,GACtCG,SAAU,CAAEJ,KAAMH,EAAMJ,cAAeQ,OAAO,GAC9CI,OAAQ,CAAEL,KAAMH,EAAML,YAAaS,OAAO,IAa5C,OACE,gBAAC3B,EAAW,CAACC,QAXI,SAAC+B,GAClB,IAAuC,UAAAC,OAAOC,QAAQV,GAAf,eAErC,IAFS,WAACvB,EAAO,KAAEkC,EAAa,KAEb,MADD,GAAuBC,OAAOD,GAC7B,eAAU,CAAxB,IAAME,EAAI,KACb,GAAI,KAAaL,EAAUK,GAAO,OAAOpC,C,CAG7C,OAAO,CACT,CAGwBqC,CAAWhB,EAASU,WACxC,gBAAC,EAAa,CAACO,IAAKC,KAAKC,UAAUnB,IACjC,gBAAC,KAAS,KACR,gBAAC,KAAQ,CAACI,KAAMH,EAAMR,WAAYvB,UAAWlB,EAAeqD,OAAK,EAACe,QAAM,IACxE,gBAAC,KAAQ,CAAChB,KAAMH,EAAMP,aAAcxB,UAAWjB,EAASoD,OAAK,IAC5DxB,GAAW,gBAAC,KAAQ,CAACuB,KAAMH,EAAMN,UAAWzB,UAAWhB,EAAMmD,OAAK,IACnE,gBAAC,KAAQ,CAACD,KAAMH,EAAMJ,cAAe3B,UAAWf,EAAUkD,OAAK,IAC/D,gBAAC,KAAQ,CAACD,KAAMH,EAAML,YAAa1B,UAAWd,EAAQiD,OAAK,IAC3D,gBAAC,KAAQ,CAACnC,UAAW,SAK/B,C","sources":["webpack://quilt-navigator/./app/containers/Admin/Admin.tsx"],"sourcesContent":["import * as React from 'react'\nimport * as RR from 'react-router-dom'\nimport * as M from '@material-ui/core'\n\nimport Layout from 'components/Layout'\nimport Placeholder from 'components/Placeholder'\nimport { ThrowNotFound } from 'containers/NotFoundPage'\nimport * as Config from 'utils/Config'\nimport { createBoundary } from 'utils/ErrorBoundary'\nimport * as NamedRoutes from 'utils/NamedRoutes'\nimport * as RT from 'utils/reactTools'\n\nconst SuspensePlaceholder = () => <Placeholder color=\"text.secondary\" />\n\nconst UsersAndRoles = RT.mkLazy(() => import('./UsersAndRoles'), SuspensePlaceholder)\nconst Buckets = RT.mkLazy(() => import('./Buckets'), SuspensePlaceholder)\nconst Sync = RT.mkLazy(() => import('./Sync'), SuspensePlaceholder)\nconst Settings = RT.mkLazy(() => import('./Settings'), SuspensePlaceholder)\nconst Status = RT.mkLazy(() => import('./Status'), SuspensePlaceholder)\n\nconst ErrorBoundary = createBoundary(\n  () => () =>\n    (\n      <M.Box my={4}>\n        <M.Typography variant=\"h4\" align=\"center\" gutterBottom>\n          Unexpected Error\n        </M.Typography>\n        <M.Typography align=\"center\">See the console for details</M.Typography>\n      </M.Box>\n    ),\n  'AdminErrorBoundary',\n)\n\nconst useTabStyles = M.makeStyles((t) => ({\n  root: {\n    minHeight: t.spacing(8),\n    minWidth: 120,\n  },\n}))\n\nfunction NavTab(props: M.TabProps & RR.LinkProps) {\n  const classes = useTabStyles()\n  return <M.Tab classes={classes} component={RR.Link} {...props} />\n}\n\nconst useStyles = M.makeStyles((t) => ({\n  appBar: {\n    backgroundColor: t.palette.common.white,\n    color: t.palette.getContrastText(t.palette.common.white),\n  },\n}))\n\ntype AdminLayoutProps = React.PropsWithChildren<{\n  section?: string | false\n}>\n\nfunction AdminLayout({ section = false, children }: AdminLayoutProps) {\n  const { desktop } = Config.use()\n  const { urls } = NamedRoutes.use()\n  const classes = useStyles()\n  return (\n    <Layout\n      pre={\n        <>\n          <M.AppBar position=\"static\" className={classes.appBar}>\n            <M.Tabs value={section} centered>\n              <NavTab label=\"Users and roles\" value=\"users\" to={urls.adminUsers()} />\n              <NavTab label=\"Buckets\" value=\"buckets\" to={urls.adminBuckets()} />\n              {desktop && <NavTab label=\"Sync\" value=\"sync\" to={urls.adminSync()} />}\n              <NavTab label=\"Status\" value=\"status\" to={urls.adminStatus()} />\n              <NavTab label=\"Settings\" value=\"settings\" to={urls.adminSettings()} />\n            </M.Tabs>\n          </M.AppBar>\n          <M.Container maxWidth=\"lg\">{children as React.ReactChild}</M.Container>\n        </>\n      }\n    />\n  )\n}\n\nexport default function Admin({ location }: RR.RouteComponentProps) {\n  const { desktop } = Config.use()\n  const { paths } = NamedRoutes.use()\n\n  const sections = {\n    users: { path: paths.adminUsers, exact: true },\n    buckets: { path: paths.adminBuckets, exact: true },\n    sync: { path: paths.adminSync, exact: true },\n    settings: { path: paths.adminSettings, exact: true },\n    status: { path: paths.adminStatus, exact: true },\n  }\n\n  const getSection = (pathname: string) => {\n    for (const [section, maybeVariants] of Object.entries(sections)) {\n      const variants = ([] as RR.RouteProps[]).concat(maybeVariants)\n      for (const opts of variants) {\n        if (RR.matchPath(pathname, opts)) return section\n      }\n    }\n    return false\n  }\n\n  return (\n    <AdminLayout section={getSection(location.pathname)}>\n      <ErrorBoundary key={JSON.stringify(location)}>\n        <RR.Switch>\n          <RR.Route path={paths.adminUsers} component={UsersAndRoles} exact strict />\n          <RR.Route path={paths.adminBuckets} component={Buckets} exact />\n          {desktop && <RR.Route path={paths.adminSync} component={Sync} exact />}\n          <RR.Route path={paths.adminSettings} component={Settings} exact />\n          <RR.Route path={paths.adminStatus} component={Status} exact />\n          <RR.Route component={ThrowNotFound} />\n        </RR.Switch>\n      </ErrorBoundary>\n    </AdminLayout>\n  )\n}\n"],"names":["SuspensePlaceholder","Placeholder","color","UsersAndRoles","Buckets","Sync","Settings","Status","my","variant","align","gutterBottom","useTabStyles","t","root","minHeight","spacing","minWidth","NavTab","props","classes","component","useStyles","appBar","backgroundColor","palette","common","white","getContrastText","AdminLayout","section","children","desktop","Config","urls","NamedRoutes","Layout","pre","position","className","value","centered","label","to","adminUsers","adminBuckets","adminSync","adminStatus","adminSettings","maxWidth","Admin","location","paths","sections","users","path","exact","buckets","sync","settings","status","pathname","Object","entries","maybeVariants","concat","opts","getSection","key","JSON","stringify","strict"],"sourceRoot":""}