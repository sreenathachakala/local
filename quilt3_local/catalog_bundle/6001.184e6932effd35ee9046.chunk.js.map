{"version":3,"file":"6001.184e6932effd35ee9046.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./node_modules/brace/mode/csound_score.js"],"sourcesContent":["ace.define(\"ace/mode/csound_preprocessor_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\n\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar CsoundPreprocessorHighlightRules = function() {\n\n    this.semicolonComments = {\n        token : \"comment.line.semicolon.csound\",\n        regex : \";.*$\"\n    };\n\n    this.comments = [\n        {\n            token : \"punctuation.definition.comment.begin.csound\",\n            regex : \"/\\\\*\",\n            push  : [\n                {\n                    token : \"punctuation.definition.comment.end.csound\",\n                    regex : \"\\\\*/\",\n                    next  : \"pop\"\n                }, {\n                    defaultToken: \"comment.block.csound\"\n                }\n            ]\n        }, {\n            token : \"comment.line.double-slash.csound\",\n            regex : \"//.*$\"\n        },\n        this.semicolonComments\n    ];\n\n    this.macroUses = [\n        {\n            token : [\"entity.name.function.preprocessor.csound\", \"punctuation.definition.macro-parameter-value-list.begin.csound\"],\n            regex : /(\\$[A-Z_a-z]\\w*\\.?)(\\()/,\n            next  : \"macro parameter value list\"\n        }, {\n            token : \"entity.name.function.preprocessor.csound\",\n            regex : /\\$[A-Z_a-z]\\w*(?:\\.|\\b)/\n        }\n    ];\n\n    this.numbers = [\n        {\n            token : \"constant.numeric.float.csound\",\n            regex : /(?:\\d+[Ee][+-]?\\d+)|(?:\\d+\\.\\d*|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?/\n        }, {\n            token : [\"storage.type.number.csound\", \"constant.numeric.integer.hexadecimal.csound\"],\n            regex : /(0[Xx])([0-9A-Fa-f]+)/\n        }, {\n            token : \"constant.numeric.integer.decimal.csound\",\n            regex : /\\d+/\n        }\n    ];\n\n    this.bracedStringContents = [\n        {\n            token : \"constant.character.escape.csound\",\n            regex : /\\\\(?:[\\\\abnrt\"]|[0-7]{1,3})/\n        },\n        {\n            token : \"constant.character.placeholder.csound\",\n            regex : /%[#0\\- +]*\\d*(?:\\.\\d+)?[diuoxXfFeEgGaAcs]/\n        }, {\n            token : \"constant.character.escape.csound\",\n            regex : /%%/\n        }\n    ];\n\n    this.quotedStringContents = [\n        this.macroUses,\n        this.bracedStringContents\n    ];\n\n    var start = [\n        this.comments,\n\n        {\n            token : \"keyword.preprocessor.csound\",\n            regex : /#(?:e(?:nd(?:if)?|lse)\\b|##)|@@?[ \\t]*\\d+/\n        }, {\n            token : \"keyword.preprocessor.csound\",\n            regex : /#include/,\n            push  : [\n                this.comments,\n                {\n                    token : \"string.csound\",\n                    regex : /([^ \\t])(?:.*?\\1)/,\n                    next  : \"pop\"\n                }\n            ]\n        }, {\n            token : \"keyword.preprocessor.csound\",\n            regex : /#[ \\t]*define/,\n            next  : \"define directive\"\n        }, {\n            token : \"keyword.preprocessor.csound\",\n            regex : /#(?:ifn?def|undef)\\b/,\n            next  : \"macro directive\"\n        },\n\n        this.macroUses\n    ];\n\n    this.$rules = {\n        \"start\": start,\n\n        \"define directive\": [\n            this.comments,\n            {\n                token : \"entity.name.function.preprocessor.csound\",\n                regex : /[A-Z_a-z]\\w*/\n            }, {\n                token : \"punctuation.definition.macro-parameter-name-list.begin.csound\",\n                regex : /\\(/,\n                next  : \"macro parameter name list\"\n            }, {\n                token : \"punctuation.definition.macro.begin.csound\",\n                regex : /#/,\n                next  : \"macro body\"\n            }\n        ],\n        \"macro parameter name list\": [\n            {\n                token : \"variable.parameter.preprocessor.csound\",\n                regex : /[A-Z_a-z]\\w*/\n            }, {\n                token : \"punctuation.definition.macro-parameter-name-list.end.csound\",\n                regex : /\\)/,\n                next  : \"define directive\"\n            }\n        ],\n        \"macro body\": [\n            {\n                token : \"constant.character.escape.csound\",\n                regex : /\\\\#/\n            }, {\n                token : \"punctuation.definition.macro.end.csound\",\n                regex : /#/,\n                next  : \"start\"\n            },\n            start\n        ],\n\n        \"macro directive\": [\n            this.comments,\n            {\n                token : \"entity.name.function.preprocessor.csound\",\n                regex : /[A-Z_a-z]\\w*/,\n                next  : \"start\"\n            }\n        ],\n\n        \"macro parameter value list\": [\n            {\n                token : \"punctuation.definition.macro-parameter-value-list.end.csound\",\n                regex : /\\)/,\n                next  : \"start\"\n            }, {\n                token : \"punctuation.definition.string.begin.csound\",\n                regex : /\"/,\n                next  : \"macro parameter value quoted string\"\n            }, this.pushRule({\n                token : \"punctuation.macro-parameter-value-parenthetical.begin.csound\",\n                regex : /\\(/,\n                next  : \"macro parameter value parenthetical\"\n            }), {\n                token : \"punctuation.macro-parameter-value-separator.csound\",\n                regex : \"[#']\"\n            }\n        ],\n        \"macro parameter value quoted string\": [\n            {\n                token : \"constant.character.escape.csound\",\n                regex : /\\\\[#'()]/\n            }, {\n                token : \"invalid.illegal.csound\",\n                regex : /[#'()]/\n            }, {\n                token : \"punctuation.definition.string.end.csound\",\n                regex : /\"/,\n                next  : \"macro parameter value list\"\n            },\n            this.quotedStringContents,\n            {\n                defaultToken: \"string.quoted.csound\"\n            }\n        ],\n        \"macro parameter value parenthetical\": [\n            {\n                token : \"constant.character.escape.csound\",\n                regex : /\\\\\\)/\n            }, this.popRule({\n                token : \"punctuation.macro-parameter-value-parenthetical.end.csound\",\n                regex : /\\)/\n            }), this.pushRule({\n                token : \"punctuation.macro-parameter-value-parenthetical.begin.csound\",\n                regex : /\\(/,\n                next  : \"macro parameter value parenthetical\"\n            }),\n            start\n        ]\n    };\n};\n\noop.inherits(CsoundPreprocessorHighlightRules, TextHighlightRules);\n\n(function() {\n\n    this.pushRule = function(params) {\n        return {\n            regex : params.regex, onMatch: function(value, currentState, stack, line) {\n                if (stack.length === 0)\n                    stack.push(currentState);\n                if (Array.isArray(params.next)) {\n                    for (var i = 0; i < params.next.length; i++) {\n                        stack.push(params.next[i]);\n                    }\n                } else {\n                    stack.push(params.next);\n                }\n                this.next = stack[stack.length - 1];\n                return params.token;\n            },\n            get next() { return Array.isArray(params.next) ? params.next[params.next.length - 1] : params.next; },\n            set next(next) {\n                if (Array.isArray(params.next)) {\n                    var oldNext = params.next[params.next.length - 1];\n                    var oldNextIndex = oldNext.length - 1;\n                    var newNextIndex = next.length - 1;\n                    if (newNextIndex > oldNextIndex) {\n                        while (oldNextIndex >= 0 && newNextIndex >= 0) {\n                            if (oldNext.charAt(oldNextIndex) !== next.charAt(newNextIndex)) {\n                                var prefix = next.substr(0, newNextIndex);\n                                for (var i = 0; i < params.next.length; i++) {\n                                    params.next[i] = prefix + params.next[i];\n                                }\n                                break;\n                            }\n                            oldNextIndex--;\n                            newNextIndex--;\n                        }\n                    }\n                } else {\n                    params.next = next;\n                }\n            },\n            get token() { return params.token; }\n        };\n    };\n\n    this.popRule = function(params) {\n        return {\n            regex : params.regex, onMatch: function(value, currentState, stack, line) {\n                stack.pop();\n                if (params.next) {\n                    stack.push(params.next);\n                    this.next = stack[stack.length - 1];\n                } else {\n                    this.next = stack.length > 1 ? stack[stack.length - 1] : stack.pop();\n                }\n                return params.token;\n            }\n        };\n    };\n\n}).call(CsoundPreprocessorHighlightRules.prototype);\n\nexports.CsoundPreprocessorHighlightRules = CsoundPreprocessorHighlightRules;\n});\n\nace.define(\"ace/mode/csound_score_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/csound_preprocessor_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\n\nvar CsoundPreprocessorHighlightRules = acequire(\"./csound_preprocessor_highlight_rules\").CsoundPreprocessorHighlightRules;\n\nvar CsoundScoreHighlightRules = function() {\n\n    CsoundPreprocessorHighlightRules.call(this);\n\n    this.quotedStringContents.push({\n        token : \"invalid.illegal.csound-score\",\n        regex : /[^\"]*$/\n    });\n\n    var start = this.$rules.start;\n    start.push(\n        {\n            token : \"keyword.control.csound-score\",\n            regex : /[abCdefiqstvxy]/\n        }, {\n            token : \"invalid.illegal.csound-score\",\n            regex : /w/\n        }, {\n            token : \"constant.numeric.language.csound-score\",\n            regex : /z/\n        }, {\n            token : [\"keyword.control.csound-score\", \"constant.numeric.integer.decimal.csound-score\"],\n            regex : /([nNpP][pP])(\\d+)/\n        }, {\n            token : \"keyword.other.csound-score\",\n            regex : /[mn]/,\n            push  : [\n                {\n                    token : \"empty\",\n                    regex : /$/,\n                    next  : \"pop\"\n                },\n                this.comments,\n                {\n                    token : \"entity.name.label.csound-score\",\n                    regex : /[A-Z_a-z]\\w*/\n                }\n            ]\n        }, {\n            token : \"keyword.preprocessor.csound-score\",\n            regex : /r\\b/,\n            next  : \"repeat section\"\n        },\n\n        this.numbers,\n\n        {\n            token : \"keyword.operator.csound-score\",\n            regex : \"[!+\\\\-*/^%&|<>#~.]\"\n        },\n\n        this.pushRule({\n            token : \"punctuation.definition.string.begin.csound-score\",\n            regex : /\"/,\n            next  : \"quoted string\"\n        }),\n\n        this.pushRule({\n            token : \"punctuation.braced-loop.begin.csound-score\",\n            regex : /{/,\n            next  : \"loop after left brace\"\n        })\n    );\n\n    this.addRules({\n        \"repeat section\": [\n            {\n                token : \"empty\",\n                regex : /$/,\n                next  : \"start\"\n            },\n            this.comments,\n            {\n                token : \"constant.numeric.integer.decimal.csound-score\",\n                regex : /\\d+/,\n                next  : \"repeat section before label\"\n            }\n        ],\n        \"repeat section before label\": [\n            {\n                token : \"empty\",\n                regex : /$/,\n                next  : \"start\"\n            },\n            this.comments,\n            {\n                token : \"entity.name.label.csound-score\",\n                regex : /[A-Z_a-z]\\w*/,\n                next  : \"start\"\n            }\n        ],\n\n        \"quoted string\": [\n            this.popRule({\n                token : \"punctuation.definition.string.end.csound-score\",\n                regex : /\"/\n            }),\n            this.quotedStringContents,\n            {\n                defaultToken: \"string.quoted.csound-score\"\n            }\n        ],\n\n        \"loop after left brace\": [\n            this.popRule({\n                token : \"constant.numeric.integer.decimal.csound-score\",\n                regex : /\\d+/,\n                next  : \"loop after repeat count\"\n            }),\n            this.comments,\n            {\n                token : \"invalid.illegal.csound\",\n                regex : /\\S.*/\n            }\n        ],\n        \"loop after repeat count\": [\n            this.popRule({\n                token : \"entity.name.function.preprocessor.csound-score\",\n                regex : /[A-Z_a-z]\\w*\\b/,\n                next  : \"loop after macro name\"\n            }),\n            this.comments,\n            {\n                token : \"invalid.illegal.csound\",\n                regex : /\\S.*/\n            }\n        ],\n        \"loop after macro name\": [\n            start,\n            this.popRule({\n                token : \"punctuation.braced-loop.end.csound-score\",\n                regex : /}/\n            })\n        ]\n    });\n\n    this.normalizeRules();\n};\n\noop.inherits(CsoundScoreHighlightRules, CsoundPreprocessorHighlightRules);\n\nexports.CsoundScoreHighlightRules = CsoundScoreHighlightRules;\n});\n\nace.define(\"ace/mode/csound_score\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/csound_score_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar CsoundScoreHighlightRules = acequire(\"./csound_score_highlight_rules\").CsoundScoreHighlightRules;\n\nvar Mode = function() {\n    this.HighlightRules = CsoundScoreHighlightRules;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \";\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","CsoundPreprocessorHighlightRules","this","semicolonComments","token","regex","comments","push","next","defaultToken","macroUses","numbers","bracedStringContents","quotedStringContents","start","$rules","pushRule","popRule","inherits","params","onMatch","value","currentState","stack","line","length","Array","isArray","i","oldNext","oldNextIndex","newNextIndex","charAt","prefix","substr","pop","call","prototype","CsoundScoreHighlightRules","addRules","normalizeRules","TextMode","Mode","HighlightRules","lineCommentStart","blockComment","end"],"sourceRoot":""}