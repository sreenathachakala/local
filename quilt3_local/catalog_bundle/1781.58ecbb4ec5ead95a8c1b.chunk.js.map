{"version":3,"file":"1781.58ecbb4ec5ead95a8c1b.chunk.js","mappings":"uNAMMA,EAAY,KAAa,WAAM,OACnCC,KAAM,CACJC,SAAU,WACVC,OAAQ,GAHyB,IAgBrC,SAASC,EAAI,GAAE,IAAAC,EAAO,UAAKC,GAAK,UAAnB,aACLC,EAAe,SAAoC,MACnDC,EAAUR,IAEV,EAAoB,WAA6B,MAAhDS,EAAK,KAAEC,EAAQ,KAwBtB,OAtBA,aAAgB,WACd,IAAIC,GACJ,Y,qGACE,IAAKJ,EAAaK,QAAS,U,iBAEf,O,sBAAA,GAAM,kBAAkBL,EAAaK,QAASP,I,OACxD,OADAM,EAAU,SACH,CAAP,EAAO,WAAM,OAAAA,GAAW,kBAAkBA,EAA7B,G,OAUb,O,WAPAE,QAAQJ,MAAM,GACV,aAAaK,MACfJ,EAAS,GAETA,EAAS,IAAII,MAAM,eAGd,CAAP,EAAO,WAAM,OAAAJ,EAAS,KAAT,G,wBAGjBK,EACF,GAAG,CAACR,EAAcF,IAEdI,EAEA,uBAAKO,IAAI,aACP,gBAAC,IAAY,CAACC,QAAQ,KAAKC,cAAY,uBAGvC,gBAAC,IAAY,CAACD,QAAQ,QAAQC,cAAY,iDAGvB,eAAlBT,EAAMU,SACL,gBAAC,IAAY,CAACF,QAAQ,QAAQC,cAAY,GACxC,gBAAC,IAAI,KAAET,EAAMU,WAMhB,gCAAKC,UAAWZ,EAAQP,KAAMoB,IAAKd,GAAkBD,GAC9D,CAEA,iBAAgB,EAA2BA,G,IAAzBD,EAAO,UAA6D,OACpF,gBAACD,GAAG,SAACC,QAASA,GAAaC,GAC5B,C","sources":["webpack://quilt-navigator/./app/components/Preview/renderers/Igv/Igv.tsx"],"sourcesContent":["import igv from 'igv'\nimport * as React from 'react'\nimport * as M from '@material-ui/core'\n\nimport Code from 'components/Code'\n\nconst useStyles = M.makeStyles(() => ({\n  root: {\n    position: 'relative',\n    zIndex: 1,\n  },\n}))\n\ninterface IgvEssential {\n  options: igv.IgvBrowserOptions\n}\n\nexport interface IgvProps extends React.HTMLProps<HTMLDivElement> {\n  options: igv.IgvBrowserOptions\n}\n\n// XXX: consider using components/EChartsChart (may require some adjustments)\nfunction Igv({ options, ...props }: IgvProps) {\n  const containerRef = React.useRef<HTMLDivElement | null>(null)\n  const classes = useStyles()\n\n  const [error, setError] = React.useState<Error | null>(null)\n\n  React.useEffect(() => {\n    let browser: igv.IgvBrowser\n    async function initIgv() {\n      if (!containerRef.current) return\n      try {\n        browser = await igv.createBrowser(containerRef.current, options)\n        return () => browser && igv.removeBrowser(browser)\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e)\n        if (e instanceof Error) {\n          setError(e)\n        } else {\n          setError(new Error('Unexpected'))\n        }\n        // XXX: should NOT set state in dispose callback\n        return () => setError(null)\n      }\n    }\n    initIgv()\n  }, [containerRef, options])\n\n  if (error)\n    return (\n      <div key=\"igv-error\">\n        <M.Typography variant=\"h6\" gutterBottom>\n          Unexpected Error\n        </M.Typography>\n        <M.Typography variant=\"body1\" gutterBottom>\n          Something went wrong while loading preview\n        </M.Typography>\n        {error.message !== 'Unexpected' && (\n          <M.Typography variant=\"body1\" gutterBottom>\n            <Code>{error.message}</Code>\n          </M.Typography>\n        )}\n      </div>\n    )\n\n  return <div className={classes.root} ref={containerRef} {...props} />\n}\n\nexport default ({ options }: IgvEssential, props: React.HTMLProps<HTMLDivElement>) => (\n  <Igv options={options} {...props} />\n)\n"],"names":["useStyles","root","position","zIndex","Igv","options","props","containerRef","classes","error","setError","browser","current","console","Error","initIgv","key","variant","gutterBottom","message","className","ref"],"sourceRoot":""}