{"version":3,"file":"2216.c2e05c79a296ff628a47.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./node_modules/brace/mode/jack.js"],"sourcesContent":["ace.define(\"ace/mode/jack_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar JackHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"string\",\n                regex : '\"',\n                next  : \"string2\"\n            }, {\n                token : \"string\",\n                regex : \"'\",\n                next  : \"string1\"\n            }, {\n                token : \"constant.numeric\", // hex\n                regex: \"-?0[xX][0-9a-fA-F]+\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"(?:0|[-+]?[1-9][0-9]*)\\\\b\"\n            }, {\n                token : \"constant.binary\",\n                regex : \"<[0-9A-Fa-f][0-9A-Fa-f](\\\\s+[0-9A-Fa-f][0-9A-Fa-f])*>\"\n            }, {\n                token : \"constant.language.boolean\",\n                regex : \"(?:true|false)\\\\b\"\n            }, {\n                token : \"constant.language.null\",\n                regex : \"null\\\\b\"\n            }, {\n                token : \"storage.type\",\n                regex: \"(?:Integer|Boolean|Null|String|Buffer|Tuple|List|Object|Function|Coroutine|Form)\\\\b\"\n            }, {\n                token : \"keyword\",\n                regex : \"(?:return|abort|vars|for|delete|in|is|escape|exec|split|and|if|elif|else|while)\\\\b\"\n            }, {\n                token : \"language.builtin\",\n                regex : \"(?:lines|source|parse|read-stream|interval|substr|parseint|write|print|range|rand|inspect|bind|i-values|i-pairs|i-map|i-filter|i-chunk|i-all\\\\?|i-any\\\\?|i-collect|i-zip|i-merge|i-each)\\\\b\"\n            }, {\n                token : \"comment\",\n                regex : \"--.*$\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"storage.form\",\n                regex : \"@[a-z]+\"\n            }, {\n                token : \"constant.other.symbol\",\n                regex : ':+[a-zA-Z_]([-]?[a-zA-Z0-9_])*[?!]?'\n            }, {\n                token : \"variable\",\n                regex : '[a-zA-Z_]([-]?[a-zA-Z0-9_])*[?!]?'\n            }, {\n                token : \"keyword.operator\",\n                regex : \"\\\\|\\\\||\\\\^\\\\^|&&|!=|==|<=|<|>=|>|\\\\+|-|\\\\*|\\\\/|\\\\^|\\\\%|\\\\#|\\\\!\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"string1\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|['\"\\\\\\/bfnrt])/\n            }, {\n                token : \"string\",\n                regex : \"[^'\\\\\\\\]+\"\n            }, {\n                token : \"string\",\n                regex : \"'\",\n                next  : \"start\"\n            }, {\n                token : \"string\",\n                regex : \"\",\n                next  : \"start\"\n            }\n        ],\n        \"string2\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|['\"\\\\\\/bfnrt])/\n            }, {\n                token : \"string\",\n                regex : '[^\"\\\\\\\\]+'\n            }, {\n                token : \"string\",\n                regex : '\"',\n                next  : \"start\"\n            }, {\n                token : \"string\",\n                regex : \"\",\n                next  : \"start\"\n            }\n        ]\n    };\n    \n};\n\noop.inherits(JackHighlightRules, TextHighlightRules);\n\nexports.JackHighlightRules = JackHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/jack\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/jack_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar HighlightRules = acequire(\"./jack_highlight_rules\").JackHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CstyleBehaviour = acequire(\"./behaviour/cstyle\").CstyleBehaviour;\nvar CStyleFoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = HighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"--\";\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n\n    this.$id = \"ace/mode/jack\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","JackHighlightRules","this","$rules","token","regex","next","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","match","getLine","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","HighlightRules","CstyleBehaviour","CStyleFoldMode","$outdent","$behaviour","foldingRules","lineCommentStart","getNextLineIndent","state","tab","$id"],"sourceRoot":""}